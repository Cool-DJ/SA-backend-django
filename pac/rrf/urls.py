from django.urls import path
from rest_framework import routers

import pac.rrf.views as views
import pac.rrf.dashboards as dashboards
import pac.rrf.pricing as pricing
import pac.rrf.tabs.request_header as request_header
import pac.rrf.tabs.request_info as request_info
import pac.rrf.tabs.request_profile as request_profile
import pac.rrf.lanes.lane_sections as lane_sections
import pac.rrf.external.spot_quote as spot_quote
import pac.rrf.lanes.request_section_lane as request_section_lane
import pac.rrf.workflow.copy_merge_workflow as workflow
import pac.rrf.workflow.assign_request as reassign
import pac.rrf.workflow.publish_request as publish
import pac.rrf.accessorials.override_behaviors as override_filters
import pac.rrf.accessorials.acc_override as acc_override
import pac.rrf.accessorials.custom_terms as custom_terms
import pac.rrf.review.review as review
import pac.rrf.contracts.contracts as contracts
from pac.rrf.review import freight_bill
import pac.rrf.workflow.comment as comment

router = routers.DefaultRouter()

router.register(r'request', views.RequestViewSet, basename='request')

urlpatterns = [

    path(
        'request/create/',
        views.CreateRequestTariff.as_view(),
        name='request-info-account-get'
    ),
    path(
        'request/copy/',
        workflow.CopyRequestTariff.as_view(http_method_names=['get', 'post']),
        name='request-info-copy-tariff'
    ),
    path(
        'request/filter/merge',
        workflow.MergeFilteredView.as_view(http_method_names=['get', 'put']),
        name='request-filter-merge'
    ),
    path(
        'request/merge/',
        workflow.MergeRequestTariff.as_view(http_method_names=['post']),
        name='request-info-merge-tariff'
    ),
    path(
        'ratebasesearch/<str:rate_base_description>/',
        views.rate_base_search_by_description_pyodbc.as_view(),
        name='rate-base-search-by-description'
    ),
    path(
        'request-information/id/<int:RequestID>/',
        request_info.RequestInfo.as_view(http_method_names=['get']),
        name='request-info-id-get'
    ),
    path(
        'request-information/id/<int:RequestID>/version/<int:version_num>/',
        request_info.RequestInfo.as_view(http_method_names=['get']),
        name='request-information-number-history-get'
    ),
    path('request-information/update/',
         request_info.RequestInfo.as_view(http_method_names=['put']),
         name='request-info-update'
         ),
    path(
        'request-profile/update/',
        request_profile.RequestProfileUpdate.as_view(),
        name='request-profile-update'
    ),
    path(
        'request-profile/<int:request_id>/',
        request_profile.RequestProfileView.as_view(http_method_names=['get']),
        name='request-profile-number-get'
    ),
    path(
        'request-profile/<int:request_id>/version/<int:version_num>/',
        request_profile.RequestProfileView.as_view(http_method_names=['get']),
        #         request_profile.RequestProfileHistory.as_view(http_method_names=['get']),
        name='request-profile-number-history-get'
    ),
    path(
        'speed-sheet-profile/',
        request_profile.RequestProfileUpdate.as_view(),
        name='speed-sheet-profile-update'
    ),
    path(
        'speed-sheet-profile/<int:request_id>/',
        request_profile.RequestProfileView.as_view(http_method_names=['get']),
        name='speed-sheet-profile-number-get'
    ),
    path(
        'speed-sheet-profile/<int:request_id>/history/<int:version_num>/',
        request_profile.RequestProfileHistory.as_view(http_method_names=['get']),
        name='speed-sheet-profile-number-history-get'
    ),
    # updated workflow endpoints
    path('user/partner-carrier/',
         views.UserByPartnerCarrierView.as_view(http_method_names=['get']),
         name='user-by-partner-carrier'
    ),
    path(
        'request/<int:request_id>/reassign/',
        reassign.ReassignRequest.as_view(http_method_names=['put']),
        name='request-reassign-workflow'
    ),
    path(
        'request/<int:request_id>/publish/',
        publish.PublishRequest.as_view(http_method_names=['put']),
        name='request-publish-workflow'
    ),
    path(
        'request/<int:request_id>/force-publish/',
        publish.ForcePublishRequest.as_view(http_method_names=['put']),
        name='request-publish-workflow'
    ),
    path(
        'request/<int:request_id>/account/',
        views.GetAccountHistoryPyodbcView.as_view(),
        name='request-account-history'
    ),
    path(
        'request/<int:request_id>/lanes/',
        views.GetRequestLanesPyodbcView.as_view(),
        name='request-lanes-list'
    ),
    path(
        'request/<int:request_id>/tariff/',
        views.GetTariffHistoryPyodbcView.as_view(),
        name='request-tariff-history'
    ),
    path(
        'request-section/request/<int:RequestID>/',
        lane_sections.LaneSection.as_view(),
        name='request-section-list'
    ),
    path(
        'request-section/<int:RequestSectionID>/',
        lane_sections.LaneSection.as_view(),
        name='request-section-delete'
    ),
    path(
        'request-section/',
        lane_sections.LaneSection.as_view(),
        name='request-section-create-update'
    ),
    path(
        'requestsection/',
        views.RequestSectionCreateUpdateDuplicateView.as_view(),
        name='request-section-create-update-duplicate'
    ),
    path(
        'requestsection/<int:request_id>/history/<int:version_num>/',
        views.RequestSectionHistoryListVersionView.as_view(),
        name='request-section-number-history-list'
    ),
    path(
        'spot-quote/generate/',
        spot_quote.SpotQuoteAPI.as_view(http_method_names=['post']),
        name='create-new-spot-quote'
    ),
    path(
        'spot-quote/retrieve/<int:SpotQuoteID>',
        spot_quote.SpotQuoteAPI.as_view(http_method_names=['get']),
        name='get-spot-quote-after-pricing'
    ),
    path(
        'request-section-lane/filter/<str:RequestSectionID>/',
        request_section_lane.RequestSectionLaneView.as_view(http_method_names=['put']),
        name='request-section-lane-list'
    ),
    path(
        'request-section-lane/filter/-1/<str:RequestID>/',
        request_section_lane.RequestSectionLaneView.as_view(http_method_names=['put']),
        name='request-section-lane-list-all-under-request'
    ),
    path(
        'request-section-lane/update-costs/<str:RequestSectionID>/',
        request_section_lane.RequestSectionLaneView.as_view(http_method_names=['put']),
        name='update-cost-values-for-request-lanes'
    ),
    path(
        'requestsectionlane/<int:request_section_lane_id>/<str:action_type>/',
        views.RequestSectionLaneListView.as_view(),
        name='request-section-lane-patch'
    ),
    path(
        'requestsectionlane/<int:request_id>/history/<int:version_num>/',
        views.RequestSectionLaneHistoryListVersionView.as_view(),
        name='request-section-lane-number-history-list'
    ),
    path(
        'request-section-lane/validate/',
        request_section_lane.RequestLaneValidator.as_view(),
        name='request-section-lane-create'
    ),
    path(
        'request-section-lane/add/',
        request_section_lane.RequestSectionLaneView.as_view(),
        name='request-section-lane-insert'
    ),
    path(
        'requestsectionlane/<int:request_section_id>/<str:orig_type>/<int:orig_id>/<str:dest_type>/<int:dest_id>/<str:lane_status>/locationtree/',
        views.GetRequestLaneLocationTreePyodbcView.as_view(),
        name='request-section-lane-location-tree'
    ),
    path(
        'requestsectionlane/search/request/<str:request_section_id>/group/<str:group_type_name>/searchterm/<str:search_term>/',
        views.SearchRequestSectionLaneGroupsWithFilterPyodbcView.as_view(),
        name='request-section-lane-search-groups-with-filter'
    ),
    path(
        'requestsectionlane/search/pointtype/<int:filter_point_type_id>/point/<int:filter_point_id>/response/<int:response_point_type_id>/searchterm/<str:search_term>/', 
        views.SearchRequestSectionLanePointsWithFilterPyodbcView.as_view(),
        name='request-section-lane-search-points-with-filter'
    ),  
    path(
        'requestsectionlane/search/points/<str:group_type>/<int:group_id>/<str:point_type>/<str:point_name>/',
        views.SearchRequestSectionLanePointsPyodbcView.as_view(),
        name='request-section-lane-search-points'
    ),
    # pac-1038
    path(
        'requestsectionlane/<int:request_section_id>/<str:template>/export/',
        views.RequestLaneExportView.as_view(),
        name='request-section-lane-export'
    ),
    # pac-1841
    # Request Section Lane Upload
    path(
        'requestsectionlane/<str:rate_type>/preprocessing/',
        views.RequestLanePreProcessingView.as_view(),
        name="request-section-lane-pre-processing"
    ),
    path('requestsectionlane/create/',
         views.CreateRequestSectionLanePyodbcView.as_view(),
         name='create-request-section-lane'
    ),
    path(
        'requestsectionlane/<int:request_section_id>/<str:rate_type>/import/',
        views.RequestLaneImportView.as_view(),
        name='request-section-lane-import'
    ),
    path(
        'requestsectionlane/pricingpoint/<int:request_section_id>/<str:rate_type>/import/',
        views.RequestLanePricingPointImportView.as_view(),
        name='request-section-lane-import'
    ),
    path(
        'requestsectionlane/<int:request_section_id>/import/confirm/',
        views.RequestLaneImportConfirmView.as_view(),
        name='request-section-lane-import-confirm'),
    path(
        'requestsectionlane/<int:request_section_id>/import/results/',
        views.ImportResults.as_view(),
        name='request-section-lane-import-results'),
    path(
        'requestsectionlane/pricingpoint/<int:request_section_id>/import/confirm/',
        views.RequestLanePricingPointImportConfirmView.as_view(),
        name='request-section-lane-pricingpoint-import-confirm'),
    path(
        'requestsectionlane/<int:request_section_id>/import/cancel/',
        views.RequestLaneImportCancelView.as_view(),
        name='request-section-lane-import-cancel'
    ),
    path(
        'requestsectionlane/<int:request_section_id>/import/status',
        views.RequestLaneImportStatusView.as_view(),
        name='request-section-lane-import-status'
    ),
    path(
        'requestsectionlane/pricingpoint/search/origin/<int:request_section_lane_id>/<str:postal_code>/',
        views.SearchOriginPostalCodesPyodbcView.as_view(),
        name='request-section-lane-pricing-point-search-origin'
    ),
    path(
        'requestsectionlane/pricingpoint/<int:request_section_id>/<str:template>/export/',
        views.RequestLanePricingPointExportView.as_view(),
        name='request-section-lane-pricing-point-export'
    ),
    path(
        'requestsectionlane/pricingpoint/search/destination/<int:request_section_lane_id>/<str:postal_code>/',
        views.SearchDestinationPostalCodesPyodbcView.as_view(),
        name='request-section-lane-pricing-point-search-destination'
    ),
    path(
        'requestsectionlane/pricingpoint/<str:rate_type>/preprocessing',
        views.RequestSectionLanePricingPointPreprocessingView.as_view(),
        name='request-section-lane-pricing-point-preprocessing'
    ),
    path(
        'requestsectionlane/pricingpoint/create/',
        views.CreateRequestSectionLanePricingPointPyodbcView.as_view(),
        name='request-section-lane-pricing-point-create'
    ),
    path(
        'request-section-lane/pricing-point/<int:request_section_lane_id>/',
        views.GetRequestSectionLanePricingPointsPyodbcView.as_view(),
        name='request-section-lane-pricing-point-get'
    ),
    path(
        'requestsectionlane/pricingpoint/<int:request_section_lane_id>/pricing-point-cost-override/',
        views.PathRequestSectionLanePricingPointCostOverridePyodbcView.as_view(),
        name='request-section-lane-pricing-point-patch'
    ),
    path(
        'requestsectionlane/pricingpoint/<int:request_section_lane_id>/history/<int:version_num>/',
        views.GetRequestSectionLanePricingPointsHistoryPyodbcView.as_view(),
        name='request-section-lane-pricing-point-history-get'
    ),
    path(
        'requestsectionlane/pricingpoint/update/',
        views.UpdateRequestSectionLanePricingPointPyodbcView.as_view(),
        name='request-section-lane-pricing-point-update'
    ),
    path(
        'requestsectionlane/pricingpoint/destination/<int:request_section_lane_pricing_point_id>/<int:destination_request_section_id>/',
        views.GetRequestSectionLanePricingPointDestinationPyodbcView.as_view(),
        name='request-section-lane-pricing-point-destination'
    ),
    path(
        'dashboard/header/<int:user_id>/',
        dashboards.GetDashboardRequestHeader.as_view(http_method_names=['get']),
        name='dashboard-header-get'
    ),
    path(
        'dashboard/filter/request/',
        dashboards.RequestFilteredView.as_view(),
        name='dashboard-filter-request'
    ),
    path(
        'dashboard/filter/review/',
        dashboards.ReviewFilteredView.as_view(),
        name='dashboard-filter-request'
    ),
    path(
        'dashboard/filter/speedsheet/',
        dashboards.SpeedsheetFilteredView.as_view(),
        name='dashboard-filter-speedsheet'
    ),
    path(
        'request/header/<int:RequestID>/',
        request_header.RequestHeader.as_view(http_method_names=['get']),
        name='request-header-get'
    ),
    path(
        'request/header/<int:RequestID>/version/<int:version_num>/',
        request_header.RequestHeader.as_view(http_method_names=['get']),
        name='request-header-get'
    ),
    path(
        'customeraccountsynch/<int:request_id>/<str:account_number>/',
        views.RequestCustomerAccountSynchronizeView.as_view(),
        name='customer-account-synchronize'
    ),
    path(
        'requesteditor/',
        views.RequestStatusRequestEditorRightView.as_view(),
        name='request-editor-rights'
    ),
    path(
        'requesteditor/update/<str:request_id>/',
        views.RequestStatusCurrentEditorUpdateView.as_view(),
        name='request-current-editor-update'
    ),
    path(
        'workflow/',
        views.WorkflowManagerView.as_view(),
        name='workflow-post'
    ),
    path(
        'pricing-engine/price-lanes/<int:request_id>/',
        pricing.PricingEngineView.as_view(http_method_names=['put']),
        name='workflow-post'
    ),
    path(
        'pricing-engine/clear-errors/<int:request_id>/',
        pricing.WorkflowErrors.as_view(http_method_names=['put']),
        name='clear-lane-errors'
    ),
    path(
        'pricing-engine/poll-queue/<int:request_id>/',
        pricing.PollPricingEngine.as_view(http_method_names=['get']),
        name='check-pending-pricing-counts'
    ),
    # Accessorial endpoints on a Request, one for each charge behavior
    path(
        'request/<int:RequestID>/accessorial_overrides/DV/<int:AccHeaderID>/',
        override_filters.DeclaredValueOverride.as_view(http_method_names=['put']),
        name='accessorial-business-standard-charge-view'
    ),
    path(
        'request/<int:RequestID>/accessorial_overrides/RC/<int:AccHeaderID>/',
        override_filters.RangeCalculationOverride.as_view(http_method_names=['put']),
        name='precosting-accessorial-business-standard-charge-view'
    ),
    path(
        'request/<int:RequestID>/accessorial_overrides/RP/<int:AccHeaderID>/',
        override_filters.RangePercentageOverride.as_view(http_method_names=['put']),
        name='accessorial-business-standard-charge-view'
    ),
    path(
        'request/<int:RequestID>/accessorial_overrides/FP/<int:AccHeaderID>/',
        override_filters.FuelPriceOverride.as_view(http_method_names=['put']),
        name='accessorial-business-standard-charge-view'
    ),
    path(
        'request/<int:RequestID>/accessorial_overrides/FL/<int:AccHeaderID>/',
        override_filters.FlatChargeOverride.as_view(http_method_names=['put']),
        name='precosting-accessorial-business-standard-charge-view'
    ),
    path(
        'accessorial_override/<str:ChargeBehaviorCode>/<int:AccOverrideID>/',
        acc_override.AccessorialOverrideAPI.as_view(http_method_names=['put']),
        name='accessorial-business-standard-charge-view'
    ),
    path(
        'accessorial_override/<str:ChargeBehaviorCode>/',
        acc_override.AccessorialOverrideAPI.as_view(http_method_names=['post']),
        name='accessorial-business-standard-charge-view'
    ),
    # Accessorial custom terms endpoints on a Request
    path(
        'request/<int:request_id>/custom_terms/email/',
        custom_terms.CustomTermsEmail.as_view(http_method_names=['post']),
        name='email-custom-terms-changes'
    ),
    path(
        'request/<int:RequestID>/accessorials/terms/',
        custom_terms.TermsAPI.as_view(http_method_names=['get', 'put', 'post']),
        name='custom-terms-list'
    ),
    path(
        'request/<int:RequestID>/accessorials/terms/<int:AccTermID>/',
        custom_terms.TermsAPI.as_view(http_method_names=['delete', 'get', 'put']),
        name='custom-terms'
    ),
    path(
        'request/<int:RequestID>/review/',
        review.ReviewAPI.as_view(http_method_names=['get', 'put']),
        name='review-request-list'
    ),
    path(
        'speed-sheet/',
        views.SpeedsheetPyodbcView.as_view(),
        name='speed-sheet-post-get-list'
    ),
    path(
        'speed-sheet/<str:request_id>/',
        views.SpeedsheetPyodbcView.as_view(),
        name='speed-sheet-get-one'
    ),
    # pac-2263
    path(
        'speed-sheet/export/<str:export_format>/<str:speed_sheet_id>',
        views.SpeedsheetExportPyodbcView.as_view(),
        name='speed-sheet-export'
    ),
    path(
        'speed-sheet/<str:speed_sheet_id>/<str:action_type>',
        views.SpeedsheetModifyPyodbcView.as_view(),
        name='speed-sheet-modify'
    ),

    path(
        'speed-sheet/<str:request_id>/requesteditor/',
        views.RequestStatusRequestEditorRightView.as_view(),
        name='request-editor-rights'
    ),
    path(
        'speed-sheet-section-lane/create/',
        views.CreateRequestSectionLanePyodbcView.as_view(),
        name='request-section-lane-create'
    ),
    path('speed-sheet-info/<int:RequestID>/update/',
         views.SpeedsheetInformationUpdateView.as_view(),
         name='speed-sheet-update'
         ),
    path(
        'initiate-rrf/',
        views.InitiateRRFView.as_view(),
        name='initiate-rrf'
    ),

    path('request-contract/<str:language>/<int:RequestID>/',
         contracts.GeneratePdf.as_view(http_method_names=['get']),
         name='generate-pdf'
         ),
    path(
        'freight-bill/',
        freight_bill.FreightBillWarningAPI.as_view(http_method_names=['get']),
        name='freight-bill-list'
    ),
    path(
        'request/comment/',
        comment.CommentAPI.as_view(http_method_names=['get', 'post', 'put']),
        name='request-comment-list'
    ),
    path(
        'request/comment/<int:CommentID>/<int:RequestID>/',
        comment.CommentAPI.as_view(http_method_names=['get']),
        name='request-comment'
    ),
    path(
        'comment/filter/<int:RequestID>/<int:ParentCommentID>/',
        comment.CommentAPI.as_view(),
        name='comment-filter'
    ),
]
urlpatterns += router.urls
