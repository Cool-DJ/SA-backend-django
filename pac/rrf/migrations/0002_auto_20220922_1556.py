# Generated by Django 2.1.13 on 2022-09-22 18:56

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pac.rrf.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0002_auto_20220510_1629'),
        ('pac', '0002_auto_20220922_1556'),
        ('rrf', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccChargeBehavior',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('acc_charge_behavior_id', models.BigAutoField(db_column='AccChargeBehaviorID', primary_key=True, serialize=False)),
                ('tm_charge_behavior_code', models.TextField(db_column='TMChargeBehaviorCode', default=None, max_length=40, null=True)),
                ('acc_charge_behavior', models.TextField(db_column='AccChargeBehavior', default=None, max_length=10, null=True)),
            ],
            options={
                'verbose_name_plural': 'AccChargeBehavior',
                'db_table': 'AccChargeBehavior',
            },
        ),
        migrations.CreateModel(
            name='AccChargeBehaviorHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None, null=True)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('acc_charge_behavior_version_id', models.BigAutoField(db_column='AccChargeBehaviorVersionID', primary_key=True, serialize=False)),
                ('tm_charge_behavior_code', models.TextField(db_column='TMChargeBehaviorCode', default=None, max_length=40, null=True)),
                ('acc_charge_behavior', models.TextField(db_column='AccChargeBehavior', default=None, max_length=10, null=True)),
                ('acc_charge_behavior_id', models.ForeignKey(db_column='AccChargeBehaviorID', on_delete=django.db.models.deletion.CASCADE, to='rrf.AccChargeBehavior')),
            ],
            options={
                'verbose_name_plural': 'AccChargeBehavior_History',
                'db_table': 'AccChargeBehavior_History',
            },
        ),
        migrations.CreateModel(
            name='AccessorialDetail',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('acc_detail_id', models.BigAutoField(db_column='AccDetailID', primary_key=True, serialize=False)),
                ('tmacc_detail_id', models.TextField(db_column='TMAccDetailID', default=None, max_length=40, null=True)),
                ('allow_between', models.BooleanField(db_column='AllowBetween', default=False)),
                ('carrier_movement_type', models.TextField(db_column='CarrierMovementType', default=None, max_length=1, null=True)),
                ('acc_rate_custom_maximum', models.DecimalField(db_column='AccRateCustomMaximum', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_custom_minimum', models.DecimalField(db_column='AccRateCustomMinimum', decimal_places=6, default=None, max_digits=19, null=True)),
                ('description', models.TextField(db_column='Description', default=None, max_length=40, null=True)),
                ('effective_from', models.DateTimeField(db_column='EffectiveFrom', default=None, null=True)),
                ('effective_to', models.DateTimeField(db_column='EffectiveTo', default=None, null=True)),
                ('origin_id', models.BigIntegerField(db_column='OriginID', default=1, null=True)),
                ('destination_id', models.BigIntegerField(db_column='DestinationID', default=1, null=True)),
                ('acc_rate_dock', models.BooleanField(db_column='AccRateDock', default=False)),
                ('acc_rate_DOE_factorA', models.DecimalField(db_column='AccRateDOEFactorA', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_DOE_factorB', models.DecimalField(db_column='AccRateDOEFactorB', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_elevator', models.BooleanField(db_column='AccRateElevator', default=False)),
                ('acc_rate_exclude_legs', models.BooleanField(db_column='AccRateExcludeLegs', default=False)),
                ('acc_rate_extra_stop_rates', models.TextField(db_column='AccRateExtraStopRates', default=None, max_length=4000, null=True)),
                ('acc_rate_increment', models.DecimalField(db_column='AccRateIncrement', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_fuel_price_average', models.TextField(db_column='AccRateFuelPriceAverage', default=None, max_length=10, null=True)),
                ('acc_rate_max_charge', models.DecimalField(db_column='AccRateMaxCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_min_charge', models.DecimalField(db_column='AccRateMinCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_percent', models.DecimalField(db_column='AccRatePercent', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_shipping_instructionID', models.BigIntegerField(db_column='AccRateShippingInstructionID', default=None, null=True)),
                ('acc_rate_survey', models.BooleanField(db_column='AccRateSurvey', default=False)),
                ('acc_rate_stairs', models.BooleanField(db_column='AccRateStairs', default=False)),
                ('acc_rate_status_code', models.TextField(db_column='AccRateStatusCode', default=None, max_length=10, null=True)),
                ('acc_rate_threshold_amount', models.DecimalField(db_column='AccRateThresholdAmount', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_vehicle_restricted', models.BooleanField(db_column='AccRateVehicleRestricted', default=False)),
                ('min_std_charge', models.DecimalField(db_column='MinStdCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_factor', models.DecimalField(db_column='AccRateFactor', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_range_field2ID', models.DecimalField(db_column='AccRateRangeField2ID', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_range_field1_to', models.DecimalField(db_column='AccRateRangeField1To', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_range_field1_from', models.DecimalField(db_column='AccRateRangeField1From', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_range_field2_to', models.DecimalField(db_column='AccRateRangeField2To', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_range_field2_from', models.DecimalField(db_column='AccRateRangeField2From', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_min', models.DecimalField(db_column='AccMin', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_max', models.DecimalField(db_column='AccMax', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_percent', models.DecimalField(db_column='AccPercent', decimal_places=6, default=None, max_digits=19, null=True)),
            ],
            options={
                'verbose_name_plural': 'AccessorialDetail',
                'db_table': 'AccessorialDetail',
            },
        ),
        migrations.CreateModel(
            name='AccessorialDetailHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('acc_detail_version_id', models.BigAutoField(db_column='AccDetailVersionID', primary_key=True, serialize=False)),
                ('tmacc_detail_id', models.TextField(db_column='TMAccDetailID', default=None, max_length=40, null=True)),
                ('allow_between', models.BooleanField(db_column='AllowBetween', default=False)),
                ('carrier_movement_type', models.TextField(db_column='CarrierMovementType', default=None, max_length=1, null=True)),
                ('acc_rate_custom_maximum', models.DecimalField(db_column='AccRateCustomMaximum', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_custom_minimum', models.DecimalField(db_column='AccRateCustomMinimum', decimal_places=6, default=None, max_digits=19, null=True)),
                ('description', models.TextField(db_column='Description', default=None, max_length=40, null=True)),
                ('effective_from', models.DateTimeField(db_column='EffectiveFrom', default=None, null=True)),
                ('effective_to', models.DateTimeField(db_column='EffectiveTo', default=None, null=True)),
                ('acc_rate_dock', models.BooleanField(db_column='AccRateDock', default=False)),
                ('acc_rate_DOE_factorA', models.DecimalField(db_column='AccRateDOEFactorA', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_DOE_factorB', models.DecimalField(db_column='AccRateDOEFactorB', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_elevator', models.BooleanField(db_column='AccRateElevator', default=False)),
                ('acc_rate_exclude_legs', models.BooleanField(db_column='AccRateExcludeLegs', default=False)),
                ('acc_rate_extra_stop_rates', models.TextField(db_column='AccRateExtraStopRates', default=None, max_length=4000, null=True)),
                ('acc_rate_increment', models.DecimalField(db_column='AccRateIncrement', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_fuel_price_average', models.TextField(db_column='AccRateFuelPriceAverage', default=None, max_length=10, null=True)),
                ('acc_rate_max_charge', models.DecimalField(db_column='AccRateMaxCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_min_charge', models.DecimalField(db_column='AccRateMinCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_percent', models.DecimalField(db_column='AccRatePercent', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_range_field1_version_id', models.BigIntegerField(db_column='AccRateRangeField1VersionID', default=None, null=True)),
                ('acc_rate_range_field2_version_id', models.BigIntegerField(db_column='AccRateRangeField2VersionID', default=None, null=True)),
                ('acc_rate_shipping_instructionID', models.BigIntegerField(db_column='AccRateShippingInstructionID', default=None, null=True)),
                ('acc_rate_survey', models.BooleanField(db_column='AccRateSurvey', default=False)),
                ('acc_rate_stairs', models.BooleanField(db_column='AccRateStairs', default=False)),
                ('acc_rate_status_code', models.TextField(db_column='AccRateStatusCode', default=None, max_length=10, null=True)),
                ('acc_rate_threshold_amount', models.DecimalField(db_column='AccRateThresholdAmount', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_vehicle_restricted', models.BooleanField(db_column='AccRateVehicleRestricted', default=False)),
                ('min_std_charge', models.DecimalField(db_column='MinStdCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_factor', models.DecimalField(db_column='AccRateFactor', decimal_places=6, default=None, max_digits=19, null=True)),
                ('origin_id', models.BigIntegerField(db_column='OriginID', default=1, null=True)),
                ('destination_id', models.BigIntegerField(db_column='DestinationID', default=1, null=True)),
                ('acc_rate_range_field2ID', models.DecimalField(db_column='AccRateRangeField2ID', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_range_field1_to', models.DecimalField(db_column='AccRateRangeField1To', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_range_field1_from', models.DecimalField(db_column='AccRateRangeField1From', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_range_field2_to', models.DecimalField(db_column='AccRateRangeField2To', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_range_field2_from', models.DecimalField(db_column='AccRateRangeField2From', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_min', models.DecimalField(db_column='AccMin', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_max', models.DecimalField(db_column='AccMax', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_percent', models.DecimalField(db_column='AccPercent', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_detail_id', models.ForeignKey(db_column='AccDetailID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialDetail')),
            ],
            options={
                'verbose_name_plural': 'AccessorialDetail_History',
                'db_table': 'AccessorialDetail_History',
            },
        ),
        migrations.CreateModel(
            name='AccessorialDetention',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('acc_detention_id', models.BigAutoField(db_column='AccDetentionID', primary_key=True, serialize=False)),
                ('tm_detention_id', models.BigIntegerField(db_column='TMDetentionID', default=None)),
                ('base_rate', models.BooleanField(db_column='BaseRate', default=False)),
                ('description', models.TextField(db_column='Description', default=None, max_length=40, null=True)),
                ('detention_type', models.CharField(db_column='DetentionType', default=None, max_length=50, null=True)),
                ('effective_from', models.DateTimeField(db_column='EffectiveFrom', default=None)),
                ('effective_to', models.DateTimeField(db_column='EffectiveTo', default=None)),
                ('exclude_closed_days_detention', models.TextField(db_column='ExcludeClosedDaysDetention', default=None, max_length=20, null=True)),
                ('exclude_closed_days_freetime', models.TextField(db_column='ExcludeClosedDaysFreeTime', default=None, max_length=20, null=True)),
                ('fb_based_date_field', models.TextField(db_column='FBBasedDateField', default=None, max_length=10, null=True)),
                ('free_time_unit', models.TextField(db_column='FreeTimeUnit', default=None, max_length=3, null=True)),
                ('freetime_unit_to_measure', models.TextField(db_column='FreeTimeUnitofMeasure', default=None, max_length=10, null=True)),
                ('inter_company', models.TextField(db_column='InterCompany', default=None, max_length=5, null=True)),
                ('late_no_bill', models.TextField(db_column='LateNoBill', default=None, max_length=5, null=True)),
                ('late_window', models.DecimalField(db_column='LateWindow', decimal_places=6, default=None, max_digits=19, null=True)),
                ('ltl_proration_method', models.TextField(db_column='LtlProrationMethod', default=None, max_length=10, null=True)),
                ('max_bill_time', models.DecimalField(db_column='MaxBillTime', decimal_places=6, default=None, max_digits=19, null=True)),
                ('min_bill_time', models.DecimalField(db_column='MinBillTime', decimal_places=6, default=None, max_digits=19, null=True)),
                ('free_times', models.TextField(db_column='FreeTimes', default=None, max_length=4000, null=True)),
                ('operations_code', models.TextField(db_column='OperationsCode', default=None, max_length=10, null=True)),
                ('payment_option', models.TextField(db_column='PaymentOption', default=None, max_length=10, null=True)),
                ('second_bill_rate', models.DecimalField(db_column='SecondBillRate', decimal_places=6, default=None, max_digits=19, null=True)),
                ('shipper', models.TextField(db_column='Shipper', default=None, max_length=10, null=True)),
                ('shipper_group', models.TextField(db_column='ShipperGroup', default=None, max_length=10, null=True)),
                ('origin_type', models.TextField(db_column='OriginType', default=None, max_length=10, null=True)),
                ('destination_type', models.TextField(db_column='DestinationType', default=None, max_length=40, null=True)),
                ('origin_id', models.BigIntegerField(db_column='OriginID', default=1, null=True)),
                ('destination_id', models.BigIntegerField(db_column='DestinationID', default=1, null=True)),
                ('start_bill_rate', models.DecimalField(db_column='StartBillRate', decimal_places=6, default=None, max_digits=19, null=True)),
                ('start_option', models.TextField(db_column='StartOption', default=None, max_length=40, null=True)),
                ('stop_option', models.TextField(db_column='StopOption', default=None, max_length=40, null=True)),
                ('use_actual_time', models.BooleanField(db_column='UseActualTime', default=False)),
                ('warning_send', models.TextField(db_column='WarningSend', default=None, max_length=5, null=True)),
                ('warning_time', models.DecimalField(db_column='WarningTime', decimal_places=6, default=None, max_digits=19, null=True)),
                ('min_std_charge', models.DecimalField(db_column='MinStdCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('rate_unit', models.TextField(db_column='RateUnit', default=None, max_length=10, null=True)),
                ('calc_order', models.BigIntegerField(db_column='CalcOrder', default=None, null=True)),
            ],
            options={
                'verbose_name_plural': 'AccessorialDetention',
                'db_table': 'AccessorialDetention',
            },
        ),
        migrations.CreateModel(
            name='AccessorialDetentionHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('acc_detention_version_id', models.BigAutoField(db_column='AccDetentionVersionID', primary_key=True, serialize=False)),
                ('tm_detention_id', models.BigIntegerField(db_column='TMDetentionID', default=None)),
                ('base_rate', models.BooleanField(db_column='BaseRate', default=False)),
                ('description', models.TextField(db_column='Description', default=None, max_length=40, null=True)),
                ('detention_type', models.CharField(db_column='DetentionType', default=None, max_length=50, null=True)),
                ('effective_from', models.DateTimeField(db_column='EffectiveFrom', default=None)),
                ('effective_to', models.DateTimeField(db_column='EffectiveTo', default=None)),
                ('exclude_closed_days_detention', models.TextField(db_column='ExcludeClosedDaysDetention', default=None, max_length=20, null=True)),
                ('exclude_closed_days_freetime', models.TextField(db_column='ExcludeClosedDaysFreeTime', default=None, max_length=20, null=True)),
                ('fb_based_date_field', models.TextField(db_column='FBBasedDateField', default=None, max_length=10, null=True)),
                ('free_time_unit', models.TextField(db_column='FreeTimeUnit', default=None, max_length=3, null=True)),
                ('freetime_unit_to_measure', models.TextField(db_column='FreeTimeUnitofMeasure', default=None, max_length=10, null=True)),
                ('inter_company', models.TextField(db_column='InterCompany', default=None, max_length=5, null=True)),
                ('late_no_bill', models.TextField(db_column='LateNoBill', default=None, max_length=5, null=True)),
                ('late_window', models.DecimalField(db_column='LateWindow', decimal_places=6, default=None, max_digits=19, null=True)),
                ('ltl_proration_method', models.TextField(db_column='LtlProrationMethod', default=None, max_length=10, null=True)),
                ('max_bill_time', models.DecimalField(db_column='MaxBillTime', decimal_places=6, default=None, max_digits=19, null=True)),
                ('min_bill_time', models.DecimalField(db_column='MinBillTime', decimal_places=6, default=None, max_digits=19, null=True)),
                ('free_times', models.TextField(db_column='FreeTimes', default=None, max_length=4000, null=True)),
                ('operations_code', models.TextField(db_column='OperationsCode', default=None, max_length=10, null=True)),
                ('payment_option', models.TextField(db_column='PaymentOption', default=None, max_length=10, null=True)),
                ('second_bill_rate', models.DecimalField(db_column='SecondBillRate', decimal_places=6, default=None, max_digits=19, null=True)),
                ('shipper', models.TextField(db_column='Shipper', default=None, max_length=10, null=True)),
                ('shipper_group', models.TextField(db_column='ShipperGroup', default=None, max_length=10, null=True)),
                ('origin_type', models.TextField(db_column='OriginType', default=None, max_length=10, null=True)),
                ('destination_type', models.TextField(db_column='DestinationType', default=None, max_length=40, null=True)),
                ('origin_id', models.BigIntegerField(db_column='OriginID', default=1, null=True)),
                ('destination_id', models.BigIntegerField(db_column='DestinationID', default=1, null=True)),
                ('start_bill_rate', models.DecimalField(db_column='StartBillRate', decimal_places=6, default=None, max_digits=19, null=True)),
                ('start_option', models.TextField(db_column='StartOption', default=None, max_length=40, null=True)),
                ('stop_option', models.TextField(db_column='StopOption', default=None, max_length=40, null=True)),
                ('use_actual_time', models.BooleanField(db_column='UseActualTime', default=False)),
                ('warning_send', models.TextField(db_column='WarningSend', default=None, max_length=5, null=True)),
                ('warning_time', models.DecimalField(db_column='WarningTime', decimal_places=6, default=None, max_digits=19, null=True)),
                ('min_std_charge', models.DecimalField(db_column='MinStdCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('rate_unit', models.TextField(db_column='RateUnit', default=None, max_length=10, null=True)),
                ('calc_order', models.BigIntegerField(db_column='CalcOrder', default=None, null=True)),
                ('acc_detention_id', models.ForeignKey(db_column='AccDetentionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.AccessorialDetention')),
            ],
            options={
                'verbose_name_plural': 'AccessorialDetention_History',
                'db_table': 'AccessorialDetention_History',
            },
        ),
        migrations.CreateModel(
            name='AccessorialDetentionOverride',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('acc_detention_override_id', models.BigAutoField(db_column='AccDetentionOverrideID', primary_key=True, serialize=False)),
                ('tm_detention_override_id', models.BigIntegerField(db_column='TMDetentionOverrideID', default=None)),
                ('base_rate', models.BooleanField(db_column='BaseRate', default=False)),
                ('description', models.TextField(db_column='Description', default=None, max_length=40, null=True)),
                ('detention_type', models.TextField(db_column='DetentionType', default=None, max_length=10, null=True)),
                ('effective_from', models.DateTimeField(db_column='EffectiveFrom', default=datetime.datetime.now)),
                ('effective_to', models.DateTimeField(db_column='EffectiveTo', default=datetime.datetime.now)),
                ('exclude_closed_days_detention', models.TextField(db_column='ExcludeClosedDaysDetention', default=None, max_length=20, null=True)),
                ('exclude_closed_days_freetime', models.TextField(db_column='ExcludeClosedDaysFreeTime', default=None, max_length=20, null=True)),
                ('fb_based_date_field', models.TextField(db_column='FBBasedDateField', default=None, max_length=10, null=True)),
                ('free_time_unit', models.TextField(db_column='FreeTimeUnit', default=None, max_length=3, null=True)),
                ('freetime_unit_to_measure', models.TextField(db_column='FreeTimeUnitofMeasure', default=None, max_length=10, null=True)),
                ('inter_company', models.TextField(db_column='InterCompany', default=None, max_length=5, null=True)),
                ('late_no_bill', models.TextField(db_column='LateNoBill', default=None, max_length=5, null=True)),
                ('late_window', models.DecimalField(db_column='LateWindow', decimal_places=6, default=None, max_digits=19, null=True)),
                ('ltl_proration_method', models.TextField(db_column='LtlProrationMethod', default=None, max_length=10, null=True)),
                ('max_bill_time', models.DecimalField(db_column='MaxBillTime', decimal_places=6, default=None, max_digits=19, null=True)),
                ('min_bill_time', models.DecimalField(db_column='MinBillTime', decimal_places=6, default=None, max_digits=19, null=True)),
                ('free_times', models.TextField(db_column='FreeTimes', default=None, max_length=4000, null=True)),
                ('operations_code', models.TextField(db_column='OperationsCode', default=None, max_length=10, null=True)),
                ('payment_option', models.TextField(db_column='PaymentOption', default=None, max_length=10, null=True)),
                ('second_bill_rate', models.DecimalField(db_column='SecondBillRate', decimal_places=6, default=None, max_digits=19, null=True)),
                ('shipper', models.TextField(db_column='Shipper', default=None, max_length=10, null=True)),
                ('shipper_group', models.TextField(db_column='ShipperGroup', default=None, max_length=10, null=True)),
                ('origin_type', models.TextField(db_column='OriginType', default=None, max_length=10, null=True)),
                ('destination_type', models.TextField(db_column='DestinationType', default=None, max_length=40, null=True)),
                ('origin_id', models.BigIntegerField(db_column='OriginID', default=1, null=True)),
                ('destination_id', models.BigIntegerField(db_column='DestinationID', default=1, null=True)),
                ('start_bill_rate', models.DecimalField(db_column='StartBillRate', decimal_places=6, default=None, max_digits=19, null=True)),
                ('start_option', models.TextField(db_column='StartOption', default=None, max_length=40, null=True)),
                ('stop_option', models.TextField(db_column='StopOption', default=None, max_length=40, null=True)),
                ('use_actual_time', models.BooleanField(db_column='UseActualTime', default=False)),
                ('warning_send', models.TextField(db_column='WarningSend', default=None, max_length=5, null=True)),
                ('warning_time', models.DecimalField(db_column='WarningTime', decimal_places=6, default=None, max_digits=19, null=True)),
                ('min_std_charge', models.DecimalField(db_column='MinStdCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_detention_override_source_id', models.BigIntegerField(db_column='AccDetentionOverrideSourceID', null=True)),
                ('usage_percentage', models.DecimalField(db_column='UsagePercentage', decimal_places=6, default=None, max_digits=19, null=True)),
                ('is_waive', models.BooleanField(db_column='isWaive', default=False)),
                ('tmid', models.IntegerField(db_column='TMID', default=None, null=True)),
            ],
            options={
                'verbose_name_plural': 'AccessorialDetentionOverride',
                'db_table': 'AccessorialDetentionOverride',
            },
        ),
        migrations.CreateModel(
            name='AccessorialDetentionOverrideHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('acc_detention_override_version_id', models.BigAutoField(db_column='AccDetentionOverrideVersionID', primary_key=True, serialize=False)),
                ('tm_detention_override_id', models.BigIntegerField(db_column='TMDetentionOverrideID', default=None)),
                ('base_rate', models.BooleanField(db_column='BaseRate', default=False)),
                ('description', models.TextField(db_column='Description', default=None, max_length=40, null=True)),
                ('detention_type', models.TextField(db_column='DetentionType', default=None, max_length=10, null=True)),
                ('effective_from', models.DateTimeField(db_column='EffectiveFrom', default=None)),
                ('effective_to', models.DateTimeField(db_column='EffectiveTo', default=None)),
                ('exclude_closed_days_detention', models.TextField(db_column='ExcludeClosedDaysDetention', default=None, max_length=20, null=True)),
                ('exclude_closed_days_freetime', models.TextField(db_column='ExcludeClosedDaysFreeTime', default=None, max_length=20, null=True)),
                ('fb_based_date_field', models.TextField(db_column='FBBasedDateField', default=None, max_length=10, null=True)),
                ('free_time_unit', models.TextField(db_column='FreeTimeUnit', default=None, max_length=3, null=True)),
                ('freetime_unit_to_measure', models.TextField(db_column='FreeTimeUnitofMeasure', default=None, max_length=10, null=True)),
                ('inter_company', models.TextField(db_column='InterCompany', default=None, max_length=5, null=True)),
                ('late_no_bill', models.TextField(db_column='LateNoBill', default=None, max_length=5, null=True)),
                ('late_window', models.DecimalField(db_column='LateWindow', decimal_places=6, default=None, max_digits=19, null=True)),
                ('ltl_proration_method', models.TextField(db_column='LtlProrationMethod', default=None, max_length=10, null=True)),
                ('max_bill_time', models.DecimalField(db_column='MaxBillTime', decimal_places=6, default=None, max_digits=19, null=True)),
                ('min_bill_time', models.DecimalField(db_column='MinBillTime', decimal_places=6, default=None, max_digits=19, null=True)),
                ('free_times', models.TextField(db_column='FreeTimes', default=None, max_length=4000, null=True)),
                ('operations_code', models.TextField(db_column='OperationsCode', default=None, max_length=10, null=True)),
                ('payment_option', models.TextField(db_column='PaymentOption', default=None, max_length=10, null=True)),
                ('second_bill_rate', models.DecimalField(db_column='SecondBillRate', decimal_places=6, default=None, max_digits=19, null=True)),
                ('shipper', models.TextField(db_column='Shipper', default=None, max_length=10, null=True)),
                ('shipper_group', models.TextField(db_column='ShipperGroup', default=None, max_length=10, null=True)),
                ('origin_type', models.TextField(db_column='OriginType', default=None, max_length=10, null=True)),
                ('destination_type', models.TextField(db_column='DestinationType', default=None, max_length=40, null=True)),
                ('origin_id', models.BigIntegerField(db_column='OriginID', default=1, null=True)),
                ('destination_id', models.BigIntegerField(db_column='DestinationID', default=1, null=True)),
                ('start_bill_rate', models.DecimalField(db_column='StartBillRate', decimal_places=6, default=None, max_digits=19, null=True)),
                ('start_option', models.TextField(db_column='StartOption', default=None, max_length=40, null=True)),
                ('stop_option', models.TextField(db_column='StopOption', default=None, max_length=40, null=True)),
                ('use_actual_time', models.BooleanField(db_column='UseActualTime', default=False)),
                ('warning_send', models.TextField(db_column='WarningSend', default=None, max_length=5, null=True)),
                ('warning_time', models.DecimalField(db_column='WarningTime', decimal_places=6, default=None, max_digits=19, null=True)),
                ('min_std_charge', models.DecimalField(db_column='MinStdCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_detention_override_source_id', models.BigIntegerField(db_column='AccDetentionOverrideSourceID', null=True)),
                ('usage_percentage', models.DecimalField(db_column='UsagePercentage', decimal_places=6, default=None, max_digits=19, null=True)),
                ('is_waive', models.BooleanField(db_column='isWaive', default=False)),
                ('tmid', models.IntegerField(db_column='TMID', default=None, null=True)),
                ('acc_detention_override_id', models.ForeignKey(db_column='AccDetentionOverrideID', on_delete=django.db.models.deletion.CASCADE, to='rrf.AccessorialDetentionOverride')),
            ],
            options={
                'verbose_name_plural': 'AccessorialDetentionOverride_History',
                'db_table': 'AccessorialDetentionOverride_History',
            },
        ),
        migrations.CreateModel(
            name='AccessorialHeader',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('acc_header_id', models.BigAutoField(db_column='AccHeaderID', primary_key=True, serialize=False)),
                ('tmacc_charge_code', models.TextField(db_column='TMAccChargeCode', default=None, max_length=10, null=True)),
                ('description', models.TextField(db_column='Description', default=None, max_length=40, null=True)),
                ('business_grouping', models.TextField(db_column='BusinessGrouping', default=None, null=True)),
                ('acc_charge_behavior_id', models.ForeignKey(db_column='AccChargeBehaviorID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccChargeBehavior')),
            ],
            options={
                'verbose_name_plural': 'AccessorialHeader',
                'db_table': 'AccessorialHeader',
            },
        ),
        migrations.CreateModel(
            name='AccessorialHeaderHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('acc_header_version_id', models.BigAutoField(db_column='AccHeaderVersionID', primary_key=True, serialize=False)),
                ('tmacc_charge_code', models.TextField(db_column='TMAccChargeCode', default=None, max_length=10, null=True)),
                ('description', models.TextField(db_column='Description', default=None, max_length=40, null=True)),
                ('business_grouping', models.TextField(db_column='BusinessGrouping', default=None, null=True)),
                ('acc_charge_behavior_version_id', models.ForeignKey(db_column='AccChargeBehaviorVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccChargeBehaviorHistory')),
                ('acc_header_id', models.ForeignKey(db_column='AccHeaderID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialHeader')),
            ],
            options={
                'verbose_name_plural': 'AccessorialHeader_History',
                'db_table': 'AccessorialHeader_History',
            },
        ),
        migrations.CreateModel(
            name='AccessorialOverride',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('acc_override_id', models.BigAutoField(db_column='AccOverrideID', primary_key=True, serialize=False)),
                ('tmacc_override_id', models.BigIntegerField(db_column='TMAccOverrideID', default=1)),
                ('allow_between', models.BooleanField(db_column='AllowBetween', default=False)),
                ('carrier_movement_type', models.TextField(db_column='CarrierMovementType', default=None, max_length=1, null=True)),
                ('acc_rate_custom_maximum', models.DecimalField(db_column='AccRateCustomMaximum', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_custom_minimum', models.DecimalField(db_column='AccRateCustomMinimum', decimal_places=6, default=None, max_digits=19, null=True)),
                ('description', models.TextField(db_column='Description', default=None, max_length=40, null=True)),
                ('effective_from', models.DateTimeField(db_column='EffectiveFrom', default=datetime.datetime.now, null=True)),
                ('effective_to', models.DateTimeField(db_column='EffectiveTo', default=datetime.datetime.now, null=True)),
                ('origin_type', models.TextField(db_column='OriginType', default=None, max_length=10, null=True)),
                ('origin_id', models.BigIntegerField(db_column='OriginID', default=1, null=True)),
                ('destination_id', models.BigIntegerField(db_column='DestinationID', default=1, null=True)),
                ('destination_type', models.TextField(db_column='DestinationType', default=None, max_length=10, null=True)),
                ('acc_rate_dock', models.BooleanField(db_column='AccRateDock', default=1)),
                ('acc_rate_DOE_factorA', models.DecimalField(db_column='AccRateDOEFactorA', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_DOE_factorB', models.DecimalField(db_column='AccRateDOEFactorB', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_elevator', models.BooleanField(db_column='AccRateElevator', default=False)),
                ('acc_rate_exclude_legs', models.BooleanField(db_column='AccRateExcludeLegs', default=False)),
                ('acc_rate_extra_stop_rates', models.TextField(db_column='AccRateExtraStopRates', default=None, max_length=4000, null=True)),
                ('acc_rate_increment', models.DecimalField(db_column='AccRateIncrement', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_fuel_price_average', models.TextField(db_column='AccRateFuelPriceAverage', default=None, max_length=10, null=True)),
                ('acc_rate_max_charge', models.DecimalField(db_column='AccRateMaxCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_min_charge', models.DecimalField(db_column='AccRateMinCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_percent', models.DecimalField(db_column='AccRatePercent', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_range_type_id', models.BigIntegerField(db_column='AccRateRangeTypeID', default=1, null=True)),
                ('min_shipment_value', models.DecimalField(db_column='MinShipmentValue', decimal_places=6, default=None, max_digits=19, null=True)),
                ('max_shipment_value', models.DecimalField(db_column='MaxShipmentValue', decimal_places=6, default=None, max_digits=19, null=True)),
                ('min_weight_value', models.DecimalField(db_column='MinWeightValue', decimal_places=6, default=None, max_digits=19, null=True)),
                ('max_weight_value', models.DecimalField(db_column='MaxWeightValue', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_shipping_instructionID', models.BigIntegerField(db_column='AccRateShippingInstructionID', default=None, null=True)),
                ('acc_rate_survey', models.BooleanField(db_column='AccRateSurvey', default=False)),
                ('acc_rate_stairs', models.BooleanField(db_column='AccRateStairs', default=False)),
                ('acc_rate_status_code', models.TextField(db_column='AccRateStatusCode', default=None, max_length=10, null=True)),
                ('acc_rate_threshold_amount', models.DecimalField(db_column='AccRateThresholdAmount', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_vehicle_restricted', models.BooleanField(db_column='AccRateVehicleRestricted', default=False)),
                ('min_std_charge', models.DecimalField(db_column='MinStdCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_override_source_id', models.BigIntegerField(db_column='AccOverrideSourceID', null=True)),
                ('usage_percentage', models.DecimalField(db_column='UsagePercentage', decimal_places=6, default=None, max_digits=19, null=True)),
                ('is_waive', models.BooleanField(db_column='isWaive', default=False)),
                ('tmid', models.IntegerField(db_column='TMID', default=None, null=True)),
                ('acc_header_id', models.ForeignKey(db_column='AccHeaderID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialHeader')),
            ],
            options={
                'verbose_name_plural': 'AccessorialOverride',
                'db_table': 'AccessorialOverride',
            },
        ),
        migrations.CreateModel(
            name='AccessorialOverrideHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('acc_override_version_id', models.BigAutoField(db_column='AccOverrideVersionID', primary_key=True, serialize=False)),
                ('tmacc_override_id', models.BigIntegerField(db_column='TMAccOverrideID', default=None)),
                ('allow_between', models.BooleanField(db_column='AllowBetween', default=False)),
                ('carrier_movement_type', models.TextField(db_column='CarrierMovementType', default=None, max_length=1, null=True)),
                ('acc_rate_custom_maximum', models.DecimalField(db_column='AccRateCustomMaximum', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_custom_minimum', models.DecimalField(db_column='AccRateCustomMinimum', decimal_places=6, default=None, max_digits=19, null=True)),
                ('description', models.TextField(db_column='Description', default=None, max_length=40, null=True)),
                ('effective_from', models.DateTimeField(db_column='EffectiveFrom', default=None, null=True)),
                ('effective_to', models.DateTimeField(db_column='EffectiveTo', default=None, null=True)),
                ('origin_type', models.TextField(db_column='OriginType', default=None, max_length=10, null=True)),
                ('destination_type', models.TextField(db_column='DestinationType', default=None, max_length=10, null=True)),
                ('origin_id', models.BigIntegerField(db_column='OriginID', default=1, null=True)),
                ('destination_id', models.BigIntegerField(db_column='DestinationID', default=1, null=True)),
                ('acc_rate_dock', models.BooleanField(db_column='AccRateDock', default=False)),
                ('acc_rate_DOE_factorA', models.DecimalField(db_column='AccRateDOEFactorA', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_DOE_factorB', models.DecimalField(db_column='AccRateDOEFactorB', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_elevator', models.BooleanField(db_column='AccRateElevator', default=False)),
                ('acc_rate_exclude_legs', models.BooleanField(db_column='AccRateExcludeLegs', default=False)),
                ('acc_rate_extra_stop_rates', models.TextField(db_column='AccRateExtraStopRates', default=None, max_length=4000, null=True)),
                ('acc_rate_increment', models.DecimalField(db_column='AccRateIncrement', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_fuel_price_average', models.TextField(db_column='AccRateFuelPriceAverage', default=None, max_length=10, null=True)),
                ('acc_rate_max_charge', models.DecimalField(db_column='AccRateMaxCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_min_charge', models.DecimalField(db_column='AccRateMinCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_percent', models.DecimalField(db_column='AccRatePercent', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_range_field_version1_id', models.BigIntegerField(db_column='AccRateRangeFieldVersion1ID', default=None, null=True)),
                ('acc_rate_range_field_version2_id', models.BigIntegerField(db_column='AccRateRangeFieldVersion2ID', default=None, null=True)),
                ('acc_rate_range_type_version_id', models.BigIntegerField(db_column='AccRateRangeTypeVersionID', default=1, null=True)),
                ('min_shipment_value', models.DecimalField(db_column='MinShipmentValue', decimal_places=6, default=None, max_digits=19, null=True)),
                ('max_shipment_value', models.DecimalField(db_column='MaxShipmentValue', decimal_places=6, default=None, max_digits=19, null=True)),
                ('min_weight_value', models.DecimalField(db_column='MinWeightValue', decimal_places=6, default=None, max_digits=19, null=True)),
                ('max_weight_value', models.DecimalField(db_column='MaxWeightValue', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_shipping_instructionID', models.BigIntegerField(db_column='AccRateShippingInstructionID', default=None, null=True)),
                ('acc_rate_survey', models.BooleanField(db_column='AccRateSurvey', default=False)),
                ('acc_rate_stairs', models.BooleanField(db_column='AccRateStairs', default=False)),
                ('acc_rate_status_code', models.TextField(db_column='AccRateStatusCode', default=None, max_length=10, null=True)),
                ('acc_rate_threshold_amount', models.DecimalField(db_column='AccRateThresholdAmount', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_rate_vehicle_restricted', models.BooleanField(db_column='AccRateVehicleRestricted', default=False)),
                ('min_std_charge', models.DecimalField(db_column='MinStdCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_override_source_id', models.BigIntegerField(db_column='AccOverrideSourceID', null=True)),
                ('usage_percentage', models.DecimalField(db_column='UsagePercentage', decimal_places=6, default=None, max_digits=19, null=True)),
                ('is_waive', models.BooleanField(db_column='isWaive', default=False)),
                ('tmid', models.IntegerField(db_column='TMID', default=None, null=True)),
                ('acc_header_version_id', models.ForeignKey(db_column='AccHeaderVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialHeaderHistory')),
                ('acc_override_id', models.ForeignKey(db_column='AccOverrideID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialOverride')),
            ],
            options={
                'verbose_name_plural': 'AccessorialOverride_History',
                'db_table': 'AccessorialOverride_History',
            },
        ),
        migrations.CreateModel(
            name='AccessorialStorage',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('acc_storage_id', models.BigAutoField(db_column='AccStorageID', primary_key=True, serialize=False)),
                ('tm_storage_id', models.BigIntegerField(db_column='TMStorageID', default=None)),
                ('base_rate', models.BooleanField(db_column='BaseRate', default=False)),
                ('bill_option', models.TextField(db_column='BillOption', default=None, max_length=1, null=True)),
                ('dangerous_goods', models.BooleanField(db_column='DangerousGoods', default=False)),
                ('description', models.TextField(db_column='Description', default=None, max_length=40, null=True)),
                ('effective_from', models.DateTimeField(db_column='EffectiveFrom', default=None)),
                ('effective_to', models.DateTimeField(db_column='EffectiveTo', default=None)),
                ('free_days', models.BigIntegerField(db_column='FreeDays', default=None)),
                ('high_value', models.BooleanField(db_column='HighValue', default=False)),
                ('include_delivery_day', models.BooleanField(db_column='IncludeDeliveryDay', default=False)),
                ('include_terminal_service_calendar', models.BooleanField(db_column='IncludeTerminalServiceCalendar', default=False)),
                ('operations_code', models.TextField(db_column='OperationsCode', default=None, max_length=10, null=True)),
                ('rate_amount', models.DecimalField(db_column='RateAmount', decimal_places=6, default=None, max_digits=19, null=True)),
                ('rate_max', models.DecimalField(db_column='RateMax', decimal_places=6, default=None, max_digits=19, null=True)),
                ('rate_min', models.DecimalField(db_column='RateMin', decimal_places=6, default=None, max_digits=19, null=True)),
                ('rate_per', models.DecimalField(db_column='RatePer', decimal_places=6, default=None, max_digits=19, null=True)),
                ('temp_controlled', models.BooleanField(db_column='TempControlled', default=False)),
                ('min_std_charge', models.DecimalField(db_column='MinStdCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('calc_order', models.BigIntegerField(db_column='CalcOrder', default=None, null=True)),
                ('acc_header_id', models.ForeignKey(db_column='AccHeaderID', on_delete=django.db.models.deletion.CASCADE, to='rrf.AccessorialHeader')),
            ],
            options={
                'verbose_name_plural': 'AccessorialStorage',
                'db_table': 'AccessorialStorage',
            },
        ),
        migrations.CreateModel(
            name='AccessorialStorageHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('acc_storage_version_id', models.BigAutoField(db_column='AccStorageVersionID', primary_key=True, serialize=False)),
                ('tm_storage_id', models.BigIntegerField(db_column='TMStorageID', default=None)),
                ('base_rate', models.BooleanField(db_column='BaseRate', default=False)),
                ('bill_option', models.TextField(db_column='BillOption', default=None, max_length=1, null=True)),
                ('dangerous_goods', models.BooleanField(db_column='DangerousGoods', default=False)),
                ('description', models.TextField(db_column='Description', default=None, max_length=40, null=True)),
                ('effective_from', models.DateTimeField(db_column='EffectiveFrom', default=None)),
                ('effective_to', models.DateTimeField(db_column='EffectiveTo', default=None)),
                ('free_days', models.BigIntegerField(db_column='FreeDays', default=None)),
                ('high_value', models.BooleanField(db_column='HighValue', default=False)),
                ('include_delivery_day', models.BooleanField(db_column='IncludeDeliveryDay', default=False)),
                ('include_terminal_service_calendar', models.BooleanField(db_column='IncludeTerminalServiceCalendar', default=False)),
                ('operations_code', models.TextField(db_column='OperationsCode', default=None, max_length=10, null=True)),
                ('rate_amount', models.DecimalField(db_column='RateAmount', decimal_places=6, default=None, max_digits=19, null=True)),
                ('rate_max', models.DecimalField(db_column='RateMax', decimal_places=6, default=None, max_digits=19, null=True)),
                ('rate_min', models.DecimalField(db_column='RateMin', decimal_places=6, default=None, max_digits=19, null=True)),
                ('rate_per', models.DecimalField(db_column='RatePer', decimal_places=6, default=None, max_digits=19, null=True)),
                ('temp_controlled', models.BooleanField(db_column='TempControlled', default=False)),
                ('min_std_charge', models.DecimalField(db_column='MinStdCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('calc_order', models.BigIntegerField(db_column='CalcOrder', default=None, null=True)),
                ('acc_header_version_id', models.ForeignKey(db_column='AccHeaderVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialHeaderHistory')),
                ('acc_storage_id', models.ForeignKey(db_column='AccStorageID', on_delete=django.db.models.deletion.CASCADE, to='rrf.AccessorialStorage')),
            ],
            options={
                'verbose_name_plural': 'AccessorialStorage_History',
                'db_table': 'AccessorialStorage_History',
            },
        ),
        migrations.CreateModel(
            name='AccessorialStorageOverride',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('acc_storage_override_id', models.BigAutoField(db_column='AccStorageOverrideID', primary_key=True, serialize=False)),
                ('tm_storage_override_id', models.BigIntegerField(db_column='TMStorageOverrideID', default=1)),
                ('base_rate', models.BooleanField(db_column='BaseRate', default=False)),
                ('bill_option', models.TextField(db_column='BillOption', default=None, max_length=1, null=True)),
                ('dangerous_goods', models.BooleanField(db_column='DangerousGoods', default=False)),
                ('description', models.TextField(db_column='Description', default=None, max_length=40, null=True)),
                ('effective_from', models.DateTimeField(db_column='EffectiveFrom', default=datetime.datetime.now)),
                ('effective_to', models.DateTimeField(db_column='EffectiveTo', default=datetime.datetime.now)),
                ('free_days', models.BigIntegerField(db_column='FreeDays', default=None)),
                ('high_value', models.BooleanField(db_column='HighValue', default=False)),
                ('include_delivery_day', models.BooleanField(db_column='IncludeDeliveryDay', default=False)),
                ('include_terminal_service_calendar', models.BooleanField(db_column='IncludeTerminalServiceCalendar', default=False)),
                ('operations_code', models.TextField(db_column='OperationsCode', default=None, max_length=10, null=True)),
                ('rate_amount', models.DecimalField(db_column='RateAmount', decimal_places=6, default=None, max_digits=19, null=True)),
                ('rate_max', models.DecimalField(db_column='RateMax', decimal_places=6, default=None, max_digits=19, null=True)),
                ('rate_min', models.DecimalField(db_column='RateMin', decimal_places=6, default=None, max_digits=19, null=True)),
                ('rate_per', models.DecimalField(db_column='RatePer', decimal_places=6, default=None, max_digits=19, null=True)),
                ('temp_controlled', models.BooleanField(db_column='TempControlled', default=False)),
                ('min_std_charge', models.DecimalField(db_column='MinStdCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_storage_override_source_id', models.BigIntegerField(db_column='AccStorageOverrideSourceID', null=True)),
                ('usage_percentage', models.DecimalField(db_column='UsagePercentage', decimal_places=6, default=None, max_digits=19, null=True)),
                ('is_waive', models.BooleanField(db_column='isWaive', default=False)),
                ('tmid', models.IntegerField(db_column='TMID', default=None, null=True)),
                ('acc_header_id', models.ForeignKey(db_column='AccHeaderID', on_delete=django.db.models.deletion.CASCADE, to='rrf.AccessorialHeader')),
            ],
            options={
                'verbose_name_plural': 'AccessorialStorageOverride',
                'db_table': 'AccessorialStorageOverride',
            },
        ),
        migrations.CreateModel(
            name='AccessorialStorageOverrideHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('acc_storage_override_version_id', models.BigAutoField(db_column='AccStorageOverrideVersionID', primary_key=True, serialize=False)),
                ('tm_storage_override_id', models.BigIntegerField(db_column='TMStorageOverrideID', default=None)),
                ('base_rate', models.BooleanField(db_column='BaseRate', default=False)),
                ('bill_option', models.TextField(db_column='BillOption', default=None, max_length=1, null=True)),
                ('dangerous_goods', models.BooleanField(db_column='DangerousGoods', default=False)),
                ('description', models.TextField(db_column='Description', default=None, max_length=40, null=True)),
                ('effective_from', models.DateTimeField(db_column='EffectiveFrom', default=None)),
                ('effective_to', models.DateTimeField(db_column='EffectiveTo', default=None)),
                ('free_days', models.BigIntegerField(db_column='FreeDays', default=None)),
                ('high_value', models.BooleanField(db_column='HighValue', default=False)),
                ('include_delivery_day', models.BooleanField(db_column='IncludeDeliveryDay', default=False)),
                ('include_terminal_service_calendar', models.BooleanField(db_column='IncludeTerminalServiceCalendar', default=False)),
                ('operations_code', models.TextField(db_column='OperationsCode', default=None, max_length=10, null=True)),
                ('rate_amount', models.DecimalField(db_column='RateAmount', decimal_places=6, default=None, max_digits=19, null=True)),
                ('rate_max', models.DecimalField(db_column='RateMax', decimal_places=6, default=None, max_digits=19, null=True)),
                ('rate_min', models.DecimalField(db_column='RateMin', decimal_places=6, default=None, max_digits=19, null=True)),
                ('rate_per', models.DecimalField(db_column='RatePer', decimal_places=6, default=None, max_digits=19, null=True)),
                ('temp_controlled', models.BooleanField(db_column='TempControlled', default=False)),
                ('min_std_charge', models.DecimalField(db_column='MinStdCharge', decimal_places=6, default=None, max_digits=19, null=True)),
                ('acc_storage_override_source_id', models.BigIntegerField(db_column='AccStorageOverrideSourceID', null=True)),
                ('usage_percentage', models.DecimalField(db_column='UsagePercentage', decimal_places=6, default=None, max_digits=19, null=True)),
                ('is_waive', models.BooleanField(db_column='isWaive', default=False)),
                ('tmid', models.IntegerField(db_column='TMID', default=None, null=True)),
                ('acc_header_version_id', models.ForeignKey(db_column='AccHeaderVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialHeaderHistory')),
                ('acc_storage_override_id', models.ForeignKey(db_column='AccStorageOverrideID', on_delete=django.db.models.deletion.CASCADE, to='rrf.AccessorialStorage')),
            ],
            options={
                'verbose_name_plural': 'AccessorialStorageOverride_History',
                'db_table': 'AccessorialStorageOverride_History',
            },
        ),
        migrations.CreateModel(
            name='AccFactor',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('acc_factor_id', models.BigAutoField(db_column='AccFactorID', primary_key=True, serialize=False)),
                ('tm_acc_factor_code', models.TextField(db_column='TMAccFactorCode', default=None, max_length=10, null=True)),
                ('acc_factor', models.TextField(db_column='AccFactor', default=None, max_length=40, null=True)),
            ],
            options={
                'verbose_name_plural': 'AccFactor',
                'db_table': 'AccFactor',
            },
        ),
        migrations.CreateModel(
            name='AccFactorHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('acc_factor_version_id', models.BigAutoField(db_column='AccFactorVersionID', primary_key=True, serialize=False)),
                ('acc_factor', models.TextField(db_column='AccFactor', default=None, max_length=40, null=True)),
                ('tm_acc_factor_code', models.TextField(db_column='TMAccFactorCode', default=None, max_length=10, null=True)),
                ('acc_factor_id', models.ForeignKey(db_column='AccFactorID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccFactor')),
            ],
            options={
                'verbose_name_plural': 'AccFactor_History',
                'db_table': 'AccFactor_History',
            },
        ),
        migrations.CreateModel(
            name='AccountTree',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('account_tree_id', models.BigAutoField(db_column='AccountTreeID', primary_key=True, serialize=False)),
                ('account', models.OneToOneField(db_column='AccountID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Account')),
                ('parent_account', models.ForeignKey(db_column='ParentAccountID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Account')),
            ],
            options={
                'verbose_name_plural': 'AccountTree',
                'db_table': 'AccountTree',
            },
        ),
        migrations.CreateModel(
            name='AccountTreeHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('account_tree_version_id', models.BigAutoField(db_column='AccountTreeVersionID', primary_key=True, serialize=False)),
                ('account_tree', models.ForeignKey(db_column='AccountTreeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.AccountTree')),
                ('account_version', models.ForeignKey(db_column='AccountVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.AccountHistory')),
                ('parent_account_version', models.ForeignKey(db_column='ParentAccountVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.AccountHistory')),
            ],
            options={
                'verbose_name_plural': 'AccountTree_History',
                'db_table': 'AccountTree_History',
            },
        ),
        migrations.CreateModel(
            name='AccRangeType',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('acc_range_type_id', models.BigAutoField(db_column='AccRangeTypeID', primary_key=True, serialize=False)),
                ('tm_range_type_code', models.TextField(db_column='TMRangeTypeCode', default=None, max_length=10, null=True)),
                ('tm_range_type', models.TextField(db_column='TMRangeType', default=None, max_length=40, null=True)),
            ],
            options={
                'verbose_name_plural': 'AccRangeType',
                'db_table': 'AccRangeType',
            },
        ),
        migrations.CreateModel(
            name='AccRangeTypeHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('acc_range_type_version_id', models.BigAutoField(db_column='AccRangeTypeVersionID', primary_key=True, serialize=False)),
                ('tm_range_type', models.TextField(db_column='TMRangeType', default=None, max_length=40, null=True)),
                ('tm_range_type_code', models.TextField(db_column='TMRangeTypeCode', default=None, max_length=10, null=True)),
                ('acc_range_type_id', models.ForeignKey(db_column='AccRangeTypeID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccRangeType')),
            ],
            options={
                'verbose_name_plural': 'AccRangeType_History',
                'db_table': 'AccRangeType_History',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('comment_id', models.BigAutoField(db_column='CommentID', primary_key=True, serialize=False)),
                ('request_major_version', models.IntegerField(db_column='RequestMajorVersion', default=1)),
                ('tag', models.CharField(db_column='Tag', max_length=100, null=True)),
                ('content', models.TextField(db_column='Content')),
                ('parent_comment_id', models.BigIntegerField(blank=True, db_column='ParentCommentID', null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='CreatedOn')),
                ('created_by', models.CharField(db_column='CreatedBy', max_length=100, null=True)),
            ],
            options={
                'db_table': 'Comment',
            },
        ),
        migrations.CreateModel(
            name='Commodity',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('commodity_id', models.BigAutoField(db_column='CommodityID', primary_key=True, serialize=False)),
                ('commodity_name', models.TextField(db_column='CommodityName', max_length=100, null=True)),
                ('commodity_code', models.TextField(db_column='CommodityCode', max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Commodity',
                'db_table': 'Commodity',
            },
        ),
        migrations.CreateModel(
            name='CommodityHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('commodity_version_id', models.BigAutoField(db_column='CommodityVersionID', primary_key=True, serialize=False)),
                ('commodity_name', models.TextField(db_column='CommodityName', max_length=100, null=True)),
                ('commodity_code_history', models.TextField(db_column='CommodityCode', max_length=100, null=True)),
                ('commodity_id', models.ForeignKey(db_column='CommodityID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Commodity')),
            ],
            options={
                'verbose_name_plural': 'Commodity_History',
                'db_table': 'Commodity_History',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('currency_id', models.BigAutoField(db_column='CurrencyID', primary_key=True, serialize=False)),
                ('currency_name', models.CharField(db_column='CurrencyName', max_length=50, unique=True)),
                ('currency_code', models.CharField(db_column='CurrencyCode', max_length=3, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Currency',
                'db_table': 'Currency',
            },
        ),
        migrations.CreateModel(
            name='CurrencyHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('currency_version_id', models.BigAutoField(db_column='CurrencyVersionID', primary_key=True, serialize=False)),
                ('currency_name', models.CharField(db_column='CurrencyName', max_length=50)),
                ('currency_code', models.CharField(db_column='CurrencyCode', max_length=3)),
                ('currency', models.ForeignKey(db_column='CurrencyID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Currency')),
            ],
            options={
                'verbose_name_plural': 'Currency_History',
                'db_table': 'Currency_History',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('customer_id', models.BigAutoField(db_column='CustomerID', primary_key=True, serialize=False)),
                ('customer_name', models.CharField(db_column='CustomerName', max_length=100, null=True)),
                ('customer_alias', models.CharField(db_column='CustomerAlias', max_length=100, null=True)),
                ('customer_address_line_1', models.CharField(db_column='CustomerAddressLine1', max_length=100, null=True)),
                ('customer_address_line_2', models.CharField(db_column='CustomerAddressLine2', max_length=100, null=True)),
                ('postal_code', models.CharField(db_column='PostalCode', max_length=10, null=True)),
                ('contact_name', models.CharField(db_column='ContactName', max_length=100, null=True)),
                ('contact_title', models.CharField(db_column='ContactTitle', max_length=100, null=True)),
                ('phone', models.CharField(db_column='Phone', max_length=100, null=True)),
                ('email', models.CharField(db_column='Email', max_length=100, null=True)),
                ('website', models.CharField(db_column='Website', max_length=100, null=True)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('account', models.ForeignKey(db_column='AccountID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.Account')),
                ('service_level', models.ForeignKey(db_column='ServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevel')),
                ('service_point', models.ForeignKey(db_column='ServicePointID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.ServicePoint')),
            ],
            options={
                'verbose_name_plural': 'Customer',
                'db_table': 'Customer',
            },
        ),
        migrations.CreateModel(
            name='CustomerHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('customer_version_id', models.BigAutoField(db_column='CustomerVersionID', primary_key=True, serialize=False)),
                ('customer_name', models.CharField(db_column='CustomerName', max_length=100, null=True)),
                ('customer_alias', models.CharField(db_column='CustomerAlias', max_length=100, null=True)),
                ('customer_address_line_1', models.CharField(db_column='CustomerAddressLine1', max_length=100, null=True)),
                ('customer_address_line_2', models.CharField(db_column='CustomerAddressLine2', max_length=100, null=True)),
                ('postal_code', models.CharField(db_column='PostalCode', max_length=10, null=True)),
                ('contact_name', models.CharField(db_column='ContactName', max_length=100, null=True)),
                ('contact_title', models.CharField(db_column='ContactTitle', max_length=100, null=True)),
                ('phone', models.CharField(db_column='Phone', max_length=100, null=True)),
                ('email', models.CharField(db_column='Email', max_length=100, null=True)),
                ('website', models.CharField(db_column='Website', max_length=100, null=True)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('account_version', models.ForeignKey(db_column='AccountVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.AccountHistory')),
                ('customer', models.ForeignKey(db_column='CustomerID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Customer')),
                ('service_level_version', models.ForeignKey(db_column='ServiceLevelVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevelHistory')),
                ('service_point_version', models.ForeignKey(db_column='ServicePointVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.ServicePointHistory')),
            ],
            options={
                'verbose_name_plural': 'Customer_History',
                'db_table': 'Customer_History',
            },
        ),
        migrations.CreateModel(
            name='CustomerZones',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('customer_zone_id', models.BigAutoField(db_column='CustomerZoneID', max_length=8, primary_key=True, serialize=False)),
                ('customer_zone_name', models.TextField(db_column='CustomerZoneName', max_length=40, null=True)),
                ('customer_zone_external_tmid', models.TextField(db_column='ExternalTMID', max_length=50, null=True)),
                ('customer_zone_code', models.TextField(db_column='CustomerZoneCode', max_length=10, null=True)),
            ],
            options={
                'verbose_name_plural': 'CustomerZones',
                'db_table': 'CustomerZones',
            },
        ),
        migrations.CreateModel(
            name='CustomerZonesHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=False)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=False)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=False)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=False)),
                ('comments', models.TextField(db_column='Comments', default=False)),
                ('customer_zone_version_id', models.BigAutoField(db_column='CustomerZoneVersionID', primary_key=True, serialize=False)),
                ('customer_zone_name', models.TextField(db_column='CustomerZoneName', max_length=40, null=True)),
                ('customer_zone_external_tmid', models.TextField(db_column='ExternalTMID', max_length=50, null=True)),
                ('customer_zone_code', models.TextField(db_column='CustomerZoneCode', max_length=10, null=True)),
                ('customer_zone_id', models.ForeignKey(db_column='CustomerZoneID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.CustomerZones')),
            ],
            options={
                'verbose_name_plural': 'CustomerZones_History',
                'db_table': 'CustomerZones_History',
            },
        ),
        migrations.CreateModel(
            name='EquipmentType',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('equipment_type_id', models.BigAutoField(db_column='EquipmentTypeID', primary_key=True, serialize=False)),
                ('equipment_type_name', models.CharField(db_column='EquipmentTypeName', max_length=50)),
                ('equipment_type_code', models.CharField(db_column='EquipmentTypeCode', max_length=10)),
            ],
            options={
                'verbose_name_plural': 'EquipmentType',
                'db_table': 'EquipmentType',
            },
        ),
        migrations.CreateModel(
            name='EquipmentTypeHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('equipment_type_version_id', models.BigAutoField(db_column='EquipmentTypeVersionID', primary_key=True, serialize=False)),
                ('equipment_type_name', models.CharField(db_column='EquipmentTypeName', max_length=50)),
                ('equipment_type_code', models.CharField(db_column='EquipmentTypeCode', max_length=2)),
                ('equipment_type', models.ForeignKey(db_column='EquipmentTypeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.EquipmentType')),
            ],
            options={
                'verbose_name_plural': 'EquipmentType_History',
                'db_table': 'EquipmentType_History',
            },
        ),
        migrations.CreateModel(
            name='EquipmentTypeMap',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('equipment_type_map_id', models.BigAutoField(db_column='EquipmentTypeMapID', primary_key=True, serialize=False)),
                ('tmid', models.IntegerField(db_column='TMID', default=None)),
                ('equipment_type_id', models.ForeignKey(db_column='EquipmentTypeID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.EquipmentType')),
            ],
            options={
                'verbose_name_plural': 'EquipmentTypeMap',
                'db_table': 'EquipmentTypeMap',
            },
        ),
        migrations.CreateModel(
            name='EquipmentTypeMapHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('equipment_type_map_version_id', models.BigAutoField(db_column='EquipmentTypeMapVersionID', primary_key=True, serialize=False)),
                ('tmid', models.IntegerField(db_column='TMID', default=None)),
                ('equipment_type_map', models.ForeignKey(db_column='EquipmentTypeMapID', on_delete=django.db.models.deletion.CASCADE, to='rrf.EquipmentTypeMap')),
                ('equipment_type_version_id', models.ForeignKey(db_column='EquipmentTypeVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.EquipmentTypeHistory')),
            ],
            options={
                'verbose_name_plural': 'EquipmentTypeMap_History',
                'db_table': 'EquipmentTypeMap_History',
            },
        ),
        migrations.CreateModel(
            name='FreeTime',
            fields=[
                ('free_time_id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='FreeTimeID')),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('min_break', models.DecimalField(db_column='MinBreak', decimal_places=6, default=None, max_digits=19, null=True)),
                ('max_break', models.DecimalField(db_column='MaxBreak', decimal_places=6, default=None, max_digits=19, null=True)),
                ('tm_detention_id', models.BigIntegerField(db_column='TMDetentionID', default=None, null=True)),
                ('free_time', models.IntegerField(db_column='FreeTime', default=None, null=True)),
                ('free_time_unit', models.TextField(db_column='FreeTimeUnit', default=None, max_length=10, null=True)),
            ],
            options={
                'verbose_name_plural': 'FreeTime',
                'db_table': 'FreeTime',
            },
        ),
        migrations.CreateModel(
            name='FreeTimeHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None, null=True)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False, null=True)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None, null=True)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None, null=True)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.TextField(db_column='Comments', default=None, null=True)),
                ('free_time_version_id', models.BigAutoField(db_column='FreeTimeVersionID', primary_key=True, serialize=False)),
                ('min_break', models.DecimalField(db_column='MinBreak', decimal_places=6, default=None, max_digits=19, null=True)),
                ('max_break', models.DecimalField(db_column='MaxBreak', decimal_places=6, default=None, max_digits=19, null=True)),
                ('tm_detention_id', models.BigIntegerField(db_column='TMDetentionID', default=None, null=True)),
                ('free_time', models.IntegerField(db_column='FreeTime', default=None, null=True)),
                ('free_time_unit', models.TextField(db_column='FreeTimeUnit', default=None, max_length=10, null=True)),
                ('free_time_id', models.ForeignKey(db_column='FreeTimeID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.FreeTime')),
            ],
            options={
                'verbose_name_plural': 'FreeTime_History',
                'db_table': 'FreeTime_History',
            },
        ),
        migrations.CreateModel(
            name='FreightBillWarning',
            fields=[
                ('freight_bill_warning_id', models.BigAutoField(db_column='FreightBillsWarningID', primary_key=True, serialize=False)),
                ('freight_bill_number', models.CharField(db_column='FreightBillNo', max_length=50, null=True)),
                ('origin', models.TextField(db_column='Origin', default=None, max_length=50, null=True)),
                ('destination', models.TextField(db_column='Destination', default=None, max_length=50, null=True)),
                ('service_level', models.TextField(db_column='ServiceLevel', default=None, max_length=50, null=True)),
                ('billed_weight', models.DecimalField(db_column='BilledWeight', decimal_places=6, default=None, max_digits=19, null=True)),
                ('costing_date', models.DateField(db_column='CostingDate', max_length=50, null=True)),
                ('revenue', models.DecimalField(db_column='Revenue', decimal_places=6, default=None, max_digits=19, null=True)),
                ('total_cost', models.DecimalField(db_column='TotalCost', decimal_places=6, default=None, max_digits=19, null=True)),
                ('profit', models.DecimalField(db_column='Profit', decimal_places=6, default=None, max_digits=19, null=True)),
            ],
            options={
                'verbose_name_plural': 'FreightBillWarning',
                'db_table': 'FreightBillWarning',
            },
        ),
        migrations.CreateModel(
            name='FreightClass',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('freight_class_id', models.BigAutoField(db_column='FreightClassID', primary_key=True, serialize=False)),
                ('freight_class_name', models.CharField(db_column='FreightClassName', max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'FreightClass',
                'db_table': 'FreightClass',
            },
        ),
        migrations.CreateModel(
            name='FreightClassHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('freight_class_version_id', models.BigAutoField(db_column='FreightClassVersionID', primary_key=True, serialize=False)),
                ('freight_class_name', models.CharField(db_column='FreightClassName', max_length=50)),
                ('freight_class', models.ForeignKey(db_column='FreightClassID', on_delete=django.db.models.deletion.CASCADE, to='rrf.FreightClass')),
            ],
            options={
                'verbose_name_plural': 'FreightClass_History',
                'db_table': 'FreightClass_History',
            },
        ),
        migrations.CreateModel(
            name='ImportFile',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Id')),
                ('file_name', models.TextField(db_column='FileName')),
                ('request_section_id', models.TextField(db_column='RequestSectionID', null=True)),
                ('record_count', models.IntegerField(db_column='RecordCount')),
                ('uni_status', models.TextField(db_column='UniStatus', default='UNPROCESSED')),
                ('uni_type', models.TextField(db_column='UniType', default='UNDEFINED')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='CreatedOn')),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('rate_type', models.TextField(db_column='RateType', default='UNDEFINED')),
                ('duplicate_lane_count', models.IntegerField(db_column='DuplicateLaneCount', default=0)),
                ('directional_lane_count', models.IntegerField(db_column='DirectionalLaneCount', default=0)),
                ('between_lane_count', models.IntegerField(db_column='BetweenLaneCount', default=0)),
                ('flagged_count', models.IntegerField(db_column='FlaggedCount', default=0)),
                ('unserviceable_count', models.IntegerField(db_column='UnserviceableCount', default=0)),
                ('created_by', models.ForeignKey(db_column='CreatedBy', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'ImportFile',
                'db_table': 'ImportFile',
            },
        ),
        migrations.CreateModel(
            name='InterlinerCosts',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('interliner_cost_id', models.BigAutoField(db_column='InterlinerCostID', primary_key=True, serialize=False)),
                ('rate_sheet_id', models.TextField(db_column='RateSheetID', default=None, max_length=50, null=True)),
                ('rate_sheet_name', models.TextField(db_column='RateSheetName', default=None, max_length=4000, null=True)),
                ('vendor_id', models.TextField(db_column='VendorID', default=None, max_length=50, null=True)),
                ('as_rating', models.BooleanField(db_column='AsRating', default=False)),
                ('unit_symbol_id', models.BigIntegerField(db_column='UnitSymbolID', default=None)),
                ('unit_factor', models.DecimalField(db_column='UnitFactor', decimal_places=6, default=None, max_digits=19, null=True)),
                ('is_between', models.BooleanField(db_column='IsBetween', default=False)),
                ('customer_discount', models.DecimalField(db_column='CustomerDiscount', decimal_places=6, default=None, max_digits=19, null=True)),
                ('cost', models.TextField(db_column='Cost', default=None, max_length=4000, null=True)),
                ('destination_id', models.BigIntegerField(db_column='DestinationID', default=None)),
                ('origin_id', models.BigIntegerField(db_column='OriginID', default=None)),
                ('direction', models.TextField(db_column='Direction', default=None, max_length=50, null=True)),
                ('currency_id', models.ForeignKey(db_column='CurrencyID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Currency')),
            ],
            options={
                'verbose_name_plural': 'InterlinerCosts',
                'db_table': 'InterlinerCosts',
            },
        ),
        migrations.CreateModel(
            name='InterlinerCostsHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('rate_sheet_version_id', models.BigAutoField(db_column='RateSheetVersionID', primary_key=True, serialize=False)),
                ('rate_sheet_name', models.TextField(db_column='RateSheetName', default=None, max_length=4000, null=True)),
                ('vendor_id', models.TextField(db_column='VendorID', default=None, max_length=50, null=True)),
                ('as_rating', models.BooleanField(db_column='AsRating', default=False)),
                ('unit_symbol_id', models.BigIntegerField(db_column='UnitSymbolID', default=None)),
                ('unit_factor', models.DecimalField(db_column='UnitFactor', decimal_places=6, default=None, max_digits=19, null=True)),
                ('is_between', models.BooleanField(db_column='IsBetween', default=False)),
                ('customer_discount', models.DecimalField(db_column='CustomerDiscount', decimal_places=6, default=None, max_digits=19, null=True)),
                ('cost', models.TextField(db_column='Cost', default=None, max_length=4000, null=True)),
                ('destination_id', models.BigIntegerField(db_column='DestinationID', default=None)),
                ('origin_id', models.BigIntegerField(db_column='OriginID', default=None)),
                ('direction', models.TextField(db_column='Direction', default=None, max_length=50, null=True)),
                ('currency_version_id', models.ForeignKey(db_column='CurrencyVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.CurrencyHistory')),
            ],
            options={
                'verbose_name_plural': 'InterlinerCosts_History',
                'db_table': 'InterlinerCosts_History',
            },
        ),
        migrations.CreateModel(
            name='LaneType',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('lane_type_id', models.BigAutoField(db_column='LaneTypeID', primary_key=True, serialize=False)),
                ('lane_type_name', models.TextField(db_column='LaneTypeName', default=None, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'LaneType',
                'db_table': 'LaneType',
            },
        ),
        migrations.CreateModel(
            name='LaneTypeHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('lane_type_version_id', models.BigAutoField(db_column='LaneTypeVersionID', primary_key=True, serialize=False)),
                ('lane_type_nName', models.TextField(db_column='LaneTypeName', default=None, max_length=50, null=True)),
                ('lane_type_id', models.ForeignKey(db_column='LaneTypeID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.LaneType')),
            ],
            options={
                'verbose_name_plural': 'LaneType_History',
                'db_table': 'LaneType_History',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('language_id', models.BigAutoField(db_column='LanguageID', primary_key=True, serialize=False)),
                ('language_name', models.CharField(db_column='LanguageName', max_length=50, unique=True)),
                ('language_code', models.CharField(db_column='LanguageCode', max_length=2, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Language',
                'db_table': 'Language',
            },
        ),
        migrations.CreateModel(
            name='LanguageHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('language_version_id', models.BigAutoField(db_column='LanguageVersionID', primary_key=True, serialize=False)),
                ('language_name', models.CharField(db_column='LanguageName', max_length=50)),
                ('language_code', models.CharField(db_column='LanguageCode', max_length=2)),
                ('language', models.ForeignKey(db_column='LanguageID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Language')),
            ],
            options={
                'verbose_name_plural': 'Language_History',
                'db_table': 'Language_History',
            },
        ),
        migrations.CreateModel(
            name='LastAssignedUser',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('last_assigned_user_id', models.BigAutoField(db_column='LastAssignedUserID', primary_key=True, serialize=False)),
                ('persona_name', models.CharField(db_column='PersonaName', max_length=50)),
                ('service_level', models.ForeignKey(db_column='ServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevel')),
                ('user', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'LastAssignedUser',
                'db_table': 'LastAssignedUser',
            },
        ),
        migrations.CreateModel(
            name='PointType',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('point_type_id', models.BigAutoField(db_column='PointTypeID', primary_key=True, serialize=False)),
                ('point_type_name', models.TextField(db_column='PointTypeName', default=None, max_length=4000)),
                ('point_type_order_id', models.IntegerField(db_column='PointTypeOrderID', default=None)),
            ],
            options={
                'verbose_name_plural': 'PointType',
                'db_table': 'PointType',
            },
        ),
        migrations.CreateModel(
            name='PointTypeHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('point_type_version_id', models.BigAutoField(db_column='PointTypeVersionID', primary_key=True, serialize=False)),
                ('point_type_name', models.TextField(db_column='PointTypeName', default=None, max_length=4000)),
                ('point_type_order_id', models.IntegerField(db_column='PointTypeOrderID', default=None)),
                ('point_type_id', models.ForeignKey(db_column='PointTypeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.PointType')),
            ],
            options={
                'verbose_name_plural': 'PointType_History',
                'db_table': 'PointType_History',
            },
        ),
        migrations.CreateModel(
            name='ProfitLossSummary',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('profit_loss_summary_id', models.BigAutoField(db_column='ProfitLossSummaryID', primary_key=True, serialize=False)),
                ('num_freight_bills', models.DecimalField(db_column='NumFreightBills', decimal_places=6, default=None, max_digits=19, null=True)),
                ('billed_weight', models.DecimalField(db_column='BilledWeight', decimal_places=6, default=None, max_digits=19, null=True)),
                ('revenue', models.DecimalField(db_column='Revenue', decimal_places=6, default=None, max_digits=19, null=True)),
                ('cost', models.DecimalField(db_column='Cost', decimal_places=6, default=None, max_digits=19, null=True)),
                ('profit', models.DecimalField(db_column='Profit', decimal_places=6, default=None, max_digits=19, null=True)),
                ('margin', models.DecimalField(db_column='Margin', decimal_places=6, default=None, max_digits=19, null=True)),
                ('required_increase', models.DecimalField(db_column='RequiredIncrease', decimal_places=6, default=None, max_digits=19, null=True)),
                ('lane_type_id', models.ForeignKey(db_column='LaneTypeID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.LaneType')),
            ],
            options={
                'verbose_name_plural': 'ProfitLossSummary',
                'db_table': 'ProfitLossSummary',
            },
        ),
        migrations.CreateModel(
            name='ProfitLossSummaryHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('profit_loss_summary_version_id', models.BigAutoField(db_column='ProfitLossSummaryVersionID', primary_key=True, serialize=False)),
                ('num_freight_bills', models.DecimalField(db_column='NumFreightBills', decimal_places=6, default=None, max_digits=19, null=True)),
                ('billed_weight', models.DecimalField(db_column='BilledWeight', decimal_places=6, default=None, max_digits=19, null=True)),
                ('revenue', models.DecimalField(db_column='Revenue', decimal_places=6, default=None, max_digits=19, null=True)),
                ('cost', models.DecimalField(db_column='Cost', decimal_places=6, default=None, max_digits=19, null=True)),
                ('profit', models.DecimalField(db_column='Profit', decimal_places=6, default=None, max_digits=19, null=True)),
                ('margin', models.DecimalField(db_column='Margin', decimal_places=6, default=None, max_digits=19, null=True)),
                ('required_increase', models.DecimalField(db_column='RequiredIncrease', decimal_places=6, default=None, max_digits=19, null=True)),
                ('lane_type_version_id', models.ForeignKey(db_column='LaneTypeVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.LaneTypeHistory')),
                ('profit_loss_summary_id', models.ForeignKey(db_column='ProfitLossSummaryID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.ProfitLossSummary')),
            ],
            options={
                'verbose_name_plural': 'ProfitLossSummary_History',
                'db_table': 'ProfitLossSummary_History',
            },
        ),
        migrations.CreateModel(
            name='RateBase',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('rate_base_id', models.BigAutoField(db_column='RateBaseID', primary_key=True, serialize=False)),
                ('rate_base_name', models.CharField(db_column='RateBaseName', max_length=50)),
                ('product_number', models.CharField(db_column='ProductNumber', max_length=50, null=True)),
                ('description', models.TextField(db_column='Description', max_length=50, null=True)),
                ('release', models.CharField(db_column='Release', max_length=50, null=True)),
                ('effective_date', models.DateField(db_column='EffectiveDate', max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'RateBase',
                'db_table': 'RateBase',
            },
        ),
        migrations.CreateModel(
            name='RateBaseHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('rate_base_version_id', models.BigAutoField(db_column='RateBaseVersionID', primary_key=True, serialize=False)),
                ('rate_base_name', models.CharField(db_column='RateBaseName', max_length=50)),
                ('product_number', models.CharField(db_column='ProductNumber', max_length=50, null=True)),
                ('description', models.TextField(db_column='Description', max_length=50, null=True)),
                ('release', models.CharField(db_column='Release', max_length=50, null=True)),
                ('effective_date', models.DateField(db_column='EffectiveDate', max_length=50, null=True)),
                ('rate_base', models.ForeignKey(db_column='RateBaseID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RateBase')),
            ],
            options={
                'verbose_name_plural': 'RateBase_History',
                'db_table': 'RateBase_History',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_id', models.BigAutoField(db_column='RequestID', primary_key=True, serialize=False)),
                ('request_code', models.CharField(db_column='RequestCode', max_length=32, unique=True)),
                ('request_major_version', models.IntegerField(db_column='RequestMajorVersion', default=1)),
                ('initiated_on', models.DateTimeField(auto_now_add=True, db_column='InitiatedOn')),
                ('submitted_on', models.DateTimeField(db_column='SubmittedOn', null=True)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('is_review', models.BooleanField(db_column='IsReview', default=False)),
                ('uni_type', models.TextField(db_column='UniType', null=True)),
                ('speedsheet_name', models.TextField(blank=True, db_column='SpeedsheetName', null=True)),
                ('request_source_id', models.BigIntegerField(db_column='RequestSourceID', null=True)),
                ('pricing_running', models.BooleanField(db_column='PricingRunning', default=0)),
                ('cost_plus_status', models.TextField(db_column='CostPlusStatus', max_length=20, null=True)),
                ('carrier_status', models.TextField(db_column='CarrierStatus', max_length=20, null=True)),
                ('sales_status', models.TextField(db_column='SalesStatus', max_length=20, null=True)),
                ('pricing_opened', models.DateTimeField(db_column='PricingOpened', null=True)),
                ('pricing_assigned', models.DateTimeField(db_column='PricingAssigned', null=True)),
                ('new_lanes_only', models.BooleanField(db_column='NewLanesOnly', default=False)),
                ('approver', models.ForeignKey(blank=True, db_column='ApproverID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('credit_analyst', models.ForeignKey(db_column='CreditAnalystID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('current_editor', models.ForeignKey(db_column='CurrentEditorID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('initiated_by', models.ForeignKey(db_column='InitiatedBy', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('language', models.ForeignKey(db_column='LanguageID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.Language')),
                ('pricing_analyst', models.ForeignKey(db_column='PricingAnalystID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('request_owner', models.ForeignKey(blank=True, db_column='RequestOwner', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Request',
                'db_table': 'Request',
            },
        ),
        migrations.CreateModel(
            name='RequestEditorRight',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_editor_right_id', models.BigAutoField(db_column='RequestEditorRightID', primary_key=True, serialize=False)),
                ('notification', models.ForeignKey(db_column='NotificationID', on_delete=django.db.models.deletion.CASCADE, to='pac.Notification')),
                ('request', models.ForeignKey(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Request')),
                ('user', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'RequestEditorRight',
                'db_table': 'RequestEditorRight',
            },
        ),
        migrations.CreateModel(
            name='RequestEditorRightHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_editor_right_version_id', models.BigAutoField(db_column='RequestEditorRightVersionID', primary_key=True, serialize=False)),
                ('notification_version', models.ForeignKey(db_column='NotificationVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.NotificationHistory')),
                ('request_editor_right', models.ForeignKey(db_column='RequestEditorRightID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestEditorRight')),
            ],
            options={
                'verbose_name_plural': 'RequestEditorRight_History',
                'db_table': 'RequestEditorRight_History',
            },
        ),
        migrations.CreateModel(
            name='RequestHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_version_id', models.BigAutoField(db_column='RequestVersionID', primary_key=True, serialize=False)),
                ('request_code', models.CharField(db_column='RequestCode', max_length=32)),
                ('request_major_version', models.IntegerField(db_column='RequestMajorVersion', default=1)),
                ('initiated_on', models.DateTimeField(db_column='InitiatedOn')),
                ('submitted_on', models.DateTimeField(db_column='SubmittedOn', null=True)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('is_review', models.BooleanField(db_column='IsReview', default=False)),
                ('uni_type', models.TextField(db_column='UniType', null=True)),
                ('speedsheet_name', models.TextField(blank=True, db_column='SpeedsheetName', null=True)),
                ('request_source_id', models.BigIntegerField(db_column='RequestSourceID', null=True)),
                ('pricing_running', models.BooleanField(db_column='PricingRunning', default=0)),
                ('cost_plus_status', models.TextField(db_column='CostPlusStatus', max_length=20, null=True)),
                ('carrier_status', models.TextField(db_column='CarrierStatus', max_length=20, null=True)),
                ('sales_status', models.TextField(db_column='SalesStatus', max_length=20, null=True)),
                ('pricing_opened', models.DateTimeField(db_column='PricingOpened', null=True)),
                ('pricing_assigned', models.DateTimeField(db_column='PricingAssigned', null=True)),
                ('new_lanes_only', models.BooleanField(db_column='NewLanesOnly', default=False)),
                ('approver_version', models.ForeignKey(blank=True, db_column='ApproverVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.UserHistory')),
                ('credit_analyst_version', models.ForeignKey(db_column='CreditAnalystVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.UserHistory')),
                ('current_editor_version', models.ForeignKey(db_column='CurrentEditorVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.UserHistory')),
                ('initiated_by_version', models.ForeignKey(blank=True, db_column='InitiatedByVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.UserHistory')),
                ('language', models.ForeignKey(db_column='LanguageVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.Language')),
                ('pricing_analyst_version', models.ForeignKey(db_column='PricingAnalystVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.UserHistory')),
                ('request', models.ForeignKey(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Request')),
                ('request_owner_version_id', models.ForeignKey(blank=True, db_column='RequestOwnerVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Request_History',
                'db_table': 'Request_History',
            },
        ),
        migrations.CreateModel(
            name='RequestInformation',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_information_id', models.BigAutoField(db_column='RequestInformationID', primary_key=True, serialize=False)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('is_new_business', models.BooleanField(db_column='IsNewBusiness', default=True, null=True)),
                ('priority', models.IntegerField(db_column='Priority', null=True)),
                ('effective_date', models.DateField(db_column='EffectiveDate', null=True)),
                ('expiry_date', models.DateField(db_column='ExpiryDate', null=True)),
                ('currency', models.ForeignKey(db_column='CurrencyID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.Currency')),
                ('customer', models.ForeignKey(db_column='CustomerID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Customer')),
                ('language', models.ForeignKey(db_column='LanguageID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.Language')),
                ('request_id', models.ForeignKey(db_column='RequestID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.Request')),
            ],
            options={
                'verbose_name_plural': 'RequestInformation',
                'db_table': 'RequestInformation',
            },
        ),
        migrations.CreateModel(
            name='RequestInformationHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_information_version_id', models.BigAutoField(db_column='RequestInformationVersionID', primary_key=True, serialize=False)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('is_new_business', models.BooleanField(db_column='IsNewBusiness', default=True, null=True)),
                ('priority', models.IntegerField(db_column='Priority', null=True)),
                ('effective_date', models.DateField(db_column='EffectiveDate', null=True)),
                ('expiry_date', models.DateField(db_column='ExpiryDate', null=True)),
                ('currency_version', models.ForeignKey(db_column='CurrencyVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.CurrencyHistory')),
                ('customer_version', models.ForeignKey(db_column='CustomerVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.CustomerHistory')),
                ('language_version', models.ForeignKey(db_column='LanguageVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.LanguageHistory')),
                ('request_information', models.ForeignKey(db_column='RequestInformationID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestInformation')),
            ],
            options={
                'verbose_name_plural': 'RequestInformation_History',
                'db_table': 'RequestInformation_History',
            },
        ),
        migrations.CreateModel(
            name='RequestProfile',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_profile_id', models.BigAutoField(db_column='RequestProfileID', primary_key=True, serialize=False)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('using_standard_tariff', models.BooleanField(db_column='UsingStandardTariff', default=False, null=True)),
                ('exclude_from_fak_rating', models.BooleanField(db_column='ExcludeFromFAKRating', default=False, null=True)),
                ('use_actual_weight', models.BooleanField(db_column='UseActualWeight', default=False, null=True)),
                ('is_class_density', models.BooleanField(db_column='IsClassDensity', default=False, null=True)),
                ('avg_weight_density', models.DecimalField(db_column='AvgWeightedDensity', decimal_places=6, max_digits=19, null=True)),
                ('override_density', models.DecimalField(db_column='OverrideDensity', decimal_places=6, max_digits=19, null=True)),
                ('subject_to_cube', models.DecimalField(db_column='SubjectToCube', decimal_places=6, max_digits=19, null=True)),
                ('linear_length_rule', models.DecimalField(db_column='LinearLengthRule', decimal_places=6, max_digits=19, null=True)),
                ('weight_per_linear_length_rule', models.DecimalField(db_column='WeightPerLinearLengthRule', decimal_places=6, max_digits=19, null=True)),
                ('avg_weighted_class', models.DecimalField(db_column='AvgWeightedClass', decimal_places=6, max_digits=19, null=True)),
                ('override_class', models.DecimalField(db_column='OverrideClass', decimal_places=6, max_digits=19, null=True)),
                ('freight_elements', models.TextField(db_column='FreightElements', default='[]', null=True)),
                ('shipments', models.TextField(db_column='Shipments', default='[]', null=True)),
                ('shipping_controls', models.TextField(db_column='ShippingControls', default='[]', null=True)),
                ('competitors', models.TextField(db_column='Competitors', default='[]', null=True)),
                ('class_controls', models.TextField(db_column='ClassControls', default='[]', null=True)),
                ('request_id', models.ForeignKey(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Request')),
            ],
            options={
                'verbose_name_plural': 'RequestProfile',
                'db_table': 'RequestProfile',
            },
        ),
        migrations.CreateModel(
            name='RequestProfileHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_profile_version_id', models.BigAutoField(db_column='RequestProfileVersionID', primary_key=True, serialize=False)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('using_standard_tariff', models.BooleanField(db_column='UsingStandardTariff', default=False, null=True)),
                ('exclude_from_fak_rating', models.BooleanField(db_column='ExcludeFromFAKRating', default=False, null=True)),
                ('use_actual_weight', models.BooleanField(db_column='UseActualWeight', default=False, null=True)),
                ('is_class_density', models.BooleanField(db_column='IsClassDensity', default=False, null=True)),
                ('avg_weight_density', models.DecimalField(db_column='AvgWeightedDensity', decimal_places=6, max_digits=19, null=True)),
                ('override_density', models.DecimalField(db_column='OverrideDensity', decimal_places=6, max_digits=19, null=True)),
                ('subject_to_cube', models.DecimalField(db_column='SubjectToCube', decimal_places=6, max_digits=19, null=True)),
                ('linear_length_rule', models.DecimalField(db_column='LinearLengthRule', decimal_places=6, max_digits=19, null=True)),
                ('weight_per_linear_length_rule', models.DecimalField(db_column='WeightPerLinearLengthRule', decimal_places=6, max_digits=19, null=True)),
                ('avg_weighted_class', models.DecimalField(db_column='AvgWeightedClass', decimal_places=6, max_digits=19, null=True)),
                ('override_class', models.DecimalField(db_column='OverrideClass', decimal_places=6, max_digits=19, null=True)),
                ('freight_elements', models.TextField(db_column='FreightElements', default='[]', null=True)),
                ('shipments', models.TextField(db_column='Shipments', default='[]', null=True)),
                ('shipping_controls', models.TextField(db_column='ShippingControls', default='[]', null=True)),
                ('competitors', models.TextField(db_column='Competitors', default='[]', null=True)),
                ('class_controls', models.TextField(db_column='ClassControls', default='[]', null=True)),
                ('request_id', models.ForeignKey(db_column='RequestVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestHistory')),
                ('request_profile', models.ForeignKey(db_column='RequestProfileID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestProfile')),
            ],
            options={
                'verbose_name_plural': 'RequestProfile_History',
                'db_table': 'RequestProfile_History',
            },
        ),
        migrations.CreateModel(
            name='RequestSection',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_id', models.BigAutoField(db_column='RequestSectionID', primary_key=True, serialize=False)),
                ('section_name', models.CharField(db_column='SectionName', max_length=50)),
                ('weight_break', models.TextField(db_column='WeightBreak', default='[]')),
                ('is_density_pricing', models.BooleanField(db_column='IsDensityPricing', default=False)),
                ('override_density', models.DecimalField(db_column='OverrideDensity', decimal_places=6, max_digits=19, null=True)),
                ('unit_factor', models.DecimalField(db_column='UnitFactor', decimal_places=6, default=100, max_digits=19)),
                ('maximum_value', models.DecimalField(db_column='MaximumValue', decimal_places=6, default=100, max_digits=19)),
                ('as_rating', models.BooleanField(db_column='AsRating', default=True)),
                ('has_min', models.BooleanField(db_column='HasMin', default=True)),
                ('has_max', models.BooleanField(db_column='HasMax', default=True)),
                ('base_rate', models.BooleanField(db_column='BaseRate', default=True)),
                ('request_section_source_id', models.BigIntegerField(blank=True, db_column='RequestSectionSourceID', default=None, null=True)),
                ('tmid', models.IntegerField(db_column='TMID', default=None, null=True)),
                ('commodity_id', models.ForeignKey(blank=True, db_column='CommodityID', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.Commodity')),
                ('equipment_type', models.ForeignKey(db_column='EquipmentTypeID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.EquipmentType')),
                ('override_class', models.ForeignKey(db_column='OverrideClassID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.FreightClass')),
                ('rate_base', models.ForeignKey(db_column='RateBaseID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RateBase')),
                ('request_id', models.ForeignKey(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Request')),
                ('sub_service_level', models.ForeignKey(db_column='SubServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevel')),
                ('weight_break_header', models.ForeignKey(db_column='WeightBreakHeaderID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.WeightBreakHeader')),
            ],
            options={
                'verbose_name_plural': 'RequestSection',
                'db_table': 'RequestSection',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_version_id', models.BigAutoField(db_column='RequestSectionVersionID', primary_key=True, serialize=False)),
                ('section_name', models.CharField(db_column='SectionName', max_length=50)),
                ('weight_break', models.TextField(db_column='WeightBreak', default='[]')),
                ('is_density_pricing', models.BooleanField(db_column='IsDensityPricing', default=False)),
                ('override_density', models.DecimalField(db_column='OverrideDensity', decimal_places=6, max_digits=19, null=True)),
                ('unit_factor', models.DecimalField(db_column='UnitFactor', decimal_places=6, max_digits=19, null=True)),
                ('maximum_value', models.DecimalField(db_column='MaximumValue', decimal_places=6, max_digits=19, null=True)),
                ('as_rating', models.BooleanField(db_column='AsRating', null=True)),
                ('has_min', models.BooleanField(db_column='HasMin', null=True)),
                ('has_max', models.BooleanField(db_column='HasMax', null=True)),
                ('base_rate', models.BooleanField(db_column='BaseRate', null=True)),
                ('request_section_source_id', models.BigIntegerField(blank=True, db_column='RequestSectionSourceID', default=None, null=True)),
                ('tmid', models.IntegerField(db_column='TMID', default=None, null=True)),
                ('commodity_id', models.ForeignKey(db_column='CommodityVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.Commodity')),
                ('equipment_type_version', models.ForeignKey(db_column='EquipmentTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.EquipmentTypeHistory')),
                ('override_class_version', models.ForeignKey(db_column='OverrideClassVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.FreightClassHistory')),
                ('rate_base_version', models.ForeignKey(db_column='RateBaseVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RateBaseHistory')),
                ('request_section', models.ForeignKey(db_column='RequestSectionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestSection')),
                ('request_version_id', models.ForeignKey(db_column='RequestVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestHistory')),
                ('sub_service_level_version', models.ForeignKey(db_column='SubServiceLevelVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevelHistory')),
                ('weight_break_header_version', models.ForeignKey(db_column='WeightBreakHeaderVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.WeightBreakHeaderHistory')),
            ],
            options={
                'verbose_name_plural': 'RequestSection_History',
                'db_table': 'RequestSection_History',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionLane',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_lane_id', models.BigAutoField(db_column='RequestSectionLaneID', primary_key=True, serialize=False)),
                ('origin_id', models.BigIntegerField(db_column='OriginID', default=1)),
                ('destination_id', models.BigIntegerField(db_column='DestinationID', default=1)),
                ('is_published', models.BooleanField(db_column='IsPublished', default=False)),
                ('is_edited', models.BooleanField(db_column='IsEdited', default=False)),
                ('is_duplicate', models.BooleanField(db_column='IsDuplicate', default=False)),
                ('is_between', models.BooleanField(db_column='IsBetween', default=False)),
                ('commitment', models.TextField(db_column='Commitment', default='[]')),
                ('customer_rate', models.TextField(db_column='CustomerRate', default='[]')),
                ('customer_discount', models.TextField(db_column='CustomerDiscount', default='[]')),
                ('dr_rate', models.TextField(db_column='DrRate', default='[]')),
                ('partner_rate', models.TextField(db_column='PartnerRate', default='[]')),
                ('partner_discount', models.TextField(db_column='PartnerDiscount', default='[]')),
                ('profitability', models.TextField(db_column='Profitability', default='[]')),
                ('pickup_count', models.IntegerField(db_column='PickupCount', default=0, null=True)),
                ('delivery_count', models.IntegerField(db_column='DeliveryCount', default=0, null=True)),
                ('dock_adjustment', models.DecimalField(db_column='DockAdjustment', decimal_places=6, max_digits=19, null=True)),
                ('margin', models.TextField(db_column='Margin', default='[]')),
                ('density', models.TextField(db_column='Density', default='[]')),
                ('pickup_cost', models.TextField(db_column='PickupCost', default='[]')),
                ('delivery_cost', models.TextField(db_column='DeliveryCost', default='[]')),
                ('accessorials_value', models.TextField(db_column='AccessorialsValue', default='[]')),
                ('accessorials_percentage', models.TextField(db_column='AccessorialsPercentage', default='[]')),
                ('do_not_meet_commitment', models.BooleanField(db_column='DoNotMeetCommitment', default=False)),
                ('pricing_rates', models.TextField(db_column='PricingRates', default='[]', null=True)),
                ('workflow_errors', models.TextField(db_column='WorkflowErrors', default=None, null=True)),
                ('is_excluded', models.BooleanField(db_column='IsExcluded', default=False, null=True)),
                ('is_flagged', models.BooleanField(db_column='IsFlagged', default=False, null=True)),
                ('request_section_lane_source_id', models.BigIntegerField(db_column='RequestSectionLaneSourceID', null=True)),
                ('deficit', models.TextField(db_column='Deficit', default=None, max_length=4000, null=True)),
                ('impact_percentage', models.TextField(db_column='ImpactPercentage', default=None, max_length=4000, null=True)),
                ('embedded_cost', models.TextField(db_column='EmbeddedCost', default=None, max_length=4000, null=True)),
                ('cost', models.TextField(db_column='Cost', default='[]')),
                ('tmid', models.IntegerField(db_column='TMID', default=None, null=True)),
                ('destination_type_id', models.ForeignKey(db_column='DestinationTypeID', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointType')),
                ('origin_type_id', models.ForeignKey(db_column='OriginTypeID', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointType')),
                ('request_section', models.ForeignKey(db_column='RequestSectionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestSection')),
            ],
            options={
                'verbose_name_plural': 'RequestSectionLane',
                'db_table': 'RequestSectionLane',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionLaneHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_lane_version_id', models.BigAutoField(db_column='RequestSectionLaneVersionID', primary_key=True, serialize=False)),
                ('origin_id', models.BigIntegerField(db_column='OriginID', null=True)),
                ('destination_id', models.BigIntegerField(db_column='DestinationID', null=True)),
                ('is_published', models.BooleanField(db_column='IsPublished', default=False)),
                ('is_edited', models.BooleanField(db_column='IsEdited', default=False)),
                ('is_duplicate', models.BooleanField(db_column='IsDuplicate', default=False)),
                ('is_between', models.BooleanField(db_column='IsBetween', default=False)),
                ('commitment', models.TextField(db_column='Commitment', default='[]')),
                ('customer_rate', models.TextField(db_column='CustomerRate', default='[]')),
                ('customer_discount', models.TextField(db_column='CustomerDiscount', default='[]')),
                ('dr_rate', models.TextField(db_column='DrRate', default='[]')),
                ('partner_rate', models.TextField(db_column='PartnerRate', default='[]')),
                ('partner_discount', models.TextField(db_column='PartnerDiscount', default='[]')),
                ('profitability', models.TextField(db_column='Profitability', default='[]')),
                ('pickup_count', models.IntegerField(db_column='PickupCount', default=0, null=True)),
                ('delivery_count', models.IntegerField(db_column='DeliveryCount', default=0, null=True)),
                ('dock_adjustment', models.DecimalField(db_column='DockAdjustment', decimal_places=6, max_digits=19, null=True)),
                ('margin', models.TextField(db_column='Margin', default='[]')),
                ('density', models.TextField(db_column='Density', default='[]')),
                ('pickup_cost', models.TextField(db_column='PickupCost', default='[]')),
                ('delivery_cost', models.TextField(db_column='DeliveryCost', default='[]')),
                ('accessorials_value', models.TextField(db_column='AccessorialsValue', default='[]')),
                ('accessorials_percentage', models.TextField(db_column='AccessorialsPercentage', default='[]')),
                ('do_not_meet_commitment', models.BooleanField(db_column='DoNotMeetCommitment', default=False)),
                ('pricing_rates', models.TextField(db_column='PricingRates', default='[]', null=True)),
                ('workflow_errors', models.TextField(db_column='WorkflowErrors', default=None, null=True)),
                ('is_excluded', models.BooleanField(db_column='IsExcluded', default=False, null=True)),
                ('is_flagged', models.BooleanField(db_column='IsFlagged', default=False, null=True)),
                ('deficit', models.TextField(db_column='Deficit', default=None, max_length=4000, null=True)),
                ('impact_percentage', models.TextField(db_column='ImpactPercentage', default=None, max_length=4000, null=True)),
                ('embedded_cost', models.TextField(db_column='EmbeddedCost', default=None, max_length=4000, null=True)),
                ('request_section_lane_source_id', models.BigIntegerField(db_column='RequestSectionLaneSourceID', null=True)),
                ('tmid', models.IntegerField(db_column='TMID', default=None, null=True)),
                ('destination_type_version_id', models.ForeignKey(db_column='DestinationTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointTypeHistory')),
                ('origin_type_version_id', models.ForeignKey(db_column='OriginTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointTypeHistory')),
                ('request_section_lane', models.ForeignKey(db_column='RequestSectionLaneID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestSectionLane')),
                ('request_section_version', models.ForeignKey(db_column='RequestSectionVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestSectionHistory')),
            ],
            options={
                'verbose_name_plural': 'RequestSectionLane_History',
                'db_table': 'RequestSectionLane_History',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionLaneImportQueue',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Id')),
                ('request_section_id', models.TextField(db_column='RequestSectionID', null=True)),
                ('section_name', models.TextField(db_column='SectionName', null=True)),
                ('request_section_lane_id', models.TextField(db_column='RequestSectionLaneID', null=True)),
                ('orig_group_type_id', models.TextField(db_column='OriginGroupTypeId', null=True, verbose_name=pac.rrf.models.RequestSectionLanePointType)),
                ('origin_group_type_name', models.TextField(db_column='OriginGroupTypeName', null=True)),
                ('origin_group_id', models.TextField(db_column='OriginGroupId', null=True)),
                ('origin_group_code', models.TextField(db_column='OriginGroupCode', null=True)),
                ('origin_point_type_id', models.TextField(db_column='OriginPointTypeId', null=True)),
                ('origin_point_type_name', models.TextField(db_column='OriginPointTypeName', null=True)),
                ('origin_point_id', models.TextField(db_column='OriginPointId', null=True)),
                ('origin_point_code', models.TextField(db_column='OriginPointCode', null=True)),
                ('destination_group_type_id', models.TextField(db_column='DestinationGroupTypeId', null=True)),
                ('destination_group_type_name', models.TextField(db_column='DestinationGroupTypeName', null=True)),
                ('destination_group_id', models.TextField(db_column='DestinationGroupId', null=True)),
                ('destination_group_code', models.TextField(db_column='DestinationGroupCode', null=True)),
                ('destination_point_type_id', models.TextField(db_column='DestinationPointTypeId', null=True)),
                ('destination_point_type_name', models.TextField(db_column='DestinationPointTypeName', null=True)),
                ('destination_point_id', models.TextField(db_column='DestinationPointId', null=True)),
                ('destination_point_code', models.TextField(db_column='DestinationPointCode', null=True)),
                ('is_between', models.TextField(db_column='IsBetween', null=True)),
                ('weight_break', models.TextField(db_column='WeightBreak', default='[]')),
                ('status_message', models.TextField(db_column='StatusMessage', null=True)),
                ('uni_status', models.TextField(db_column='UniStatus', default='UNPROCESSED')),
                ('uni_type', models.TextField(db_column='UniType', default='UNPROCESSED')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='CreatedOn')),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('initial_rec_order', models.IntegerField(db_column='InitialRecOrder', null=True)),
                ('created_by', models.ForeignKey(db_column='CreatedBy', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('file', models.ForeignKey(db_column='File', on_delete=django.db.models.deletion.CASCADE, related_name='ImportFile', to='rrf.ImportFile')),
            ],
            options={
                'verbose_name_plural': 'RequestSectionLaneImportQueue',
                'db_table': 'RequestSectionLaneImportQueue',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionLanePointType',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_lane_point_type_id', models.BigAutoField(db_column='RequestSectionLanePointTypeID', primary_key=True, serialize=False)),
                ('request_section_lane_point_type_name', models.CharField(db_column='RequestSectionLanePointTypeName', max_length=50)),
                ('is_density_pricing', models.BooleanField(db_column='IsDensityPricing', default=False)),
                ('location_hierarchy', models.IntegerField(db_column='LocationHierarchy')),
                ('is_group_type', models.BooleanField(db_column='IsGroupType', default=False)),
                ('is_point_type', models.BooleanField(db_column='IsPointType', default=False)),
                ('service_offering', models.ForeignKey(db_column='ServiceOfferingID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOffering')),
            ],
            options={
                'verbose_name_plural': 'RequestSectionLanePointType',
                'db_table': 'RequestSectionLanePointType',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionLanePointTypeHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_lane_point_type_version_id', models.BigAutoField(db_column='RequestSectionLanePointTypeVersionID', primary_key=True, serialize=False)),
                ('request_section_lane_point_type_name', models.CharField(db_column='RequestSectionLanePointTypeName', max_length=50)),
                ('is_density_pricing', models.BooleanField(db_column='IsDensityPricing', default=False)),
                ('location_hierarchy', models.IntegerField(db_column='LocationHierarchy')),
                ('is_group_type', models.BooleanField(db_column='IsGroupType', default=False)),
                ('is_point_type', models.BooleanField(db_column='IsPointType', default=False)),
                ('request_section_lane_point_type', models.ForeignKey(db_column='RequestSectionLanePointTypeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestSectionLanePointType')),
                ('service_offering_version', models.ForeignKey(db_column='ServiceOfferingVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOfferingHistory')),
            ],
            options={
                'verbose_name_plural': 'RequestSectionLanePointType_History',
                'db_table': 'RequestSectionLanePointType_History',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionLanePricingPoint',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_lane_pricing_point_id', models.BigAutoField(db_column='RequestSectionLanePricingPointID', primary_key=True, serialize=False)),
                ('origin_postal_code_name', models.CharField(db_column='OriginPostalCodeName', max_length=10)),
                ('destination_postal_code_name', models.CharField(db_column='DestinationPostalCodeName', max_length=10)),
                ('pricing_point_number', models.CharField(db_column='PricingPointNumber', max_length=32)),
                ('pricing_point_hash_code', models.BinaryField(db_column='PricingPointHashCode')),
                ('cost', models.TextField(db_column='Cost')),
                ('dr_rate', models.TextField(db_column='DrRate', default='[]')),
                ('fak_rate', models.TextField(db_column='FakRate', default='[]')),
                ('profitability', models.TextField(db_column='Profitability', default='[]')),
                ('splits_all', models.TextField(db_column='SplitsAll', default='[]')),
                ('splits_all_usage_percentage', models.DecimalField(db_column='SplitsAllUsagePercentage', decimal_places=6, max_digits=19, null=True)),
                ('pickup_count', models.IntegerField(db_column='PickupCount', default=0, null=True)),
                ('delivery_count', models.IntegerField(db_column='DeliveryCount', default=0, null=True)),
                ('dock_adjustment', models.DecimalField(db_column='DockAdjustment', decimal_places=6, max_digits=19, null=True)),
                ('margin', models.TextField(db_column='Margin', default='[]')),
                ('density', models.TextField(db_column='Density', default='[]')),
                ('pickup_cost', models.TextField(db_column='PickupCost', default='[]')),
                ('delivery_cost', models.TextField(db_column='DeliveryCost', default='[]')),
                ('accessorials_value', models.TextField(db_column='AccessorialsValue', default='[]')),
                ('accessorials_percentage', models.TextField(db_column='AccessorialsPercentage', default='[]')),
                ('cost_override_pickup_count', models.IntegerField(db_column='CostOverridePickupCount', default=0, null=True)),
                ('cost_override_delivery_count', models.IntegerField(db_column='CostOverrideDeliveryCount', default=0, null=True)),
                ('cost_override_dock_adjustment', models.DecimalField(db_column='CostOverrideDockAdjustment', decimal_places=6, max_digits=19, null=True)),
                ('cost_override_margin', models.TextField(db_column='CostOverrideMargin', default='[]', null=True)),
                ('cost_override_density', models.TextField(db_column='CostOverrideDensity', default='[]', null=True)),
                ('cost_override_pickup_cost', models.TextField(blank=True, db_column='CostOverridePickupCost', default='[]', null=True)),
                ('cost_override_delivery_cost', models.TextField(blank=True, db_column='CostOverrideDeliveryCost', default='[]', null=True)),
                ('cost_override_accessorials_value', models.TextField(blank=True, db_column='CostOverrideAccessorialsValue', default='[]', null=True)),
                ('cost_override_accessorials_percentage', models.TextField(blank=True, db_column='CostOverrideAccessorialsPercentage', default='[]', null=True)),
                ('pricing_rates', models.TextField(db_column='PricingRates', default='[]', null=True)),
                ('workflow_errors', models.TextField(db_column='WorkflowErrors', default=None, null=True)),
                ('is_flagged', models.BooleanField(db_column='IsFlagged', default=False, null=True)),
                ('request_section_lane_pricing_point_source_id', models.BigIntegerField(db_column='RequestSectionLanePricingPointSourceID', null=True)),
                ('destination_postal_code', models.ForeignKey(db_column='DestinationPostalCodeID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.PostalCode')),
                ('origin_postal_code', models.ForeignKey(db_column='OriginPostalCodeID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.PostalCode')),
                ('request_section_lane', models.ForeignKey(db_column='RequestSectionLaneID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestSectionLane')),
            ],
            options={
                'verbose_name_plural': 'RequestSectionLanePricingPoint',
                'db_table': 'RequestSectionLanePricingPoint',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionLanePricingPointHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_section_lane_pricing_point_version_id', models.BigAutoField(db_column='RequestSectionLanePricingPointVersionID', primary_key=True, serialize=False)),
                ('origin_postal_code_name', models.CharField(db_column='OriginPostalCodeName', max_length=10)),
                ('destination_postal_code_name', models.CharField(db_column='DestinationPostalCodeName', max_length=10)),
                ('pricing_point_number', models.CharField(db_column='PricingPointNumber', max_length=32)),
                ('pricing_point_hash_code', models.BinaryField(db_column='PricingPointHashCode')),
                ('cost', models.TextField(db_column='Cost')),
                ('dr_rate', models.TextField(db_column='DrRate', default='[]')),
                ('fak_rate', models.TextField(db_column='FakRate', default='[]')),
                ('profitability', models.TextField(db_column='Profitability', default='[]')),
                ('splits_all', models.TextField(db_column='SplitsAll', default='[]')),
                ('splits_all_usage_percentage', models.DecimalField(db_column='SplitsAllUsagePercentage', decimal_places=6, max_digits=19, null=True)),
                ('pickup_count', models.IntegerField(db_column='PickupCount', default=0, null=True)),
                ('delivery_count', models.IntegerField(db_column='DeliveryCount', default=0, null=True)),
                ('dock_adjustment', models.DecimalField(db_column='DockAdjustment', decimal_places=6, max_digits=19, null=True)),
                ('margin', models.TextField(db_column='Margin', default='[]')),
                ('density', models.TextField(db_column='Density', default='[]')),
                ('pickup_cost', models.TextField(db_column='PickupCost', default='[]')),
                ('delivery_cost', models.TextField(db_column='DeliveryCost', default='[]')),
                ('accessorials_value', models.TextField(db_column='AccessorialsValue', default='[]')),
                ('accessorials_percentage', models.TextField(db_column='AccessorialsPercentage', default='[]')),
                ('cost_override_pickup_count', models.IntegerField(db_column='CostOverridePickupCount', default=0, null=True)),
                ('cost_override_delivery_count', models.IntegerField(db_column='CostOverrideDeliveryCount', default=0, null=True)),
                ('cost_override_dock_adjustment', models.DecimalField(db_column='CostOverrideDockAdjustment', decimal_places=6, max_digits=19, null=True)),
                ('cost_override_margin', models.TextField(db_column='CostOverrideMargin', default='[]', null=True)),
                ('cost_override_density', models.TextField(db_column='CostOverrideDensity', default='[]', null=True)),
                ('cost_override_pickup_cost', models.TextField(blank=True, db_column='CostOverridePickupCost', default='[]', null=True)),
                ('cost_override_delivery_cost', models.TextField(blank=True, db_column='CostOverrideDeliveryCost', default='[]', null=True)),
                ('cost_override_accessorials_value', models.TextField(blank=True, db_column='CostOverrideAccessorialsValue', default='[]', null=True)),
                ('cost_override_accessorials_percentage', models.TextField(blank=True, db_column='CostOverrideAccessorialsPercentage', default='[]', null=True)),
                ('pricing_rates', models.TextField(db_column='PricingRates', default='[]', null=True)),
                ('workflow_errors', models.TextField(db_column='WorkflowErrors', default=None, null=True)),
                ('is_flagged', models.BooleanField(db_column='IsFlagged', default=False, null=True)),
                ('request_section_lane_pricing_point_source_id', models.BigIntegerField(db_column='RequestSectionLanePricingPointSourceID', null=True)),
                ('destination_postal_code_version', models.ForeignKey(db_column='DestinationPostalCodeVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.PostalCodeHistory')),
                ('origin_postal_code_version', models.ForeignKey(db_column='OriginPostalCodeVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.PostalCodeHistory')),
                ('request_section_lane_pricing_point', models.ForeignKey(db_column='RequestSectionLanePricingPointID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestSectionLanePricingPoint')),
                ('request_section_lane_version', models.ForeignKey(db_column='RequestSectionLaneVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestSectionLaneHistory')),
            ],
            options={
                'verbose_name_plural': 'RequestSectionLanePricingPoint_History',
                'db_table': 'RequestSectionLanePricingPoint_History',
            },
        ),
        migrations.CreateModel(
            name='RequestSectionLanePricingPointImportQueue',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Id')),
                ('request_section_id', models.TextField(db_column='RequestSectionID', null=True)),
                ('section_name', models.TextField(db_column='SectionName', null=True)),
                ('request_section_lane_id', models.TextField(db_column='RequestSectionLaneID', null=True)),
                ('origin_point_code', models.TextField(db_column='OriginPointCode', null=True)),
                ('destination_point_code', models.TextField(db_column='DestinationPointCode', null=True)),
                ('request_section_lane_pricing_point_id', models.TextField(db_column='RequestSectionLanePricingPointID', null=True)),
                ('origin_post_code_id', models.TextField(db_column='OriginPostCodeID', null=True)),
                ('origin_postal_code_name', models.TextField(db_column='OriginPostalCodeName', null=True)),
                ('destination_post_code_id', models.TextField(db_column='DestinationPostCodeID', null=True)),
                ('destination_postal_code_name', models.TextField(db_column='DestinationPostalCodeName', null=True)),
                ('weight_break', models.TextField(db_column='WeightBreak', default='[]')),
                ('status_message', models.TextField(db_column='StatusMessage', null=True)),
                ('uni_status', models.TextField(db_column='UniStatus', default='UNPROCESSED')),
                ('uni_type', models.TextField(db_column='UniType', default='UNDEFINED')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='CreatedOn')),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('origin_postal_code_id', models.IntegerField(db_column='OriginPostalCodeId', null=True)),
                ('destination_postal_code_id', models.IntegerField(db_column='DestinationPostalCodeId', null=True)),
                ('initial_rec_order', models.IntegerField(db_column='InitialRecOrder', null=True)),
                ('created_by', models.ForeignKey(db_column='CreatedBy', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('file', models.ForeignKey(db_column='File', on_delete=django.db.models.deletion.CASCADE, related_name='PricingPointsImportFile', to='rrf.ImportFile')),
            ],
            options={
                'verbose_name_plural': 'RequestSectionLanePricingPointImportQueue',
                'db_table': 'RequestSectionLanePricingPointImportQueue',
            },
        ),
        migrations.CreateModel(
            name='RequestStatusType',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_status_type_id', models.BigAutoField(db_column='RequestStatusTypeID', primary_key=True, serialize=False)),
                ('request_status_type_name', models.CharField(db_column='RequestStatusTypeName', max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'RequestStatusType',
                'db_table': 'RequestStatusType',
            },
        ),
        migrations.CreateModel(
            name='RequestStatusTypeHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_status_type_version_id', models.BigAutoField(db_column='RequestStatusTypeVersionID', primary_key=True, serialize=False)),
                ('request_status_type_name', models.CharField(db_column='RequestStatusTypeName', max_length=50)),
                ('request_status_type', models.ForeignKey(db_column='RequestStatusTypeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestStatusType')),
            ],
            options={
                'verbose_name_plural': 'RequestStatusType_History',
                'db_table': 'RequestStatusType_History',
            },
        ),
        migrations.CreateModel(
            name='RequestType',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_type_id', models.BigAutoField(db_column='RequestTypeID', primary_key=True, serialize=False)),
                ('request_type_name', models.CharField(db_column='RequestTypeName', max_length=50, unique=True)),
                ('apply_to_customer_under_review', models.BooleanField(db_column='ApplyToCustomerUnderReview', default=True)),
                ('apply_to_revision', models.BooleanField(db_column='ApplyToRevision', default=True)),
                ('allow_sales_commitment', models.BooleanField(db_column='AllowSalesCommitment', default=True)),
            ],
            options={
                'verbose_name_plural': 'RequestType',
                'db_table': 'RequestType',
            },
        ),
        migrations.CreateModel(
            name='RequestTypeHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('request_type_version_id', models.BigAutoField(db_column='RequestTypeVersionID', primary_key=True, serialize=False)),
                ('request_type_name', models.CharField(db_column='RequestTypeName', max_length=50)),
                ('apply_to_customer_under_review', models.BooleanField(db_column='ApplyToCustomerUnderReview', default=True)),
                ('apply_to_revision', models.BooleanField(db_column='ApplyToRevision', default=True)),
                ('allow_sales_commitment', models.BooleanField(db_column='AllowSalesCommitment', default=True)),
                ('request_type', models.ForeignKey(db_column='RequestTypeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestType')),
            ],
            options={
                'verbose_name_plural': 'RequestType_History',
                'db_table': 'RequestType_History',
            },
        ),
        migrations.CreateModel(
            name='RevenueBreakdown',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('revenue_breakdown_id', models.BigAutoField(db_column='RevenueBreakdownID', primary_key=True, serialize=False)),
                ('commodity_code', models.TextField(db_column='CommodityCode', default=None, max_length=50, null=True)),
                ('billed_amount', models.DecimalField(db_column='BilledAmount', decimal_places=6, default=None, max_digits=19, null=True)),
            ],
            options={
                'verbose_name_plural': 'RevenueBreakdown',
                'db_table': 'RevenueBreakdown',
            },
        ),
        migrations.CreateModel(
            name='RevenueBreakdownHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('revenue_breakdown_version_id', models.BigAutoField(db_column='RevenueBreakdownVersionID', primary_key=True, serialize=False)),
                ('commodity_code', models.TextField(db_column='CommodityCode', default=None, max_length=50, null=True)),
                ('billed_amount', models.DecimalField(db_column='BilledAmount', decimal_places=6, default=None, max_digits=19, null=True)),
                ('revenue_breakdown_id', models.ForeignKey(db_column='RevenueBreakdownID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RevenueBreakdown')),
            ],
            options={
                'verbose_name_plural': 'RevenueBreakdown_History',
                'db_table': 'RevenueBreakdown_History',
            },
        ),
        migrations.CreateModel(
            name='RevenueHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('revenue_history_id', models.BigAutoField(db_column='RevenueHistoryID', primary_key=True, serialize=False)),
                ('period', models.DecimalField(db_column='Period', decimal_places=6, default=None, max_digits=19, null=True)),
                ('num_pickups', models.DecimalField(db_column='NumPickups', decimal_places=6, default=None, max_digits=19, null=True)),
                ('num_freight_bills', models.DecimalField(db_column='NumFreightBills', decimal_places=6, default=None, max_digits=19, null=True)),
                ('billed_weight', models.DecimalField(db_column='BilledWeight', decimal_places=6, default=None, max_digits=19, null=True)),
                ('average_weight', models.DecimalField(db_column='AverageWeight', decimal_places=6, default=None, max_digits=19, null=True)),
                ('average_density', models.DecimalField(db_column='AverageDensity', decimal_places=6, default=None, max_digits=19, null=True)),
                ('monthly_revenue', models.DecimalField(db_column='MonthlyRevenue', decimal_places=6, default=None, max_digits=19, null=True)),
                ('fixed_costs', models.DecimalField(db_column='FixedCosts', decimal_places=6, default=None, max_digits=19, null=True)),
                ('variable_costs', models.DecimalField(db_column='VariableCosts', decimal_places=6, default=None, max_digits=19, null=True)),
                ('total_costs', models.DecimalField(db_column='TotalCosts', decimal_places=6, default=None, max_digits=19, null=True)),
                ('profit', models.DecimalField(db_column='Profit', decimal_places=6, default=None, max_digits=19, null=True)),
                ('margin', models.DecimalField(db_column='Margin', decimal_places=6, default=None, max_digits=19, null=True)),
            ],
            options={
                'verbose_name_plural': 'RevenueHistory',
                'db_table': 'RevenueHistory',
            },
        ),
        migrations.CreateModel(
            name='RevenueHistoryHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('revenue_history_version_id', models.BigAutoField(db_column='RevenueHistoryVersionID', primary_key=True, serialize=False)),
                ('period', models.DecimalField(db_column='Period', decimal_places=6, default=None, max_digits=19, null=True)),
                ('num_pickups', models.DecimalField(db_column='NumPickups', decimal_places=6, default=None, max_digits=19, null=True)),
                ('num_freight_bills', models.DecimalField(db_column='NumFreightBills', decimal_places=6, default=None, max_digits=19, null=True)),
                ('billed_weight', models.DecimalField(db_column='BilledWeight', decimal_places=6, default=None, max_digits=19, null=True)),
                ('average_weight', models.DecimalField(db_column='AverageWeight', decimal_places=6, default=None, max_digits=19, null=True)),
                ('average_density', models.DecimalField(db_column='AverageDensity', decimal_places=6, default=None, max_digits=19, null=True)),
                ('monthly_revenue', models.DecimalField(db_column='MonthlyRevenue', decimal_places=6, default=None, max_digits=19, null=True)),
                ('fixed_costs', models.DecimalField(db_column='FixedCosts', decimal_places=6, default=None, max_digits=19, null=True)),
                ('variable_costs', models.DecimalField(db_column='VariableCosts', decimal_places=6, default=None, max_digits=19, null=True)),
                ('total_costs', models.DecimalField(db_column='TotalCosts', decimal_places=6, default=None, max_digits=19, null=True)),
                ('profit', models.DecimalField(db_column='Profit', decimal_places=6, default=None, max_digits=19, null=True)),
                ('margin', models.DecimalField(db_column='Margin', decimal_places=6, default=None, max_digits=19, null=True)),
                ('revenue_history_id', models.ForeignKey(db_column='RevenueHistoryID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RevenueHistory')),
            ],
            options={
                'verbose_name_plural': 'RevenueHistory_History',
                'db_table': 'RevenueHistory_History',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('review_id', models.BigAutoField(db_column='ReviewID', primary_key=True, serialize=False)),
                ('review_type', models.TextField(db_column='ReviewType', default=None, max_length=50, null=True)),
                ('average_shipment_size', models.DecimalField(db_column='AverageShipmentSize', decimal_places=3, default=None, max_digits=10, null=True)),
                ('average_shipment_density', models.DecimalField(db_column='AverageShipmentDensity', decimal_places=3, default=None, max_digits=10, null=True)),
                ('monthly_shipment_value', models.DecimalField(db_column='MonthlyShipmentValue', decimal_places=3, default=None, max_digits=10, null=True)),
                ('review_eff_date', models.DateTimeField(db_column='ReviewEffDate', default=None, null=True)),
                ('review_exp_date', models.DateTimeField(db_column='ReviewExpDate', default=None, null=True)),
                ('pricing_rate_change_dol', models.TextField(db_column='PricingRateChangeDol', default=None, max_length=50, null=True)),
                ('pricing_rate_change_per', models.TextField(db_column='PricingRateChangePer', default=None, max_length=50, null=True)),
                ('sales_rate_change_dol', models.TextField(db_column='SalesRateChangeDol', default=None, max_length=50, null=True)),
                ('sales_rate_change_per', models.TextField(db_column='SalesRateChangePer', default=None, max_length=50, null=True)),
                ('request_id', models.OneToOneField(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.Request')),
            ],
            options={
                'verbose_name_plural': 'Review',
                'db_table': 'Review',
            },
        ),
        migrations.CreateModel(
            name='ReviewHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('review_type', models.TextField(db_column='ReviewType', default=None, max_length=50, null=True)),
                ('review_version_id', models.BigAutoField(db_column='ReviewVersionID', primary_key=True, serialize=False)),
                ('average_shipment_size', models.DecimalField(db_column='AverageShipmentSize', decimal_places=3, default=None, max_digits=10, null=True)),
                ('average_shipment_density', models.DecimalField(db_column='AverageShipmentDensity', decimal_places=3, default=None, max_digits=10, null=True)),
                ('monthly_shipment_value', models.DecimalField(db_column='MonthlyShipmentValue', decimal_places=3, default=None, max_digits=10, null=True)),
                ('review_eff_date', models.DateTimeField(db_column='ReviewEffDate', default=None, null=True)),
                ('review_exp_date', models.DateTimeField(db_column='ReviewExpDate', default=None, null=True)),
                ('pricing_rate_change_dol', models.TextField(db_column='PricingRateChangeDol', default=None, max_length=50, null=True)),
                ('pricing_rate_change_per', models.TextField(db_column='PricingRateChangePer', default=None, max_length=50, null=True)),
                ('sales_rate_change_dol', models.TextField(db_column='SalesRateChangeDol', default=None, max_length=50, null=True)),
                ('sales_rate_change_per', models.TextField(db_column='SalesRateChangePer', default=None, max_length=50, null=True)),
                ('request_version_id', models.ForeignKey(db_column='RequestVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RequestHistory')),
                ('review_id', models.ForeignKey(db_column='ReviewID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.Review')),
            ],
            options={
                'verbose_name_plural': 'Review_History',
                'db_table': 'Review_History',
            },
        ),
        migrations.CreateModel(
            name='SalesIncentive',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('sales_incentive_id', models.BigAutoField(db_column='SalesIncentiveID', primary_key=True, serialize=False)),
                ('sales_incentive_type', models.TextField(db_column='SalesIncentiveType', default=None, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'SalesIncentive',
                'db_table': 'SalesIncentive',
            },
        ),
        migrations.CreateModel(
            name='SalesIncentiveHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('sales_incentive_type', models.TextField(db_column='SalesIncentiveType', default=None, max_length=50, null=True)),
                ('sales_incentive_version_id', models.BigAutoField(db_column='SalesIncentiveVersionID', primary_key=True, serialize=False)),
                ('sales_incentive_id', models.ForeignKey(db_column='SalesIncentiveID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.SalesIncentive')),
            ],
            options={
                'verbose_name_plural': 'SalesIncentive_History',
                'db_table': 'SalesIncentive_History',
            },
        ),
        migrations.CreateModel(
            name='ServiceClassMap',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_class_map_id', models.BigAutoField(db_column='ServiceClassMapID', primary_key=True, serialize=False)),
                ('tmid', models.IntegerField(db_column='TMID', default=None)),
                ('acc_header_id', models.ForeignKey(db_column='AccHeaderID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialHeader')),
                ('sub_service_level', models.ForeignKey(db_column='SubServiceLevelID', default=8, on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevel')),
            ],
            options={
                'verbose_name_plural': 'ServiceClassMap',
                'db_table': 'ServiceClassMap',
            },
        ),
        migrations.CreateModel(
            name='ServiceClassMapHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_class_map_version_id', models.BigAutoField(db_column='ServiceClassMapVersionID', primary_key=True, serialize=False)),
                ('tmid', models.IntegerField(db_column='TMID', default=None)),
                ('acc_header_version_id', models.ForeignKey(db_column='AccHeaderVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialHeaderHistory')),
                ('service_class_map', models.ForeignKey(db_column='ServiceClassMapID', on_delete=django.db.models.deletion.CASCADE, to='rrf.ServiceClassMap')),
                ('sub_service_level_version', models.ForeignKey(db_column='SubServiceLevelVersionID', default=8, on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevelHistory')),
            ],
            options={
                'verbose_name_plural': 'ServiceClassMap_History',
                'db_table': 'ServiceClassMap_History',
            },
        ),
        migrations.CreateModel(
            name='ServiceMatrix',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_matrix_id', models.BigAutoField(db_column='ServiceMatrixID', primary_key=True, serialize=False)),
                ('point_id', models.IntegerField(db_column='PointID', null=True)),
                ('point_type_id', models.ForeignKey(db_column='PointTypeID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.PointType')),
            ],
            options={
                'verbose_name_plural': 'ServiceMatrix',
                'db_table': 'ServiceMatrix',
            },
        ),
        migrations.CreateModel(
            name='ServiceMatrixHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=False)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=False)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=False)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=False)),
                ('comments', models.TextField(db_column='Comments', default=False)),
                ('service_matrix_version_id', models.BigAutoField(db_column='ServiceMatrixVersionID', primary_key=True, serialize=False)),
                ('point_version_id', models.IntegerField(db_column='PointVersionID', null=True)),
                ('point_type_version_id', models.ForeignKey(db_column='PointTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.PointTypeHistory')),
                ('service_matrix', models.ForeignKey(db_column='ServiceMatrixID', on_delete=django.db.models.deletion.CASCADE, to='rrf.ServiceMatrix')),
            ],
            options={
                'verbose_name_plural': 'ServiceMatrix_History',
                'db_table': 'ServiceMatrix_History',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_type_id', models.BigAutoField(db_column='ServiceTypeID', primary_key=True, serialize=False)),
                ('service_class', models.CharField(db_column='ServiceClass', max_length=10)),
                ('service_type_name', models.CharField(db_column='ServiceTypeName', max_length=10)),
                ('service_type_description', models.TextField(db_column='ServiceTypeDescription', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'ServiceType',
                'db_table': 'ServiceType',
            },
        ),
        migrations.CreateModel(
            name='ServiceTypeHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_type_version_id', models.BigAutoField(db_column='ServiceTypeVersionID', primary_key=True, serialize=False)),
                ('service_class', models.CharField(db_column='ServiceClass', max_length=10)),
                ('service_type_name', models.CharField(db_column='ServiceTypeName', max_length=10)),
                ('service_type_description', models.TextField(db_column='ServiceTypeDescription', max_length=50)),
                ('service_type', models.ForeignKey(db_column='ServiceTypeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.ServiceType')),
            ],
            options={
                'verbose_name_plural': 'ServiceType_History',
                'db_table': 'ServiceType_History',
            },
        ),
        migrations.CreateModel(
            name='SubPostalCode',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('sub_postal_code_id', models.BigAutoField(db_column='SubPostalCodeID', max_length=8, primary_key=True, serialize=False)),
                ('sub_postal_code_name', models.TextField(db_column='SubPostalCodeName', max_length=40, null=True)),
                ('terminal_id', models.ForeignKey(db_column='TerminalID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.Terminal')),
            ],
            options={
                'verbose_name_plural': 'SubPostalCode',
                'db_table': 'SubPostalCode',
            },
        ),
        migrations.CreateModel(
            name='SubPostalCodeHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=False)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=False)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=False)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=False)),
                ('comments', models.TextField(db_column='Comments', default=False)),
                ('sub_postal_code_version_id', models.BigAutoField(db_column='SubPostalCodeVersionID', max_length=8, primary_key=True, serialize=False)),
                ('sub_postal_code_name', models.TextField(db_column='SubPostalCodeName', max_length=40, null=True)),
                ('sub_postal_code_id', models.ForeignKey(db_column='SubPostalCodeID', on_delete=django.db.models.deletion.CASCADE, to='rrf.SubPostalCode')),
                ('terminal_version_id', models.ForeignKey(db_column='TerminalVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.TerminalHistory')),
            ],
            options={
                'verbose_name_plural': 'SubPostalCode_History',
                'db_table': 'SubPostalCode_History',
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('tariff_id', models.BigAutoField(db_column='TariffID', primary_key=True, serialize=False)),
                ('revision_number', models.IntegerField(db_column='RevisionNumber', default=1)),
                ('tariff_number', models.TextField(db_column='TariffNumber', default='_', max_length=30)),
                ('published_on', models.DateTimeField(auto_now_add=True, db_column='PublishedOn', null=True)),
                ('expires_on', models.DateTimeField(auto_now_add=True, db_column='ExpiresOn', null=True)),
                ('document_url', models.TextField(db_column='DocumentUrl', null=True)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('request', models.ForeignKey(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Request')),
            ],
            options={
                'verbose_name_plural': 'Tariff',
                'db_table': 'Tariff',
            },
        ),
        migrations.CreateModel(
            name='TariffHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('tariff_version_id', models.BigAutoField(db_column='TariffVersionID', primary_key=True, serialize=False)),
                ('revision_number', models.IntegerField(db_column='RevisionNumber', default=1)),
                ('tariff_number', models.TextField(db_column='TariffNumber', default='_', max_length=30)),
                ('published_on', models.DateTimeField(db_column='PublishedOn', null=True)),
                ('expires_on', models.DateTimeField(db_column='ExpiresOn', null=True)),
                ('document_url', models.TextField(db_column='DocumentUrl', null=True)),
                ('is_valid_data', models.BooleanField(db_column='IsValidData', default=False)),
                ('request_version', models.ForeignKey(db_column='RequestVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestHistory')),
                ('tariff', models.ForeignKey(db_column='TariffID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Tariff')),
            ],
            options={
                'verbose_name_plural': 'Tariff_History',
                'db_table': 'Tariff_History',
            },
        ),
        migrations.CreateModel(
            name='Terms',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('acc_term_id', models.BigAutoField(db_column='AccTermID', primary_key=True, serialize=False)),
                ('custom_terms', models.TextField(db_column='CustomTerms', default=None, max_length=4000, null=True)),
                ('status', models.BooleanField(db_column='Status', default=False)),
                ('request_id', models.ForeignKey(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Request')),
            ],
            options={
                'verbose_name_plural': 'Terms',
                'db_table': 'Terms',
            },
        ),
        migrations.CreateModel(
            name='TermsHistory',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('version_num', models.IntegerField(db_column='VersionNum', default=None)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=False)),
                ('updated_on', models.DateTimeField(db_column='UpdatedOn', default=None)),
                ('updated_by', models.TextField(db_column='UpdatedBy', default=None)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None)),
                ('comments', models.TextField(db_column='Comments', default=None)),
                ('acc_term_version_id', models.BigAutoField(db_column='AccTermVersionID', primary_key=True, serialize=False)),
                ('custom_terms', models.TextField(db_column='CustomTerms', default=None, max_length=4000, null=True)),
                ('status', models.BooleanField(db_column='Status', default=False)),
                ('acc_term_id', models.ForeignKey(db_column='AccTermID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Terms')),
                ('request_version_id', models.ForeignKey(db_column='RequestVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RequestHistory')),
            ],
            options={
                'verbose_name_plural': 'Terms_History',
                'db_table': 'Terms_History',
            },
        ),
        migrations.CreateModel(
            name='UserServiceLevel',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('user_service_level_id', models.BigAutoField(db_column='UserServiceLevelID', primary_key=True, serialize=False)),
                ('service_level', models.ForeignKey(db_column='ServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevel')),
                ('user', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'UserServiceLevel',
                'db_table': 'UserServiceLevel',
            },
        ),
        migrations.CreateModel(
            name='UserServiceLevelHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('user_service_level_version_id', models.BigAutoField(db_column='UserServiceLevelVersionID', primary_key=True, serialize=False)),
                ('service_level_version', models.ForeignKey(db_column='ServiceLevelVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevelHistory')),
                ('user_service_level', models.ForeignKey(db_column='UserServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='rrf.UserServiceLevel')),
                ('user_version', models.ForeignKey(db_column='UserVersionID', on_delete=django.db.models.deletion.CASCADE, to='core.UserHistory')),
            ],
            options={
                'verbose_name_plural': 'UserServiceLevel_History',
                'db_table': 'UserServiceLevel_History',
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('zone_id', models.BigAutoField(db_column='ZoneID', primary_key=True, serialize=False)),
                ('zone_name', models.CharField(db_column='ZoneName', max_length=50)),
                ('zone_code', models.CharField(db_column='ZoneCode', default='Test', max_length=10, null=True, unique=True)),
                ('description', models.TextField(db_column='Description', max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'Zone',
                'db_table': 'Zone',
            },
        ),
        migrations.CreateModel(
            name='ZoneHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('zone_version_id', models.BigAutoField(db_column='ZoneVersionID', primary_key=True, serialize=False)),
                ('zone_name', models.CharField(db_column='ZoneName', max_length=50)),
                ('zone_code', models.CharField(db_column='ZoneCode', default='Test', max_length=10, null=True, unique=True)),
                ('description', models.TextField(db_column='Description', max_length=50, null=True)),
                ('zone', models.ForeignKey(db_column='ZoneID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Zone')),
            ],
            options={
                'verbose_name_plural': 'Zone_History',
                'db_table': 'Zone_History',
            },
        ),
        migrations.AddField(
            model_name='servicematrixhistory',
            name='service_type_version_id',
            field=models.ForeignKey(db_column='ServiceTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.ServiceTypeHistory'),
        ),
        migrations.AddField(
            model_name='servicematrixhistory',
            name='sub_service_level_version_id',
            field=models.ForeignKey(db_column='SubServiceLevelVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevelHistory'),
        ),
        migrations.AddField(
            model_name='servicematrix',
            name='service_type_id',
            field=models.ForeignKey(db_column='ServiceTypeID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.ServiceType'),
        ),
        migrations.AddField(
            model_name='servicematrix',
            name='sub_service_level_id',
            field=models.ForeignKey(db_column='SubServiceLevelID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevel'),
        ),
        migrations.AddField(
            model_name='reviewhistory',
            name='sales_incentive_version_id',
            field=models.ForeignKey(db_column='SalesIncentiveVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.SalesIncentiveHistory'),
        ),
        migrations.AddField(
            model_name='review',
            name='sales_incentive_id',
            field=models.ForeignKey(db_column='SalesIncentiveID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.SalesIncentive'),
        ),
        migrations.AddField(
            model_name='revenuehistoryhistory',
            name='review_version_id',
            field=models.ForeignKey(db_column='ReviewVersionID', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.ReviewHistory'),
        ),
        migrations.AddField(
            model_name='revenuehistory',
            name='review_id',
            field=models.ForeignKey(db_column='ReviewID', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.Review'),
        ),
        migrations.AddField(
            model_name='revenuebreakdownhistory',
            name='review_version_id',
            field=models.ForeignKey(db_column='ReviewVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.ReviewHistory'),
        ),
        migrations.AddField(
            model_name='revenuebreakdown',
            name='review_id',
            field=models.ForeignKey(db_column='ReviewID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.Review'),
        ),
        migrations.AddField(
            model_name='requestinformationhistory',
            name='request_type_version',
            field=models.ForeignKey(db_column='RequestTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestTypeHistory'),
        ),
        migrations.AddField(
            model_name='requestinformationhistory',
            name='request_version_id',
            field=models.ForeignKey(db_column='RequestVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestHistory'),
        ),
        migrations.AddField(
            model_name='requestinformation',
            name='request_type',
            field=models.ForeignKey(db_column='RequestTypeID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestType'),
        ),
        migrations.AddField(
            model_name='requesthistory',
            name='request_status_type_version',
            field=models.ForeignKey(blank=True, db_column='RequestStatusTypeVersionID', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RequestStatusTypeHistory'),
        ),
        migrations.AddField(
            model_name='requesthistory',
            name='sales_representative_version',
            field=models.ForeignKey(db_column='SalesRepresentativeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.UserHistory'),
        ),
        migrations.AddField(
            model_name='requesthistory',
            name='submitted_by_version',
            field=models.ForeignKey(blank=True, db_column='SubmittedByVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.UserHistory'),
        ),
        migrations.AddField(
            model_name='requesteditorrighthistory',
            name='request_version',
            field=models.ForeignKey(db_column='RequestVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.RequestHistory'),
        ),
        migrations.AddField(
            model_name='requesteditorrighthistory',
            name='user_version',
            field=models.ForeignKey(db_column='UserVersionID', on_delete=django.db.models.deletion.CASCADE, to='core.UserHistory'),
        ),
        migrations.AddField(
            model_name='request',
            name='request_status_type',
            field=models.ForeignKey(db_column='RequestStatusTypeID', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RequestStatusType'),
        ),
        migrations.AddField(
            model_name='request',
            name='sales_representative',
            field=models.ForeignKey(db_column='SalesRepresentativeID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='request',
            name='submitted_by',
            field=models.ForeignKey(blank=True, db_column='SubmittedBy', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='profitlosssummaryhistory',
            name='review_version_id',
            field=models.ForeignKey(db_column='ReviewVersionID', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.ReviewHistory'),
        ),
        migrations.AddField(
            model_name='profitlosssummary',
            name='review_id',
            field=models.ForeignKey(db_column='ReviewID', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.Review'),
        ),
        migrations.AddField(
            model_name='interlinercostshistory',
            name='destination_type_version_id',
            field=models.ForeignKey(db_column='DestinationTypeVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointTypeHistory'),
        ),
        migrations.AddField(
            model_name='interlinercostshistory',
            name='equipment_type_version_id',
            field=models.ForeignKey(db_column='EquipmentTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.EquipmentTypeHistory'),
        ),
        migrations.AddField(
            model_name='interlinercostshistory',
            name='origin_type_version_id',
            field=models.ForeignKey(db_column='OriginTypeVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointTypeHistory'),
        ),
        migrations.AddField(
            model_name='interlinercostshistory',
            name='rate_sheet_id',
            field=models.ForeignKey(db_column='RateSheetID', on_delete=django.db.models.deletion.CASCADE, to='rrf.InterlinerCosts'),
        ),
        migrations.AddField(
            model_name='interlinercostshistory',
            name='sub_service_level_version_id',
            field=models.ForeignKey(db_column='SubServiceLevelVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.SubServiceLevelHistory'),
        ),
        migrations.AddField(
            model_name='interlinercostshistory',
            name='unit_version_id',
            field=models.ForeignKey(db_column='UnitVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.UnitHistory'),
        ),
        migrations.AddField(
            model_name='interlinercostshistory',
            name='weight_break_header_version_id',
            field=models.ForeignKey(db_column='WeightBreakHeaderVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.WeightBreakHeaderHistory'),
        ),
        migrations.AddField(
            model_name='interlinercosts',
            name='destination_type_id',
            field=models.ForeignKey(db_column='DestinationTypeID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointType'),
        ),
        migrations.AddField(
            model_name='interlinercosts',
            name='equipment_type_id',
            field=models.ForeignKey(db_column='EquipmentTypeID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.EquipmentType'),
        ),
        migrations.AddField(
            model_name='interlinercosts',
            name='origin_type_id',
            field=models.ForeignKey(db_column='OriginTypeID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointType'),
        ),
        migrations.AddField(
            model_name='interlinercosts',
            name='sub_service_level_id',
            field=models.ForeignKey(db_column='SubServiceLevelID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.SubServiceLevel'),
        ),
        migrations.AddField(
            model_name='interlinercosts',
            name='unit_id',
            field=models.ForeignKey(db_column='UnitID', on_delete=django.db.models.deletion.CASCADE, to='pac.Unit'),
        ),
        migrations.AddField(
            model_name='interlinercosts',
            name='weight_breaker_header_id',
            field=models.ForeignKey(db_column='WeightBreakHeaderID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.WeightBreakHeader'),
        ),
        migrations.AlterUniqueTogether(
            name='equipmenttype',
            unique_together={('equipment_type_name', 'equipment_type_code')},
        ),
        migrations.AddField(
            model_name='commodityhistory',
            name='freight_class_version_id',
            field=models.ForeignKey(db_column='FreightClassVersionID', on_delete=django.db.models.deletion.CASCADE, to='rrf.FreightClassHistory'),
        ),
        migrations.AddField(
            model_name='commodity',
            name='freight_class',
            field=models.ForeignKey(db_column='FreightClassID', on_delete=django.db.models.deletion.CASCADE, to='rrf.FreightClass'),
        ),
        migrations.AddField(
            model_name='comment',
            name='request_id',
            field=models.ForeignKey(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Request'),
        ),
        migrations.AddField(
            model_name='comment',
            name='request_status_type_id',
            field=models.ForeignKey(db_column='RequestStatusTypeID', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RequestStatusType'),
        ),
        migrations.AddField(
            model_name='accessorialstorageoverridehistory',
            name='currency_version_id',
            field=models.ForeignKey(db_column='CurrencyVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.CurrencyHistory'),
        ),
        migrations.AddField(
            model_name='accessorialstorageoverridehistory',
            name='request_section_version_id',
            field=models.ForeignKey(db_column='RequestSectionVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RequestSectionHistory'),
        ),
        migrations.AddField(
            model_name='accessorialstorageoverridehistory',
            name='request_version_id',
            field=models.ForeignKey(db_column='RequestVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RequestHistory'),
        ),
        migrations.AddField(
            model_name='accessorialstorageoverridehistory',
            name='sub_service_level_version_id',
            field=models.ForeignKey(db_column='SubServiceLevelVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevelHistory'),
        ),
        migrations.AddField(
            model_name='accessorialstorageoverridehistory',
            name='unit_version_id',
            field=models.ForeignKey(db_column='UnitVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.UnitHistory'),
        ),
        migrations.AddField(
            model_name='accessorialstorageoverride',
            name='currency_id',
            field=models.ForeignKey(db_column='CurrencyID', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.Currency'),
        ),
        migrations.AddField(
            model_name='accessorialstorageoverride',
            name='request_id',
            field=models.ForeignKey(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Request'),
        ),
        migrations.AddField(
            model_name='accessorialstorageoverride',
            name='request_section_id',
            field=models.ForeignKey(db_column='RequestSectionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RequestSection'),
        ),
        migrations.AddField(
            model_name='accessorialstorageoverride',
            name='sub_service_level_id',
            field=models.ForeignKey(db_column='SubServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevel'),
        ),
        migrations.AddField(
            model_name='accessorialstorageoverride',
            name='unit_id',
            field=models.ForeignKey(db_column='UnitID', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Unit'),
        ),
        migrations.AddField(
            model_name='accessorialstoragehistory',
            name='currency_version_id',
            field=models.ForeignKey(db_column='CurrencyVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.CurrencyHistory'),
        ),
        migrations.AddField(
            model_name='accessorialstoragehistory',
            name='sub_service_level_version_id',
            field=models.ForeignKey(db_column='SubServiceLevelVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevelHistory'),
        ),
        migrations.AddField(
            model_name='accessorialstoragehistory',
            name='unit_version_id',
            field=models.ForeignKey(db_column='UnitVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.UnitHistory'),
        ),
        migrations.AddField(
            model_name='accessorialstorage',
            name='currency_id',
            field=models.ForeignKey(db_column='CurrencyID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.Currency'),
        ),
        migrations.AddField(
            model_name='accessorialstorage',
            name='sub_service_level_id',
            field=models.ForeignKey(db_column='SubServiceLevelID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevel'),
        ),
        migrations.AddField(
            model_name='accessorialstorage',
            name='unit_id',
            field=models.ForeignKey(db_column='UnitID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.Unit'),
        ),
        migrations.AddField(
            model_name='accessorialoverridehistory',
            name='commodity_version_id',
            field=models.ForeignKey(db_column='CommodityVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.CommodityHistory'),
        ),
        migrations.AddField(
            model_name='accessorialoverridehistory',
            name='destination_type_version_id',
            field=models.ForeignKey(db_column='DestinationTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointTypeHistory'),
        ),
        migrations.AddField(
            model_name='accessorialoverridehistory',
            name='origin_type_version_id',
            field=models.ForeignKey(db_column='OriginTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointTypeHistory'),
        ),
        migrations.AddField(
            model_name='accessorialoverridehistory',
            name='request_section_version_id',
            field=models.ForeignKey(db_column='RequestSectionVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RequestSectionHistory'),
        ),
        migrations.AddField(
            model_name='accessorialoverridehistory',
            name='request_version_id',
            field=models.ForeignKey(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Request'),
        ),
        migrations.AddField(
            model_name='accessorialoverridehistory',
            name='sub_service_level_version_id',
            field=models.ForeignKey(db_column='SubServiceLevelVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.SubServiceLevelHistory'),
        ),
        migrations.AddField(
            model_name='accessorialoverride',
            name='acc_rate_factor_id',
            field=models.ForeignKey(db_column='AccRateFactorID', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccFactor'),
        ),
        migrations.AddField(
            model_name='accessorialoverride',
            name='acc_rate_range_field1ID',
            field=models.ForeignKey(db_column='AccRangeTypeID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccRangeType'),
        ),
        migrations.AddField(
            model_name='accessorialoverride',
            name='commodity_id',
            field=models.ForeignKey(db_column='CommodityID', default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.Commodity'),
        ),
        migrations.AddField(
            model_name='accessorialoverride',
            name='destination_type_id',
            field=models.ForeignKey(db_column='DestinationTypeID', default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointType'),
        ),
        migrations.AddField(
            model_name='accessorialoverride',
            name='origin_type_id',
            field=models.ForeignKey(db_column='OriginTypeID', default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointType'),
        ),
        migrations.AddField(
            model_name='accessorialoverride',
            name='request_id',
            field=models.ForeignKey(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Request'),
        ),
        migrations.AddField(
            model_name='accessorialoverride',
            name='request_section_id',
            field=models.ForeignKey(db_column='RequestSectionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RequestSection'),
        ),
        migrations.AddField(
            model_name='accessorialoverride',
            name='sub_service_level_id',
            field=models.ForeignKey(db_column='SubServiceLevelID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.SubServiceLevel'),
        ),
        migrations.AddField(
            model_name='accessorialheaderhistory',
            name='acc_range_field_version_id',
            field=models.ForeignKey(db_column='AccRangeFieldVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccRangeTypeHistory'),
        ),
        migrations.AddField(
            model_name='accessorialheaderhistory',
            name='currency_version_id',
            field=models.ForeignKey(db_column='CurrencyVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.CurrencyHistory'),
        ),
        migrations.AddField(
            model_name='accessorialheader',
            name='acc_range_field_id',
            field=models.ForeignKey(db_column='AccRangeFieldID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccRangeType'),
        ),
        migrations.AddField(
            model_name='accessorialheader',
            name='currency_id',
            field=models.ForeignKey(db_column='CurrencyID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.Currency'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverridehistory',
            name='acc_header_version_id',
            field=models.ForeignKey(db_column='AccHeaderVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialHeaderHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverridehistory',
            name='currency_version_id',
            field=models.ForeignKey(db_column='CurrencyVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.CurrencyHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverridehistory',
            name='destination_type_version_id',
            field=models.ForeignKey(db_column='DestinationTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointTypeHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverridehistory',
            name='equipment_type_version_id',
            field=models.ForeignKey(db_column='EquipmentTypeVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.EquipmentTypeHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverridehistory',
            name='free_time_version_id',
            field=models.ForeignKey(db_column='FreeTimeVersionID', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.FreeTimeHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverridehistory',
            name='origin_type_version_id',
            field=models.ForeignKey(db_column='OriginTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointTypeHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverridehistory',
            name='request_section_version_id',
            field=models.ForeignKey(db_column='RequestSectionVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RequestSectionHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverridehistory',
            name='request_version_id',
            field=models.ForeignKey(db_column='RequestVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.Request'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverridehistory',
            name='sub_service_level_version_id',
            field=models.ForeignKey(db_column='SubServiceLevelVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevelHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverride',
            name='acc_header_id',
            field=models.ForeignKey(db_column='AccHeaderID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialHeader'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverride',
            name='currency_id',
            field=models.ForeignKey(db_column='CurrencyID', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.Currency'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverride',
            name='destination_type_id',
            field=models.ForeignKey(db_column='DestinationTypeID', default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointType'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverride',
            name='equipment_type_id',
            field=models.ForeignKey(db_column='EquipmentTypeID', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.EquipmentType'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverride',
            name='free_time_id',
            field=models.ForeignKey(db_column='FreeTimeID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.FreeTime'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverride',
            name='origin_type_id',
            field=models.ForeignKey(db_column='OriginTypeID', default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointType'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverride',
            name='request_id',
            field=models.ForeignKey(db_column='RequestID', on_delete=django.db.models.deletion.CASCADE, to='rrf.Request'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverride',
            name='request_section_id',
            field=models.ForeignKey(db_column='RequestSectionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.RequestSection'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionoverride',
            name='sub_service_level_id',
            field=models.ForeignKey(db_column='SubServiceLevelID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.SubServiceLevel'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionhistory',
            name='acc_header_version_id',
            field=models.ForeignKey(db_column='AccHeaderVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialHeaderHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionhistory',
            name='currency_version_id',
            field=models.ForeignKey(db_column='CurrencyVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.CurrencyHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionhistory',
            name='destination_type_version_id',
            field=models.ForeignKey(db_column='DestinationTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointTypeHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionhistory',
            name='origin_type_version_id',
            field=models.ForeignKey(db_column='OriginTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointTypeHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetentionhistory',
            name='sub_service_level_version_id',
            field=models.ForeignKey(db_column='SubServiceLevelVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevelHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetention',
            name='acc_header_id',
            field=models.ForeignKey(db_column='AccHeaderID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialHeader'),
        ),
        migrations.AddField(
            model_name='accessorialdetention',
            name='currency_id',
            field=models.ForeignKey(db_column='CurrencyID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.Currency'),
        ),
        migrations.AddField(
            model_name='accessorialdetention',
            name='destination_type_id',
            field=models.ForeignKey(db_column='DestinationTypeID', default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointType'),
        ),
        migrations.AddField(
            model_name='accessorialdetention',
            name='origin_type_id',
            field=models.ForeignKey(db_column='OriginTypeID', default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointType'),
        ),
        migrations.AddField(
            model_name='accessorialdetention',
            name='sub_service_level_id',
            field=models.ForeignKey(db_column='SubServiceLevelID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.SubServiceLevel'),
        ),
        migrations.AddField(
            model_name='accessorialdetailhistory',
            name='acc_header_version_id',
            field=models.ForeignKey(db_column='AccHeaderVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialHeaderHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetailhistory',
            name='acc_range_type_version_id',
            field=models.ForeignKey(db_column='AccRangeTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccRangeTypeHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetailhistory',
            name='commodity_version_id',
            field=models.ForeignKey(db_column='CommodityVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.CommodityHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetailhistory',
            name='destination_type_version_id',
            field=models.ForeignKey(db_column='DestinationTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointTypeHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetailhistory',
            name='origin_type_version_id',
            field=models.ForeignKey(db_column='OriginTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointTypeHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetailhistory',
            name='service_type_version',
            field=models.ForeignKey(db_column='ServiceTypeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.ServiceTypeHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetailhistory',
            name='sub_service_level_version_id',
            field=models.ForeignKey(db_column='SubServiceLevelVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.SubServiceLevelHistory'),
        ),
        migrations.AddField(
            model_name='accessorialdetail',
            name='acc_header_id',
            field=models.ForeignKey(db_column='AccHeaderID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialHeader'),
        ),
        migrations.AddField(
            model_name='accessorialdetail',
            name='acc_rate_range_field1ID',
            field=models.ForeignKey(db_column='AccRateRangeField1ID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccRangeType'),
        ),
        migrations.AddField(
            model_name='accessorialdetail',
            name='commodity_id',
            field=models.ForeignKey(blank=True, db_column='CommodityID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.Commodity'),
        ),
        migrations.AddField(
            model_name='accessorialdetail',
            name='destination_type_id',
            field=models.ForeignKey(db_column='DestinationTypeID', default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointType'),
        ),
        migrations.AddField(
            model_name='accessorialdetail',
            name='origin_type_id',
            field=models.ForeignKey(db_column='OriginTypeID', default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.PointType'),
        ),
        migrations.AddField(
            model_name='accessorialdetail',
            name='service_type',
            field=models.ForeignKey(db_column='ServiceTypeID', null=True, on_delete=django.db.models.deletion.CASCADE, to='rrf.ServiceType'),
        ),
        migrations.AddField(
            model_name='accessorialdetail',
            name='sub_service_level_id',
            field=models.ForeignKey(blank=True, db_column='SubServiceLevelID', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='pac.SubServiceLevel'),
        ),
        migrations.AlterIndexTogether(
            name='zonehistory',
            index_together={('zone', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='userservicelevelhistory',
            index_together={('user_service_level', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='termshistory',
            index_together={('acc_term_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='tariffhistory',
            index_together={('tariff', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='tariff',
            index_together={('tariff_id', 'revision_number')},
        ),
        migrations.AlterIndexTogether(
            name='subpostalcodehistory',
            index_together={('sub_postal_code_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='servicetypehistory',
            index_together={('service_type', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='servicematrixhistory',
            index_together={('service_matrix', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='serviceclassmaphistory',
            index_together={('service_class_map', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='salesincentivehistory',
            index_together={('sales_incentive_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='reviewhistory',
            index_together={('review_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='revenuehistoryhistory',
            index_together={('revenue_history_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='revenuebreakdownhistory',
            index_together={('revenue_breakdown_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requesttypehistory',
            index_together={('request_type', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requeststatustypehistory',
            index_together={('request_status_type', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requestsectionlanepricingpointhistory',
            index_together={('request_section_lane_pricing_point', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requestsectionlanepointtypehistory',
            index_together={('request_section_lane_point_type', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requestsectionlanehistory',
            index_together={('request_section_lane', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requestsectionhistory',
            index_together={('request_section', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requestprofilehistory',
            index_together={('request_profile', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requestinformationhistory',
            index_together={('request_information', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='requesthistory',
            index_together={('request', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='ratebasehistory',
            index_together={('rate_base', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='profitlosssummaryhistory',
            index_together={('profit_loss_summary_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='pointtypehistory',
            index_together={('point_type_id', 'version_num')},
        ),
        migrations.AlterUniqueTogether(
            name='lastassigneduser',
            unique_together={('persona_name', 'service_level')},
        ),
        migrations.AlterIndexTogether(
            name='languagehistory',
            index_together={('language', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='lanetypehistory',
            index_together={('lane_type_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='interlinercostshistory',
            index_together={('rate_sheet_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='freightclasshistory',
            index_together={('freight_class', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='freetimehistory',
            index_together={('free_time_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='equipmenttypemaphistory',
            index_together={('equipment_type_map', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='equipmenttypehistory',
            index_together={('equipment_type', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='customerzoneshistory',
            index_together={('customer_zone_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='customerhistory',
            index_together={('customer', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='currencyhistory',
            index_together={('currency', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='commodityhistory',
            index_together={('commodity_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='accrangetypehistory',
            index_together={('acc_range_type_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='accounttreehistory',
            index_together={('account_tree', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='accfactorhistory',
            index_together={('acc_factor_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='accessorialstorageoverridehistory',
            index_together={('acc_storage_override_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='accessorialstoragehistory',
            index_together={('acc_storage_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='accessorialoverridehistory',
            index_together={('acc_override_id', 'version_num')},
        ),
        migrations.AlterUniqueTogether(
            name='accessorialoverride',
            unique_together={('request_id', 'acc_header_id', 'origin_id', 'origin_type_id', 'destination_id', 'destination_type_id', 'request_section_id')},
        ),
        migrations.AlterIndexTogether(
            name='accessorialheaderhistory',
            index_together={('acc_header_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='accessorialdetentionoverridehistory',
            index_together={('acc_detention_override_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='accessorialdetentionhistory',
            index_together={('acc_detention_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='accessorialdetailhistory',
            index_together={('acc_detail_id', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='accchargebehaviorhistory',
            index_together={('acc_charge_behavior_id', 'version_num')},
        ),
    ]
