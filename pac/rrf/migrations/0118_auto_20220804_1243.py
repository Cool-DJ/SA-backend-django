# Generated by Django 2.1.13 on 2022-08-04 15:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('pac', '0030_auto_20220804_0214'),
        ('rrf', '0117_auto_20220804_0221'),
    ]

    operations = [
        migrations.CreateModel(
            name='EquipmentTypeMap',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('equipment_type_map_id', models.BigAutoField(db_column='EquipmentTypeMapID', primary_key=True, serialize=False)),
                ('tmid', models.IntegerField(db_column='TMID', default=None)),
                ('equipment_type_id', models.ForeignKey(db_column='EquipmentTypeID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.EquipmentType')),
            ],
            options={
                'verbose_name_plural': 'EquipmentTypeMap',
                'db_table': 'EquipmentTypeMap',
            },
        ),
        migrations.CreateModel(
            name='EquipmentTypeMapHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('equipment_type_map_version_id', models.BigAutoField(db_column='EquipmentTypeMapVersionID', primary_key=True, serialize=False)),
                ('tmid', models.IntegerField(db_column='TMID', default=None)),
                ('equipment_type_map', models.ForeignKey(db_column='EquipmentTypeMapID', on_delete=django.db.models.deletion.CASCADE, to='rrf.EquipmentTypeMap')),
                ('equipment_type_version_id', models.ForeignKey(db_column='EquipmentTypeVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.EquipmentTypeHistory')),
            ],
            options={
                'verbose_name_plural': 'EquipmentTypeMap_History',
                'db_table': 'EquipmentTypeMap_History',
            },
        ),
        migrations.CreateModel(
            name='ServiceClassMap',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_class_map_id', models.BigAutoField(db_column='ServiceClassMapID', primary_key=True, serialize=False)),
                ('tmid', models.IntegerField(db_column='TMID', default=None)),
                ('acc_header_id', models.ForeignKey(db_column='AccHeaderID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialHeader')),
                ('service_level', models.ForeignKey(db_column='ServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevel')),
            ],
            options={
                'verbose_name_plural': 'ServiceClassMap',
                'db_table': 'ServiceClassMap',
            },
        ),
        migrations.CreateModel(
            name='ServiceClassMapHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_class_map_version_id', models.BigAutoField(db_column='ServiceClassMapVersionID', primary_key=True, serialize=False)),
                ('tmid', models.IntegerField(db_column='TMID', default=None)),
                ('acc_header_version_id', models.ForeignKey(db_column='AccHeaderVersionID', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='rrf.AccessorialHeaderHistory')),
                ('service_class_map', models.ForeignKey(db_column='ServiceClassMapID', on_delete=django.db.models.deletion.CASCADE, to='rrf.ServiceClassMap')),
                ('service_level_version', models.ForeignKey(db_column='ServiceLevelVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevelHistory')),
            ],
            options={
                'verbose_name_plural': 'ServiceClassMap_History',
                'db_table': 'ServiceClassMap_History',
            },
        ),
        migrations.RemoveField(
            model_name='accessorialdetention',
            name='equipment_type_id',
        ),
        migrations.RemoveField(
            model_name='accessorialdetention',
            name='free_time_id',
        ),
        migrations.RemoveField(
            model_name='accessorialdetentionhistory',
            name='equipment_type_version_id',
        ),
        migrations.RemoveField(
            model_name='accessorialdetentionhistory',
            name='free_time_version_id',
        ),
        migrations.AddField(
            model_name='freetime',
            name='calc_order',
            field=models.BigIntegerField(db_column='CalcOrder', default=None, null=True),
        ),
        migrations.AddField(
            model_name='freetime',
            name='free_time',
            field=models.TextField(db_column='FreeTime', default=None, null=True),
        ),
        migrations.AddField(
            model_name='freetime',
            name='free_time_unit',
            field=models.TextField(db_column='FreeTimeUnit', default=None, max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='freetime',
            name='rate_unit',
            field=models.TextField(db_column='RateUnit', default=None, max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='freetimehistory',
            name='calc_order',
            field=models.BigIntegerField(db_column='CalcOrder', default=None, null=True),
        ),
        migrations.AddField(
            model_name='freetimehistory',
            name='free_time',
            field=models.TextField(db_column='FreeTime', default=None, null=True),
        ),
        migrations.AddField(
            model_name='freetimehistory',
            name='free_time_unit',
            field=models.TextField(db_column='FreeTimeUnit', default=None, max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='freetimehistory',
            name='rate_unit',
            field=models.TextField(db_column='RateUnit', default=None, max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='freetimehistory',
            name='tm_detention_id',
            field=models.BigIntegerField(db_column='TMDetentionID', default=None, null=True),
        ),
        migrations.AlterField(
            model_name='accessorialdetention',
            name='detention_type',
            field=models.CharField(db_column='DetentionType', default=None, max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='accessorialdetentionhistory',
            name='detention_type',
            field=models.CharField(db_column='DetentionType', default=None, max_length=50, null=True),
        ),
        migrations.AlterIndexTogether(
            name='serviceclassmaphistory',
            index_together={('service_class_map', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='equipmenttypemaphistory',
            index_together={('equipment_type_map', 'version_num')},
        ),
    ]
