# Generated by Django 2.1.13 on 2022-09-22 18:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0002_auto_20220510_1629'),
        ('pac', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LocationTreeView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_column='Code', max_length=100)),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('point_type_id', models.IntegerField(db_column='PointTypeID')),
                ('point_type_name', models.CharField(db_column='PointTypeName', max_length=100)),
                ('point_type_order_id', models.IntegerField(db_column='PointTypeOrderID')),
            ],
            options={
                'db_table': 'V_LocationTree',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('account_id', models.BigAutoField(db_column='AccountID', primary_key=True, serialize=False)),
                ('account_number', models.CharField(db_column='AccountNumber', max_length=50)),
                ('account_name', models.CharField(db_column='AccountName', max_length=100)),
                ('account_alias', models.CharField(db_column='AccountAlias', max_length=100, null=True)),
                ('address_line_1', models.CharField(db_column='AddressLine1', max_length=100)),
                ('address_line_2', models.CharField(db_column='AddressLine2', max_length=100, null=True)),
                ('postal_code', models.CharField(db_column='PostalCode', max_length=10)),
                ('contact_name', models.CharField(db_column='ContactName', max_length=100, null=True)),
                ('contact_title', models.CharField(db_column='ContactTitle', max_length=100, null=True)),
                ('phone', models.CharField(db_column='Phone', max_length=100, null=True)),
                ('email', models.CharField(db_column='Email', max_length=100, null=True)),
                ('website', models.CharField(db_column='Website', max_length=100, null=True)),
                ('external_erp_id', models.CharField(blank=True, db_column='ExternalERPID', max_length=100, null=True)),
                ('external_city_name', models.CharField(blank=True, db_column='ExternalCityName', max_length=100, null=True)),
                ('external_tm_id', models.CharField(blank=True, db_column='ExternalTMID', max_length=100, null=True)),
                ('is_paying_by_credit_card', models.BooleanField(db_column='IsPayingByCreditCard', default=True, null=True)),
                ('is_extended_payment', models.BooleanField(db_column='IsExtendedPayment', default=True, null=True)),
                ('is_extended_payment_erp', models.BooleanField(db_column='IsExtendedPayment_ERP', default=True, null=True)),
                ('extended_payment_terms_margin', models.FloatField(db_column='ExtendedPaymentTermsMargin', default=True, null=True)),
                ('extended_payment_days', models.IntegerField(db_column='ExtendedPaymentDays', null=True)),
                ('extended_payment_days_erp', models.IntegerField(db_column='ExtendedPaymentDays_ERP', null=True)),
                ('account_owner', models.ForeignKey(db_column='AccountOwnerID', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Account',
            },
        ),
        migrations.CreateModel(
            name='AccountHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('account_version_id', models.BigAutoField(db_column='AccountVersionID', primary_key=True, serialize=False)),
                ('account_number', models.CharField(db_column='AccountNumber', max_length=50)),
                ('account_name', models.CharField(db_column='AccountName', max_length=100)),
                ('account_alias', models.CharField(db_column='AccountAlias', max_length=100, null=True)),
                ('address_line_1', models.CharField(db_column='AddressLine1', max_length=100)),
                ('address_line_2', models.CharField(db_column='AddressLine2', max_length=100, null=True)),
                ('postal_code', models.CharField(db_column='PostalCode', max_length=10)),
                ('contact_name', models.CharField(db_column='ContactName', max_length=100, null=True)),
                ('contact_title', models.CharField(db_column='ContactTitle', max_length=100, null=True)),
                ('phone', models.CharField(db_column='Phone', max_length=100, null=True)),
                ('email', models.CharField(db_column='Email', max_length=100, null=True)),
                ('website', models.CharField(db_column='Website', max_length=100, null=True)),
                ('external_erp_id', models.CharField(blank=True, db_column='ExternalERPID', max_length=100, null=True)),
                ('external_city_name', models.CharField(blank=True, db_column='ExternalCityName', max_length=100, null=True)),
                ('external_tm_id', models.CharField(blank=True, db_column='ExternalTMID', max_length=100, null=True)),
                ('is_paying_by_credit_card', models.BooleanField(db_column='IsPayingByCreditCard', default=True, null=True)),
                ('is_extended_payment', models.BooleanField(db_column='IsExtendedPayment', default=True, null=True)),
                ('is_extended_payment_erp', models.BooleanField(db_column='IsExtendedPayment_ERP', default=True, null=True)),
                ('extended_payment_terms_margin', models.FloatField(db_column='ExtendedPaymentTermsMargin', default=True, null=True)),
                ('extended_payment_days', models.IntegerField(db_column='ExtendedPaymentDays', null=True)),
                ('extended_payment_days_erp', models.IntegerField(db_column='ExtendedPaymentDays_ERP', null=True)),
                ('account', models.ForeignKey(db_column='AccountID', on_delete=django.db.models.deletion.CASCADE, to='pac.Account')),
                ('account_owner_version', models.ForeignKey(db_column='AccountOwnerVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.UserHistory')),
            ],
            options={
                'db_table': 'Account_History',
            },
        ),
        migrations.CreateModel(
            name='BasingPoint',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('basing_point_id', models.BigAutoField(db_column='BasingPointID', primary_key=True, serialize=False)),
                ('basing_point_name', models.CharField(db_column='BasingPointName', max_length=50, null=True)),
                ('basing_point_code', models.CharField(db_column='BasingPointCode', default='Test', max_length=10, null=True, unique=True)),
                ('description', models.TextField(db_column='Description', max_length=100, null=True)),
                ('default_terminal_id', models.BigIntegerField(blank=True, db_column='DefaultTerminalID', null=True)),
                ('legacy_id', models.BigIntegerField(blank=True, db_column='LegacyID', null=True)),
            ],
            options={
                'db_table': 'BasingPoint',
            },
        ),
        migrations.CreateModel(
            name='BasingPointHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('basing_point_version_id', models.BigAutoField(db_column='BasingPointVersionID', primary_key=True, serialize=False)),
                ('basing_point_name', models.CharField(db_column='BasingPointName', max_length=50, null=True)),
                ('basing_point_code', models.CharField(db_column='BasingPointCode', default='Test', max_length=10, null=True, unique=True)),
                ('description', models.TextField(db_column='Description', max_length=100, null=True)),
                ('default_terminal_version_id', models.BigIntegerField(blank=True, db_column='DefaultTerminalVersionID', null=True)),
                ('legacy_id', models.BigIntegerField(blank=True, db_column='LegacyID', null=True)),
                ('basing_point', models.ForeignKey(db_column='BasingPointID', on_delete=django.db.models.deletion.CASCADE, to='pac.BasingPoint')),
            ],
            options={
                'db_table': 'BasingPoint_History',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('country_id', models.BigAutoField(db_column='CountryID', primary_key=True, serialize=False)),
                ('country_name', models.CharField(db_column='CountryName', max_length=50, null=True, unique=True)),
                ('country_code', models.CharField(db_column='CountryCode', max_length=2, unique=True)),
                ('description', models.TextField(db_column='Description', max_length=100, null=True)),
                ('legacy_id', models.BigIntegerField(blank=True, db_column='LegacyID', null=True)),
            ],
            options={
                'db_table': 'Country',
            },
        ),
        migrations.CreateModel(
            name='CountryHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('country_version_id', models.BigAutoField(db_column='CountryVersionID', primary_key=True, serialize=False)),
                ('country_name', models.CharField(db_column='CountryName', max_length=50, null=True)),
                ('country_code', models.CharField(db_column='CountryCode', max_length=2)),
                ('description', models.TextField(db_column='Description', max_length=100, null=True)),
                ('legacy_id', models.BigIntegerField(blank=True, db_column='LegacyID', null=True)),
                ('country', models.ForeignKey(db_column='CountryID', on_delete=django.db.models.deletion.CASCADE, to='pac.Country')),
            ],
            options={
                'db_table': 'Country_History',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('notification_id', models.BigAutoField(db_column='NotificationID', primary_key=True, serialize=False)),
                ('message', models.TextField(db_column='Message', default='')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_column='Timestamp')),
                ('is_read', models.BooleanField(db_column='IsRead', default=False)),
                ('meta', models.TextField(blank=True, db_column='Meta', default='', null=True)),
                ('is_new', models.BooleanField(db_column='IsNew', default=True)),
                ('user', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Notification',
            },
        ),
        migrations.CreateModel(
            name='NotificationHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('notification_version_id', models.BigAutoField(db_column='NotificationVersionID', primary_key=True, serialize=False)),
                ('message', models.TextField(db_column='Message', default='')),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
                ('is_read', models.BooleanField(db_column='IsRead')),
                ('is_new', models.BooleanField(db_column='IsNew')),
                ('notification', models.ForeignKey(db_column='NotificationID', on_delete=django.db.models.deletion.CASCADE, to='pac.Notification')),
                ('user_version', models.ForeignKey(db_column='UserVersionID', on_delete=django.db.models.deletion.CASCADE, to='core.UserHistory')),
            ],
            options={
                'db_table': 'Notification_History',
            },
        ),
        migrations.CreateModel(
            name='PostalCode',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('postal_code_id', models.BigAutoField(db_column='PostalCodeID', primary_key=True, serialize=False)),
                ('postal_code_name', models.CharField(db_column='PostalCodeName', max_length=10, null=True)),
                ('description', models.CharField(db_column='Description', max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, db_column='PostalCode', max_length=10, null=True)),
                ('legacy_id', models.BigIntegerField(blank=True, db_column='LegacyID', null=True)),
                ('basing_point_id', models.ForeignKey(db_column='BasingPointID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.BasingPoint')),
            ],
            options={
                'db_table': 'PostalCode',
            },
        ),
        migrations.CreateModel(
            name='PostalCodeHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('postal_code_version_id', models.BigAutoField(db_column='PostalCodeVersionID', primary_key=True, serialize=False)),
                ('postal_code_name', models.CharField(db_column='PostalCodeName', max_length=10, null=True)),
                ('description', models.CharField(db_column='Description', max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, db_column='PostalCode', max_length=10, null=True)),
                ('legacy_id', models.BigIntegerField(blank=True, db_column='LegacyID', null=True)),
                ('basing_point_version_id', models.ForeignKey(db_column='BasingPointVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.BasingPointHistory')),
                ('postal_code_id', models.ForeignKey(db_column='PostalCodeID', on_delete=django.db.models.deletion.CASCADE, to='pac.PostalCode')),
            ],
            options={
                'db_table': 'PostalCode_History',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('province_id', models.BigAutoField(db_column='ProvinceID', primary_key=True, serialize=False)),
                ('province_name', models.CharField(db_column='ProvinceName', max_length=50, null=True)),
                ('province_code', models.CharField(db_column='ProvinceCode', max_length=4, unique=True)),
                ('description', models.TextField(db_column='Description', max_length=100, null=True)),
                ('legacy_id', models.BigIntegerField(blank=True, db_column='LegacyID', null=True)),
            ],
            options={
                'db_table': 'Province',
            },
        ),
        migrations.CreateModel(
            name='ProvinceHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('province_version_id', models.BigAutoField(db_column='ProvinceVersionID', primary_key=True, serialize=False)),
                ('province_name', models.CharField(db_column='ProvinceName', max_length=50, null=True)),
                ('province_code', models.CharField(db_column='ProvinceCode', max_length=4)),
                ('description', models.TextField(db_column='Description', max_length=100, null=True)),
                ('legacy_id', models.BigIntegerField(blank=True, db_column='LegacyID', null=True)),
                ('province', models.ForeignKey(db_column='ProvinceID', on_delete=django.db.models.deletion.CASCADE, to='pac.Province')),
            ],
            options={
                'db_table': 'Province_History',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('region_id', models.BigAutoField(db_column='RegionID', primary_key=True, serialize=False)),
                ('region_name', models.CharField(blank=True, db_column='RegionName', max_length=50, null=True)),
                ('region_code', models.CharField(db_column='RegionCode', max_length=50, unique=True)),
                ('description', models.TextField(db_column='Description', max_length=100, null=True)),
                ('legacy_id', models.TextField(blank=True, db_column='LegacyID', null=True)),
                ('country', models.ForeignKey(db_column='CountryID', on_delete=django.db.models.deletion.CASCADE, to='pac.Country')),
            ],
            options={
                'db_table': 'Region',
            },
        ),
        migrations.CreateModel(
            name='RegionHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('region_version_id', models.BigAutoField(db_column='RegionVersionID', primary_key=True, serialize=False)),
                ('region_name', models.CharField(db_column='RegionName', max_length=50, null=True)),
                ('region_code', models.CharField(db_column='RegionCode', max_length=50)),
                ('description', models.TextField(db_column='Description', max_length=100, null=True)),
                ('legacy_id', models.TextField(blank=True, db_column='LegacyID', null=True)),
                ('country_version', models.ForeignKey(db_column='CountryVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.CountryHistory')),
                ('region', models.ForeignKey(db_column='RegionID', on_delete=django.db.models.deletion.CASCADE, to='pac.Region')),
            ],
            options={
                'db_table': 'Region_History',
            },
        ),
        migrations.CreateModel(
            name='ServiceLevel',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_level_id', models.BigAutoField(db_column='ServiceLevelID', primary_key=True, serialize=False)),
                ('service_level_name', models.CharField(db_column='ServiceLevelName', max_length=50)),
                ('service_level_code', models.CharField(db_column='ServiceLevelCode', max_length=10)),
                ('pricing_type', models.CharField(db_column='PricingType', max_length=50)),
            ],
            options={
                'db_table': 'ServiceLevel',
            },
        ),
        migrations.CreateModel(
            name='ServiceLevelHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_level_version_id', models.BigAutoField(db_column='ServiceLevelVersionID', primary_key=True, serialize=False)),
                ('service_level_name', models.CharField(db_column='ServiceLevelName', max_length=50)),
                ('service_level_code', models.CharField(db_column='ServiceLevelCode', max_length=10)),
                ('pricing_type', models.CharField(db_column='PricingType', max_length=50)),
                ('service_level', models.ForeignKey(db_column='ServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevel')),
            ],
            options={
                'db_table': 'ServiceLevel_History',
            },
        ),
        migrations.CreateModel(
            name='ServiceMode',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_mode_id', models.BigAutoField(db_column='ServiceModeID', primary_key=True, serialize=False)),
                ('service_mode_name', models.CharField(db_column='ServiceModeName', max_length=50)),
                ('service_mode_code', models.CharField(db_column='ServiceModeCode', max_length=1)),
            ],
            options={
                'db_table': 'ServiceMode',
            },
        ),
        migrations.CreateModel(
            name='ServiceModeHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_mode_version_id', models.BigAutoField(db_column='ServiceModeVersionID', primary_key=True, serialize=False)),
                ('service_mode_name', models.CharField(db_column='ServiceModeName', max_length=50)),
                ('service_mode_code', models.CharField(db_column='ServiceModeCode', max_length=1)),
                ('service_mode', models.ForeignKey(db_column='ServiceModeID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceMode')),
            ],
            options={
                'db_table': 'ServiceMode_History',
            },
        ),
        migrations.CreateModel(
            name='ServiceOffering',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_offering_id', models.BigAutoField(db_column='ServiceOfferingID', primary_key=True, serialize=False)),
                ('service_offering_name', models.CharField(db_column='ServiceOfferingName', max_length=50, unique=True)),
            ],
            options={
                'db_table': 'ServiceOffering',
            },
        ),
        migrations.CreateModel(
            name='ServiceOfferingHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_offering_version_id', models.BigAutoField(db_column='ServiceOfferingVersionID', primary_key=True, serialize=False)),
                ('service_offering_name', models.CharField(db_column='ServiceOfferingName', max_length=50)),
                ('service_offering', models.ForeignKey(db_column='ServiceOfferingID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOffering')),
            ],
            options={
                'db_table': 'ServiceOffering_History',
            },
        ),
        migrations.CreateModel(
            name='ServicePoint',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_point_id', models.BigAutoField(db_column='ServicePointID', primary_key=True, serialize=False)),
                ('service_point_name', models.CharField(db_column='ServicePointName', max_length=50, null=True)),
                ('service_point_code', models.CharField(db_column='ServicePointCode', default='', max_length=10)),
                ('description', models.TextField(db_column='Description', max_length=100, null=True)),
                ('legacy_id', models.BigIntegerField(blank=True, db_column='LegacyID', null=True)),
                ('basing_point_id', models.ForeignKey(db_column='BasingPointID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.BasingPoint')),
                ('default_postal_code_id', models.ForeignKey(db_column='DefaultPostalCodeID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.PostalCode')),
            ],
            options={
                'db_table': 'ServicePoint',
            },
        ),
        migrations.CreateModel(
            name='ServicePointHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('service_point_version_id', models.BigAutoField(db_column='ServicePointVersionID', primary_key=True, serialize=False)),
                ('service_point_name', models.CharField(db_column='ServicePointName', max_length=50, null=True)),
                ('service_point_code', models.CharField(db_column='ServicePointCode', default='', max_length=10)),
                ('description', models.TextField(db_column='Description', max_length=100, null=True)),
                ('legacy_id', models.BigIntegerField(blank=True, db_column='LegacyID', null=True)),
                ('basing_point_version_id', models.ForeignKey(db_column='BasingPointVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.BasingPointHistory')),
                ('default_postal_code_version_id', models.ForeignKey(db_column='DefaultPostalCodeVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.PostalCodeHistory')),
                ('service_point', models.ForeignKey(db_column='ServicePointID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServicePoint')),
            ],
            options={
                'db_table': 'ServicePoint_History',
            },
        ),
        migrations.CreateModel(
            name='SubServiceLevel',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('sub_service_level_id', models.BigAutoField(db_column='SubServiceLevelID', primary_key=True, serialize=False)),
                ('sub_service_level_name', models.CharField(db_column='SubServiceLevelName', max_length=50)),
                ('sub_service_level_code', models.CharField(db_column='SubServiceLevelCode', max_length=10)),
                ('service_level', models.ForeignKey(db_column='ServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevel')),
            ],
            options={
                'db_table': 'SubServiceLevel',
            },
        ),
        migrations.CreateModel(
            name='SubServiceLevelHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('sub_service_level_version_id', models.BigAutoField(db_column='SubServiceLevelVersionID', primary_key=True, serialize=False)),
                ('sub_service_level_name', models.CharField(db_column='SubServiceLevelName', max_length=50)),
                ('sub_service_level_code', models.CharField(db_column='SubServiceLevelCode', max_length=10)),
                ('service_level_version', models.ForeignKey(db_column='ServiceLevelVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevelHistory')),
                ('sub_service_level', models.ForeignKey(db_column='SubServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.SubServiceLevel')),
            ],
            options={
                'db_table': 'SubServiceLevel_History',
            },
        ),
        migrations.CreateModel(
            name='Terminal',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('terminal_id', models.BigAutoField(db_column='TerminalID', primary_key=True, serialize=False)),
                ('terminal_code', models.CharField(db_column='TerminalCode', max_length=10)),
                ('terminal_name', models.CharField(db_column='TerminalName', max_length=40, null=True)),
                ('description', models.TextField(db_column='Description', max_length=100, null=True)),
                ('legacy_id', models.BigIntegerField(blank=True, db_column='LegacyID', null=True)),
                ('postal_code', models.TextField(db_column='PostalCode', max_length=10, null=True)),
                ('basing_point_id', models.ForeignKey(db_column='BasingPointID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.BasingPoint')),
            ],
            options={
                'db_table': 'Terminal',
            },
        ),
        migrations.CreateModel(
            name='TerminalHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('terminal_version_id', models.BigAutoField(db_column='TerminalVersionID', primary_key=True, serialize=False)),
                ('terminal_code', models.CharField(db_column='TerminalCode', max_length=10)),
                ('terminal_name', models.CharField(db_column='TerminalName', max_length=40, null=True)),
                ('description', models.TextField(db_column='Description', max_length=100, null=True)),
                ('legacy_id', models.BigIntegerField(blank=True, db_column='LegacyID', null=True)),
                ('postal_code', models.TextField(db_column='PostalCode', max_length=10, null=True)),
                ('basing_point_version_id', models.ForeignKey(db_column='BasingPointVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.BasingPointHistory')),
                ('terminal', models.ForeignKey(db_column='TerminalID', on_delete=django.db.models.deletion.CASCADE, to='pac.Terminal')),
            ],
            options={
                'db_table': 'Terminal_History',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('unit_id', models.BigAutoField(db_column='UnitID', primary_key=True, serialize=False)),
                ('unit_name', models.CharField(db_column='UnitName', max_length=50)),
                ('unit_symbol', models.CharField(db_column='UnitSymbol', max_length=50)),
                ('unit_type', models.CharField(db_column='UnitType', max_length=50)),
            ],
            options={
                'db_table': 'Unit',
            },
        ),
        migrations.CreateModel(
            name='UnitHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('unit_version_id', models.BigAutoField(db_column='UnitVersionID', primary_key=True, serialize=False)),
                ('unit_name', models.CharField(db_column='UnitName', max_length=50)),
                ('unit_symbol', models.CharField(db_column='UnitSymbol', max_length=50)),
                ('unit_type', models.CharField(db_column='UnitType', max_length=50)),
                ('unit', models.ForeignKey(db_column='UnitID', on_delete=django.db.models.deletion.CASCADE, to='pac.Unit')),
            ],
            options={
                'db_table': 'Unit_History',
            },
        ),
        migrations.CreateModel(
            name='WeightBreakHeader',
            fields=[
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('weight_break_header_id', models.BigAutoField(db_column='WeightBreakHeaderID', primary_key=True, serialize=False)),
                ('weight_break_header_name', models.CharField(db_column='WeightBreakHeaderName', max_length=50)),
                ('unit_factor', models.DecimalField(db_column='UnitFactor', decimal_places=6, max_digits=19)),
                ('maximum_value', models.DecimalField(db_column='MaximumValue', decimal_places=6, max_digits=19)),
                ('as_rating', models.BooleanField(db_column='AsRating', default=True)),
                ('has_min', models.BooleanField(db_column='HasMin', default=True)),
                ('has_max', models.BooleanField(db_column='HasMax', default=True)),
                ('base_rate', models.BooleanField(db_column='BaseRate', default=True)),
                ('levels', models.TextField(db_column='Levels', default='[]')),
                ('service_level', models.ForeignKey(db_column='ServiceLevelID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevel')),
                ('unit', models.ForeignKey(db_column='UnitID', on_delete=django.db.models.deletion.CASCADE, to='pac.Unit')),
            ],
            options={
                'db_table': 'WeightBreakHeader',
            },
        ),
        migrations.CreateModel(
            name='WeightBreakHeaderHistory',
            fields=[
                ('version_num', models.IntegerField(db_column='VersionNum', default=1)),
                ('is_latest_version', models.BooleanField(db_column='IsLatestVersion', default=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, db_column='UpdatedOn')),
                ('updated_by', models.CharField(db_column='UpdatedBy', default='', max_length=50)),
                ('base_version', models.IntegerField(db_column='BaseVersion', default=None, null=True)),
                ('comments', models.CharField(db_column='Comments', default='', max_length=4000)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('is_inactive_viewable', models.BooleanField(db_column='IsInactiveViewable', default=True)),
                ('weight_break_header_version_id', models.BigAutoField(db_column='WeightBreakHeaderVersionID', primary_key=True, serialize=False)),
                ('weight_break_header_name', models.CharField(db_column='WeightBreakHeaderName', max_length=50)),
                ('unit_factor', models.DecimalField(db_column='UnitFactor', decimal_places=6, max_digits=19)),
                ('maximum_value', models.DecimalField(db_column='MaximumValue', decimal_places=6, max_digits=19)),
                ('as_rating', models.BooleanField(db_column='AsRating', default=True)),
                ('has_min', models.BooleanField(db_column='HasMin', default=True)),
                ('has_max', models.BooleanField(db_column='HasMax', default=True)),
                ('base_rate', models.BooleanField(db_column='BaseRate', default=True)),
                ('levels', models.TextField(db_column='Levels', default='[]')),
                ('service_level_version', models.ForeignKey(db_column='ServiceLevelVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceLevelHistory')),
                ('unit_version', models.ForeignKey(db_column='UnitVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.UnitHistory')),
                ('weight_break_header', models.ForeignKey(db_column='WeightBreakHeaderID', on_delete=django.db.models.deletion.CASCADE, to='pac.WeightBreakHeader')),
            ],
            options={
                'db_table': 'WeightBreakHeader_History',
            },
        ),
        migrations.AddField(
            model_name='servicemodehistory',
            name='service_offering_version',
            field=models.ForeignKey(db_column='ServiceOfferingVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOfferingHistory'),
        ),
        migrations.AddField(
            model_name='servicemode',
            name='service_offering',
            field=models.ForeignKey(db_column='ServiceOfferingID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOffering'),
        ),
        migrations.AddField(
            model_name='servicelevelhistory',
            name='service_offering_version',
            field=models.ForeignKey(db_column='ServiceOfferingVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOfferingHistory'),
        ),
        migrations.AddField(
            model_name='servicelevel',
            name='service_offering',
            field=models.ForeignKey(db_column='ServiceOfferingID', on_delete=django.db.models.deletion.CASCADE, to='pac.ServiceOffering'),
        ),
        migrations.AddField(
            model_name='provincehistory',
            name='region_version',
            field=models.ForeignKey(db_column='RegionVersionID', on_delete=django.db.models.deletion.CASCADE, to='pac.RegionHistory'),
        ),
        migrations.AddField(
            model_name='province',
            name='region',
            field=models.ForeignKey(db_column='RegionID', on_delete=django.db.models.deletion.CASCADE, to='pac.Region'),
        ),
        migrations.AddField(
            model_name='basingpointhistory',
            name='province_version_id',
            field=models.ForeignKey(blank=True, db_column='ProvinceVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.ProvinceHistory'),
        ),
        migrations.AddField(
            model_name='basingpoint',
            name='province_id',
            field=models.ForeignKey(blank=True, db_column='ProvinceID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.Province'),
        ),
        migrations.AddField(
            model_name='accounthistory',
            name='service_point_version',
            field=models.ForeignKey(db_column='ServicePointVersionID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.ServicePointHistory'),
        ),
        migrations.AddField(
            model_name='account',
            name='service_point',
            field=models.ForeignKey(db_column='ServicePointID', null=True, on_delete=django.db.models.deletion.CASCADE, to='pac.ServicePoint'),
        ),
        migrations.AlterIndexTogether(
            name='weightbreakheaderhistory',
            index_together={('weight_break_header', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='unithistory',
            index_together={('unit', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='terminalhistory',
            index_together={('terminal', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='subservicelevelhistory',
            index_together={('sub_service_level', 'version_num')},
        ),
        migrations.AlterUniqueTogether(
            name='subservicelevel',
            unique_together={('is_active', 'sub_service_level_code')},
        ),
        migrations.AlterIndexTogether(
            name='servicepointhistory',
            index_together={('service_point', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='serviceofferinghistory',
            index_together={('service_offering', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='servicemodehistory',
            index_together={('service_mode', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='servicemode',
            index_together={('service_offering', 'service_mode_code'), ('service_offering', 'service_mode_name')},
        ),
        migrations.AlterIndexTogether(
            name='servicelevelhistory',
            index_together={('service_level', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='servicelevel',
            index_together={('service_offering', 'service_level_code'), ('service_offering', 'service_level_name')},
        ),
        migrations.AlterIndexTogether(
            name='regionhistory',
            index_together={('region', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='provincehistory',
            index_together={('province', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='postalcodehistory',
            index_together={('postal_code', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='notificationhistory',
            index_together={('notification', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='countryhistory',
            index_together={('country', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='basingpointhistory',
            index_together={('basing_point', 'version_num')},
        ),
        migrations.AlterIndexTogether(
            name='accounthistory',
            index_together={('account', 'version_num')},
        ),
    ]
